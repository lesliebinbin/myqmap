{
"version":3,
"file":"module$node_modules$draft_js$lib$ContentState.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/draft-js/lib/ContentState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$ContentState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentState\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BlockMapBuilder = require('./BlockMapBuilder');\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\nvar SelectionState = require('./SelectionState');\n\nvar generateRandomKey = require('./generateRandomKey');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar List = Immutable.List,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\n\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\n\nvar defaultRecord = {\n  entityMap: null,\n  blockMap: null,\n  selectionBefore: null,\n  selectionAfter: null\n};\n\nvar ContentBlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\nvar ContentStateRecord = Record(defaultRecord);\n\nvar ContentState = function (_ContentStateRecord) {\n  _inherits(ContentState, _ContentStateRecord);\n\n  function ContentState() {\n    _classCallCheck(this, ContentState);\n\n    return _possibleConstructorReturn(this, _ContentStateRecord.apply(this, arguments));\n  }\n\n  ContentState.prototype.getEntityMap = function getEntityMap() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity;\n  };\n\n  ContentState.prototype.getBlockMap = function getBlockMap() {\n    return this.get('blockMap');\n  };\n\n  ContentState.prototype.getSelectionBefore = function getSelectionBefore() {\n    return this.get('selectionBefore');\n  };\n\n  ContentState.prototype.getSelectionAfter = function getSelectionAfter() {\n    return this.get('selectionAfter');\n  };\n\n  ContentState.prototype.getBlockForKey = function getBlockForKey(key) {\n    var block = this.getBlockMap().get(key);\n    return block;\n  };\n\n  ContentState.prototype.getKeyBefore = function getKeyBefore(key) {\n    return this.getBlockMap().reverse().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getKeyAfter = function getKeyAfter(key) {\n    return this.getBlockMap().keySeq().skipUntil(function (v) {\n      return v === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlockAfter = function getBlockAfter(key) {\n    return this.getBlockMap().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlockBefore = function getBlockBefore(key) {\n    return this.getBlockMap().reverse().skipUntil(function (_, k) {\n      return k === key;\n    }).skip(1).first();\n  };\n\n  ContentState.prototype.getBlocksAsArray = function getBlocksAsArray() {\n    return this.getBlockMap().toArray();\n  };\n\n  ContentState.prototype.getFirstBlock = function getFirstBlock() {\n    return this.getBlockMap().first();\n  };\n\n  ContentState.prototype.getLastBlock = function getLastBlock() {\n    return this.getBlockMap().last();\n  };\n\n  ContentState.prototype.getPlainText = function getPlainText(delimiter) {\n    return this.getBlockMap().map(function (block) {\n      return block ? block.getText() : '';\n    }).join(delimiter || '\\n');\n  };\n\n  ContentState.prototype.getLastCreatedEntityKey = function getLastCreatedEntityKey() {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__getLastCreatedEntityKey();\n  };\n\n  ContentState.prototype.hasText = function hasText() {\n    var blockMap = this.getBlockMap();\n    return blockMap.size > 1 || blockMap.first().getLength() > 0;\n  };\n\n  ContentState.prototype.createEntity = function createEntity(type, mutability, data) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__create(type, mutability, data);\n    return this;\n  };\n\n  ContentState.prototype.mergeEntityData = function mergeEntityData(key, toMerge) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__mergeData(key, toMerge);\n    return this;\n  };\n\n  ContentState.prototype.replaceEntityData = function replaceEntityData(key, newData) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__replaceData(key, newData);\n    return this;\n  };\n\n  ContentState.prototype.addEntity = function addEntity(instance) {\n    // TODO: update this when we fully remove DraftEntity\n    DraftEntity.__add(instance);\n    return this;\n  };\n\n  ContentState.prototype.getEntity = function getEntity(key) {\n    // TODO: update this when we fully remove DraftEntity\n    return DraftEntity.__get(key);\n  };\n\n  ContentState.createFromBlockArray = function createFromBlockArray(\n  // TODO: update flow type when we completely deprecate the old entity API\n  blocks, entityMap) {\n    // TODO: remove this when we completely deprecate the old entity API\n    var theBlocks = Array.isArray(blocks) ? blocks : blocks.contentBlocks;\n    var blockMap = BlockMapBuilder.createFromArray(theBlocks);\n    var selectionState = blockMap.isEmpty() ? new SelectionState() : SelectionState.createEmpty(blockMap.first().getKey());\n    return new ContentState({\n      blockMap: blockMap,\n      entityMap: entityMap || DraftEntity,\n      selectionBefore: selectionState,\n      selectionAfter: selectionState\n    });\n  };\n\n  ContentState.createFromText = function createFromText(text) {\n    var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : /\\r\\n?|\\n/g;\n\n    var strings = text.split(delimiter);\n    var blocks = strings.map(function (block) {\n      block = sanitizeDraftText(block);\n      return new ContentBlockNodeRecord({\n        key: generateRandomKey(),\n        text: block,\n        type: 'unstyled',\n        characterList: List(Repeat(CharacterMetadata.EMPTY, block.length))\n      });\n    });\n    return ContentState.createFromBlockArray(blocks);\n  };\n\n  return ContentState;\n}(ContentStateRecord);\n\nmodule.exports = ContentState;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","BlockMapBuilder","CharacterMetadata","ContentBlock","ContentBlockNode","DraftEntity","DraftFeatureFlags","Immutable","SelectionState","generateRandomKey","sanitizeDraftText","List","Record","Repeat","experimentalTreeDataSupport","draft_tree_data_support","defaultRecord","entityMap","blockMap","selectionBefore","selectionAfter","ContentBlockNodeRecord","ContentStateRecord","ContentState","_ContentStateRecord","apply","arguments","getEntityMap","ContentState.prototype.getEntityMap","getBlockMap","ContentState.prototype.getBlockMap","get","getSelectionBefore","ContentState.prototype.getSelectionBefore","getSelectionAfter","ContentState.prototype.getSelectionAfter","getBlockForKey","ContentState.prototype.getBlockForKey","key","block","getKeyBefore","ContentState.prototype.getKeyBefore","reverse","keySeq","skipUntil","v","skip","first","getKeyAfter","ContentState.prototype.getKeyAfter","getBlockAfter","ContentState.prototype.getBlockAfter","_","k","getBlockBefore","ContentState.prototype.getBlockBefore","getBlocksAsArray","ContentState.prototype.getBlocksAsArray","toArray","getFirstBlock","ContentState.prototype.getFirstBlock","getLastBlock","ContentState.prototype.getLastBlock","last","getPlainText","ContentState.prototype.getPlainText","delimiter","map","getText","join","getLastCreatedEntityKey","ContentState.prototype.getLastCreatedEntityKey","__getLastCreatedEntityKey","hasText","ContentState.prototype.hasText","size","getLength","createEntity","ContentState.prototype.createEntity","type","mutability","data","__create","mergeEntityData","ContentState.prototype.mergeEntityData","toMerge","__mergeData","replaceEntityData","ContentState.prototype.replaceEntityData","newData","__replaceData","addEntity","ContentState.prototype.addEntity","__add","getEntity","ContentState.prototype.getEntity","__get","createFromBlockArray","ContentState.createFromBlockArray","blocks","theBlocks","Array","isArray","contentBlocks","createFromArray","selectionState","isEmpty","createEmpty","getKey","createFromText","ContentState.createFromText","text","length","undefined","strings","split","characterList","EMPTY"]
}
