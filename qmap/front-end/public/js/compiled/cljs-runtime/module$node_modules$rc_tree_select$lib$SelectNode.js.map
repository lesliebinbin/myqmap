{
"version":3,
"file":"module$node_modules$rc_tree_select$lib$SelectNode.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,mDAAf,CAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGnIC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAJ,QAAA,CAAQ,SAAR,CAAA,CAAqB,IAAK,EAE1B,KAAIK,OAASC,sBAAA,CAAuBR,OAAA,CAAQ,iCAAR,CAAvB,CAEb,KAAIS,QAAUT,OAAA,CAAQ,uCAAR,CAEd,KAAIU,WAAaV,OAAA,CAAQ,kDAAR,CAEjBQ,SAASA,uBAAsB,CAACG,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC;AAErCE,QAASA,cAAa,CAACC,MAAD,CAAS,CAAE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,SAAAC,OAApB,CAAsCF,CAAA,EAAtC,CAA2C,CAAE,IAAIG,OAASF,SAAA,CAAUD,CAAV,CAAA,EAAgB,IAAhB,CAAuBC,SAAA,CAAUD,CAAV,CAAvB,CAAsC,EAAI,KAAII,QAAUf,MAAAgB,KAAA,CAAYF,MAAZ,CAAqB,IAAI,MAAOd,OAAAiB,sBAAX,GAA4C,UAA5C,CAA0DF,OAAA,CAAUA,OAAAG,OAAA,CAAelB,MAAAiB,sBAAA,CAA6BH,MAA7B,CAAAK,OAAA,CAA4C,QAAS,CAACC,GAAD,CAAM,CAAE,MAAOpB,OAAAqB,yBAAA,CAAgCP,MAAhC,CAAwCM,GAAxC,CAAAE,WAAT,CAA3D,CAAf,CAAmJP,QAAAQ,QAAA,CAAgB,QAAS,CAACC,GAAD,CAAM,CAAEC,eAAA,CAAgBf,MAAhB,CAAwBc,GAAxB,CAA6BV,MAAA,CAAOU,GAAP,CAA7B,CAAF,CAA/B,CAAnT,CAAqY,MAAOd,OAAzb,CAE/Be,QAASA,gBAAe,CAAClB,GAAD,CAAMiB,GAAN,CAAWtB,KAAX,CAAkB,CAAE,GAAIsB,GAAJ,GAAWjB,IAAX,CAAkBP,MAAAC,eAAA,CAAsBM,GAAtB;AAA2BiB,GAA3B,CAAgC,CAAEtB,MAAOA,KAAT,CAAgBoB,WAAY,IAA5B,CAAkCI,aAAc,IAAhD,CAAsDC,SAAU,IAAhE,CAAhC,CAAlB,KAAoIpB,IAAA,CAAIiB,GAAJ,CAAA,CAAWtB,KAAS,OAAOK,IAAjK,CAO1C,IAAIqB,WAAaA,QAASA,WAAU,CAACC,KAAD,CAAQ,CAC1C,MAAO1B,OAAA,CAAO,SAAP,CAAA2B,cAAA,CAAgCzB,OAAA0B,SAAhC,CAAkDF,KAAlD,CADmC,CAI5CD,WAAAI,UAAA,CAAuBvB,aAAA,CAAc,EAAd,CAAkBJ,OAAA0B,SAAAC,UAAlB,CAA8C,CACnE9B,MAAOI,UAAA2B,UAD4D,CAA9C,CAIvBL,WAAAM,WAAA,CAAwB,CACxB,KAAIC,SAAWP,UACf9B,QAAA,CAAQ,SAAR,CAAA,CAAqBqC,QAnC8G;",
"sources":["node_modules/rc-tree-select/lib/SelectNode.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree_select$lib$SelectNode\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _rcTree = require(\"rc-tree\");\n\nvar _propTypes = require(\"./propTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * SelectNode wrapped the tree node.\n * Let's use SelectNode instead of TreeNode\n * since TreeNode is so confuse here.\n */\nvar SelectNode = function SelectNode(props) {\n  return _react[\"default\"].createElement(_rcTree.TreeNode, props);\n};\n\nSelectNode.propTypes = _objectSpread({}, _rcTree.TreeNode.propTypes, {\n  value: _propTypes.valueProp\n}); // Let Tree trade as TreeNode to reuse this for performance saving.\n\nSelectNode.isTreeNode = 1;\nvar _default = SelectNode;\nexports[\"default\"] = _default;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","_react","_interopRequireDefault","_rcTree","_propTypes","obj","__esModule","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","SelectNode","props","createElement","TreeNode","propTypes","valueProp","isTreeNode","_default"]
}
