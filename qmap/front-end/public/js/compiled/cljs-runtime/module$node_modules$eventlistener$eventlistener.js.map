{
"version":3,
"file":"module$node_modules$eventlistener$eventlistener.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAChI,SAAQ,CAACC,IAAD,CAAMC,OAAN,CAAc,CACnB,GAAI,MAAOC,OAAX,GAAsB,UAAtB,EAAoCA,MAAAC,IAApC,CACID,MAAA,CAAOD,OAAP,CADJ,KAEO,IAAI,MAAOH,QAAX,GAAuB,QAAvB,CACHD,MAAAC,QAAA,CAAiBG,OAAA,EADd,KAGHD,KAAAI,cAAA,CAAqBH,OAAA,EANN,CAAtB,CAAA,CAQC,IARD,CAQO,QAAS,EAAG,CACnBI,QAASA,KAAI,CAACC,QAAD,CAAWC,QAAX,CAAqB,CACjC,MAAO,SAAS,CAACC,EAAD,CAAKC,OAAL,CAAcC,QAAd,CAAwBC,UAAxB,CAAoC,CACnD,GAAIH,EAAA,CAAGF,QAAH,CAAJ,CACCE,EAAA,CAAGF,QAAH,CAAA,CAAaG,OAAb,CAAsBC,QAAtB,CAAgCC,UAAhC,CADD,KAEO,IAAIH,EAAA,CAAGD,QAAH,CAAJ,CACNC,EAAA,CAAGD,QAAH,CAAA,CAAa,IAAb,CAAoBE,OAApB;AAA6BC,QAA7B,CAJkD,CADnB,CAU/B,MAAO,CACTE,IAAKP,IAAA,CAAK,kBAAL,CAAyB,aAAzB,CADI,CAETQ,OAAQR,IAAA,CAAK,qBAAL,CAA4B,aAA5B,CAFC,CAXS,CARnB,CADgI;",
"sources":["node_modules/eventlistener/eventlistener.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eventlistener$eventlistener\"] = function(global,process,require,module,exports,shadow$shims) {\n(function(root,factory){\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.eventListener = factory();\n  }\n}(this, function () {\n\tfunction wrap(standard, fallback) {\n\t\treturn function (el, evtName, listener, useCapture) {\n\t\t\tif (el[standard]) {\n\t\t\t\tel[standard](evtName, listener, useCapture);\n\t\t\t} else if (el[fallback]) {\n\t\t\t\tel[fallback]('on' + evtName, listener);\n\t\t\t}\n\t\t}\n\t}\n\n    return {\n\t\tadd: wrap('addEventListener', 'attachEvent'),\n\t\tremove: wrap('removeEventListener', 'detachEvent')\n\t};\n}));\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","root","factory","define","amd","eventListener","wrap","standard","fallback","el","evtName","listener","useCapture","add","remove"]
}
