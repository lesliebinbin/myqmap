{
"version":3,
"file":"module$node_modules$fbjs$lib$DataTransfer.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/fbjs/lib/DataTransfer.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$DataTransfer\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar PhotosMimeType = require('./PhotosMimeType');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar emptyFunction = require('./emptyFunction');\n\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\n\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = function () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n\n    this.data = data;\n\n    // Types could be DOMStringList or array\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    }\n\n    // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n    return null;\n  };\n\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_classCallCheck","instance","Constructor","TypeError","PhotosMimeType","createArrayFromMixed","emptyFunction","CR_LF_REGEX","RegExp","LF_ONLY","RICH_TEXT_TYPES","getFileFromDataTransfer","item","kind","getAsFile","DataTransfer","data","types","prototype","isRichText","DataTransfer.prototype.isRichText","getHTML","getText","isImage","some","type","DataTransfer.prototype.getText","text","getData","length","indexOf","replace","DataTransfer.prototype.getHTML","isLink","DataTransfer.prototype.isLink","getLink","DataTransfer.prototype.getLink","url","split","DataTransfer.prototype.isImage","items","getFiles","i","getCount","DataTransfer.prototype.getCount","hasOwnProperty","mozItemCount","files","DataTransfer.prototype.getFiles","Array","slice","call","map","filter","thatReturnsArgument","hasFiles","DataTransfer.prototype.hasFiles"]
}
