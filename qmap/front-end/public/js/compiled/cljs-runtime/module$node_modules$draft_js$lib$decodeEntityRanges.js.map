{
"version":3,
"file":"module$node_modules$draft_js$lib$decodeEntityRanges.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBrI,IAAIC,aAAeJ,OAAA,CAAQ,2CAAR,CAEnB,KAAIK,OAASD,YAAAC,OAMbC,SAASA,mBAAkB,CAACC,IAAD,CAAOC,MAAP,CAAe,CACxC,IAAIC,SAAWC,KAAA,CAAMH,IAAAI,OAAN,CAAAC,KAAA,CAAwB,IAAxB,CACf,IAAIJ,MAAJ,CACEA,MAAAK,QAAA,CAAe,QAAS,CAACC,KAAD,CAAQ,CAG9B,IAAIC,MAAQV,MAAA,CAAOE,IAAP,CAAa,CAAb,CAAgBO,KAAAE,OAAhB,CAAAL,OACZ,KAAIM,IAAMF,KAANE,CAAcZ,MAAA,CAAOE,IAAP,CAAaO,KAAAE,OAAb,CAA2BF,KAAAH,OAA3B,CAAAA,OAClB,KAAK,IAAIO,GAAKH,KAAd,CAAqBG,EAArB,CAA0BD,GAA1B,CAA+BC,EAAA,EAA/B,CACET,QAAA,CAASS,EAAT,CAAA;AAAeJ,KAAAK,IANa,CAAhC,CAUF,OAAOV,SAbiC,CAgB1CR,MAAAC,QAAA,CAAiBI,kBAxCoH;",
"sources":["node_modules/draft-js/lib/decodeEntityRanges.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$decodeEntityRanges\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","UnicodeUtils","substr","decodeEntityRanges","text","ranges","entities","Array","length","fill","forEach","range","start","offset","end","ii","key"]
}
