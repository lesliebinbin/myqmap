shadow$provide["module$node_modules$draft_js$lib$encodeInlineStyleRanges"]=function(global,process,require,module,exports,shadow$shims){var UnicodeUtils=require("module$node_modules$fbjs$lib$UnicodeUtils");var findRangesImmutable=require("module$node_modules$draft_js$lib$findRangesImmutable");var areEqual=function areEqual(a,b){return a===b};var isTruthy=function isTruthy(a){return!!a};var EMPTY_ARRAY=[];function getEncodedInlinesForType(block,styleList,styleToEncode){var ranges=[];var filteredInlines=
styleList.map(function(style){return style.has(styleToEncode)}).toList();findRangesImmutable(filteredInlines,areEqual,isTruthy,function(start,end){var text=block.getText();ranges.push({offset:UnicodeUtils.strlen(text.slice(0,start)),length:UnicodeUtils.strlen(text.slice(start,end)),style:styleToEncode})});return ranges}function encodeInlineStyleRanges(block){var styleList=block.getCharacterList().map(function(c){return c.getStyle()}).toList();var ranges=styleList.flatten().toSet().map(function(style){return getEncodedInlinesForType(block,
styleList,style)});return Array.prototype.concat.apply(EMPTY_ARRAY,ranges.toJS())}module.exports=encodeInlineStyleRanges}
//# sourceMappingURL=module$node_modules$draft_js$lib$encodeInlineStyleRanges.js.map
