{
"version":3,
"file":"module$node_modules$lodash$isFunction.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uCAAf,CAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACvH,IAAIC,WAAaJ,OAAA,CAAQ,wCAAR,CAAjB,CACIK,SAAWL,OAAA,CAAQ,qCAAR,CAGf,KAAIM,SAAW,wBAAf,CACIC,QAAU,mBADd,CAEIC,OAAS,4BAFb,CAGIC,SAAW,gBAmBfC,SAASA,WAAU,CAACC,KAAD,CAAQ,CACzB,GAAI,CAACN,QAAA,CAASM,KAAT,CAAL,CACE,MAAO,MAIT,KAAIC,IAAMR,UAAA,CAAWO,KAAX,CACV,OAAOC,IAAP,EAAcL,OAAd,EAAyBK,GAAzB,EAAgCJ,MAAhC,EAA0CI,GAA1C,EAAiDN,QAAjD;AAA6DM,GAA7D,EAAoEH,QAP3C,CAU3BR,MAAAC,QAAA,CAAiBQ,UArCsG;",
"sources":["node_modules/lodash/isFunction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$isFunction\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","isFunction","value","tag"]
}
