{
"version":3,
"file":"module$node_modules$lodash$_isIndex.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,qCAAf,CAAA,CAAwD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAErH,IAAIC,iBAAmB,gBAGvB,KAAIC,SAAW,kBAUfC,SAASA,QAAO,CAACC,KAAD,CAAQC,MAAR,CAAgB,CAC9B,IAAIC,KAAO,MAAOF,MAClBC,OAAA,CAASA,MAAA,EAAU,IAAV,CAAiBJ,gBAAjB,CAAoCI,MAE7C,OAAO,CAAC,CAACA,MAAT,GACGC,IADH,EACW,QADX,EAEKA,IAFL,EAEa,QAFb,EAEyBJ,QAAAK,KAAA,CAAcH,KAAd,CAFzB,IAGOA,KAHP,CAGgB,EAHhB,EAGqBA,KAHrB,CAG6B,CAH7B,EAGkC,CAHlC,EAGuCA,KAHvC,CAG+CC,MAH/C,CAJ8B,CAUhCP,MAAAC,QAAA,CAAiBI,OAzBoG;",
"sources":["node_modules/lodash/_isIndex.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_isIndex\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","MAX_SAFE_INTEGER","reIsUint","isIndex","value","length","type","test"]
}
