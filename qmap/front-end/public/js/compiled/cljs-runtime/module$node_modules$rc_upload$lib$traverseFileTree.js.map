{
"version":3,
"file":"module$node_modules$rc_upload$lib$traverseFileTree.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,oDAAf,CAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGpIC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAC,SAASA,UAAS,CAACC,IAAD,CAAOC,QAAP,CAAiB,CACjC,IAAIC,UAAYF,IAAAG,aAAA,EAChB,KAAIC,SAAW,EAEfC,SAASA,SAAQ,EAAG,CAClBH,SAAAI,YAAA,CAAsB,QAAS,CAACC,OAAD,CAAU,CACvC,IAAIC,UAAYC,KAAAC,UAAAC,MAAAC,MAAA,CAA4BL,OAA5B,CAChBH,SAAA,CAAWA,QAAAS,OAAA,CAAgBL,SAAhB,CAGX,KAAIM,WAAa,CAACN,SAAAO,OAElB,IAAID,UAAJ,CACEb,QAAA,CAASG,QAAT,CADF,KAGEC,SAAA,EAVqC,CAAzC,CADkB;AAgBpBA,QAAA,EApBiC,CAuBnC,IAAIW,iBAAmBA,QAASA,iBAAgB,CAACC,KAAD,CAAQhB,QAAR,CAAkBiB,UAAlB,CAA8B,CAC5E,IAAIC,kBAAoBA,QAASA,kBAAiB,CAACnB,IAAD,CAAOoB,IAAP,CAAa,CAC7DA,IAAA,CAAOA,IAAP,EAAe,EACf,IAAIpB,IAAAqB,OAAJ,CACErB,IAAAsB,KAAA,CAAU,QAAS,CAACA,IAAD,CAAO,CACxB,GAAIJ,UAAA,CAAWI,IAAX,CAAJ,CACErB,QAAA,CAAS,CAACqB,IAAD,CAAT,CAFsB,CAA1B,CADF,KAMO,IAAItB,IAAAuB,YAAJ,CACLxB,SAAA,CAAUC,IAAV,CAAgB,QAAS,CAACO,OAAD,CAAU,CACjCA,OAAAiB,QAAA,CAAgB,QAAS,CAACC,SAAD,CAAY,CACnCN,iBAAA,CAAkBM,SAAlB,CAA6B,EAA7B,CAAkCL,IAAlC,CAAyCpB,IAAA0B,KAAzC,CAAqD,GAArD,CADmC,CAArC,CADiC,CAAnC,CAT2D,CAgB/D,KAAIC,0BAA4B,IAChC,KAAIC,kBAAoB,KACxB,KAAIC,eAAiBC,SAErB,IAAI,CACF,IAAK,IAAIC;AAAYd,KAAA,CAAMe,MAAAC,SAAN,CAAA,EAAhB,CAA0CC,KAA/C,CAAsD,EAAEP,yBAAF,CAA8BQ,CAACD,KAADC,CAASJ,SAAAK,KAAA,EAATD,MAA9B,CAAtD,CAAsHR,yBAAtH,CAAkJ,IAAlJ,CAAwJ,CACtJ,IAAIL,KAAOY,KAAApC,MAEXqB,kBAAA,CAAkBG,IAAAe,iBAAA,EAAlB,CAHsJ,CADtJ,CAMF,MAAOC,GAAP,CAAY,CACZV,iBAAA,CAAoB,IACpBC,eAAA,CAAiBS,GAFL,CANd,OASU,CACR,GAAI,CACF,GAAI,CAACX,yBAAL,EAAkCI,SAAA,CAAU,QAAV,CAAlC,CACEA,SAAA,CAAU,QAAV,CAAA,EAFA,CAAJ,OAIU,CACR,GAAIH,iBAAJ,CACE,KAAMC,eAAN,CAFM,CALF,CA9BkE,CA2C9EnC,QAAA,CAAQ,SAAR,CAAA,CAAqBsB,gBACrBvB,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAzEmH;",
"sources":["node_modules/rc-upload/lib/traverseFileTree.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$traverseFileTree\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction loopFiles(item, callback) {\n  var dirReader = item.createReader();\n  var fileList = [];\n\n  function sequence() {\n    dirReader.readEntries(function (entries) {\n      var entryList = Array.prototype.slice.apply(entries);\n      fileList = fileList.concat(entryList);\n\n      // Check if all the file has been viewed\n      var isFinished = !entryList.length;\n\n      if (isFinished) {\n        callback(fileList);\n      } else {\n        sequence();\n      }\n    });\n  }\n\n  sequence();\n}\n\nvar traverseFileTree = function traverseFileTree(files, callback, isAccepted) {\n  var _traverseFileTree = function _traverseFileTree(item, path) {\n    path = path || '';\n    if (item.isFile) {\n      item.file(function (file) {\n        if (isAccepted(file)) {\n          callback([file]);\n        }\n      });\n    } else if (item.isDirectory) {\n      loopFiles(item, function (entries) {\n        entries.forEach(function (entryItem) {\n          _traverseFileTree(entryItem, '' + path + item.name + '/');\n        });\n      });\n    }\n  };\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = files[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var file = _step.value;\n\n      _traverseFileTree(file.webkitGetAsEntry());\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator['return']) {\n        _iterator['return']();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nexports['default'] = traverseFileTree;\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","loopFiles","item","callback","dirReader","createReader","fileList","sequence","readEntries","entries","entryList","Array","prototype","slice","apply","concat","isFinished","length","traverseFileTree","files","isAccepted","_traverseFileTree","path","isFile","file","isDirectory","forEach","entryItem","name","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","done","next","webkitGetAsEntry","err"]
}
