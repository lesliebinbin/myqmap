{
"version":3,
"file":"module$node_modules$rc_upload$lib$request.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/rc-upload/lib/request.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$request\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports['default'] = upload;\nfunction getError(option, xhr) {\n  var msg = 'cannot post ' + option.action + ' ' + xhr.status + '\\'';\n  var err = new Error(msg);\n  err.status = xhr.status;\n  err.method = 'post';\n  err.url = option.action;\n  return err;\n}\n\nfunction getBody(xhr) {\n  var text = xhr.responseText || xhr.response;\n  if (!text) {\n    return text;\n  }\n\n  try {\n    return JSON.parse(text);\n  } catch (e) {\n    return text;\n  }\n}\n\n// option {\n//  onProgress: (event: { percent: number }): void,\n//  onError: (event: Error, body?: Object): void,\n//  onSuccess: (body: Object): void,\n//  data: Object,\n//  filename: String,\n//  file: File,\n//  withCredentials: Boolean,\n//  action: String,\n//  headers: Object,\n// }\nfunction upload(option) {\n  var xhr = new XMLHttpRequest();\n\n  if (option.onProgress && xhr.upload) {\n    xhr.upload.onprogress = function progress(e) {\n      if (e.total > 0) {\n        e.percent = e.loaded / e.total * 100;\n      }\n      option.onProgress(e);\n    };\n  }\n\n  var formData = new FormData();\n\n  if (option.data) {\n    Object.keys(option.data).map(function (key) {\n      formData.append(key, option.data[key]);\n    });\n  }\n\n  formData.append(option.filename, option.file);\n\n  xhr.onerror = function error(e) {\n    option.onError(e);\n  };\n\n  xhr.onload = function onload() {\n    // allow success when 2xx status\n    // see https://github.com/react-component/upload/issues/34\n    if (xhr.status < 200 || xhr.status >= 300) {\n      return option.onError(getError(option, xhr), getBody(xhr));\n    }\n\n    option.onSuccess(getBody(xhr), xhr);\n  };\n\n  xhr.open('post', option.action, true);\n\n  // Has to be after `.open()`. See https://github.com/enyo/dropzone/issues/179\n  if (option.withCredentials && 'withCredentials' in xhr) {\n    xhr.withCredentials = true;\n  }\n\n  var headers = option.headers || {};\n\n  // when set headers['X-Requested-With'] = null , can close default XHR header\n  // see https://github.com/react-component/upload/issues/33\n  if (headers['X-Requested-With'] !== null) {\n    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n  }\n\n  for (var h in headers) {\n    if (headers.hasOwnProperty(h) && headers[h] !== null) {\n      xhr.setRequestHeader(h, headers[h]);\n    }\n  }\n  xhr.send(formData);\n\n  return {\n    abort: function abort() {\n      xhr.abort();\n    }\n  };\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","upload","getError","option","xhr","msg","action","status","err","Error","method","url","getBody","text","responseText","response","JSON","parse","e","XMLHttpRequest","onProgress","onprogress","xhr.upload.onprogress","progress","total","percent","loaded","formData","FormData","data","keys","map","key","append","filename","file","onerror","xhr.onerror","error","onError","onload","xhr.onload","onSuccess","open","withCredentials","headers","setRequestHeader","h","hasOwnProperty","send","abort"]
}
