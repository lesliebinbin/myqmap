{
"version":3,
"file":"module$node_modules$fbjs$lib$getUnboundedScrollPosition.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAuBzIC,QAASA,2BAA0B,CAACC,UAAD,CAAa,CAC9C,GAAIA,UAAAC,OAAJ,EAAyBD,UAAzB,WAA+CA,WAAAC,OAA/C,CACE,MAAO,CACLC,EAAGF,UAAAG,YAAHD,EAA6BF,UAAAI,SAAAC,gBAAAC,WADxB,CAELC,EAAGP,UAAAQ,YAAHD,EAA6BP,UAAAI,SAAAC,gBAAAI,UAFxB,CAKT,OAAO,CACLP,EAAGF,UAAAM,WADE,CAELC,EAAGP,UAAAS,UAFE,CAPuC,CAahDb,MAAAC,QAAA,CAAiBE,0BApCwH;",
"sources":["node_modules/fbjs/lib/getUnboundedScrollPosition.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$getUnboundedScrollPosition\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n'use strict';\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are unbounded, unlike `getScrollPosition`. This means they\n * may be negative or exceed the element boundaries (which is possible using\n * inertial scrolling).\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\n\nfunction getUnboundedScrollPosition(scrollable) {\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    return {\n      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,\n      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop\n    };\n  }\n  return {\n    x: scrollable.scrollLeft,\n    y: scrollable.scrollTop\n  };\n}\n\nmodule.exports = getUnboundedScrollPosition;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getUnboundedScrollPosition","scrollable","Window","x","pageXOffset","document","documentElement","scrollLeft","y","pageYOffset","scrollTop"]
}
