{
"version":3,
"file":"module$node_modules$core_js$library$modules$es6_array_from.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,4DAAf,CAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAE5I,IAAIC,IAAMJ,OAAA,CAAQ,kDAAR,CACV,KAAIK,QAAUL,OAAA,CAAQ,qDAAR,CACd,KAAIM,SAAWN,OAAA,CAAQ,wDAAR,CACf,KAAIO,KAAOP,OAAA,CAAQ,wDAAR,CACX,KAAIQ,YAAcR,OAAA,CAAQ,4DAAR,CAClB;IAAIS,SAAWT,OAAA,CAAQ,wDAAR,CACf,KAAIU,eAAiBV,OAAA,CAAQ,8DAAR,CACrB,KAAIW,UAAYX,OAAA,CAAQ,sEAAR,CAEhBK,QAAA,CAAQA,OAAAO,EAAR,CAAoBP,OAAAQ,EAApB,CAAgC,CAACb,OAAA,CAAQ,0DAAR,CAAA,CAA0B,QAAS,CAACc,IAAD,CAAO,CAAEC,KAAAC,KAAA,CAAWF,IAAX,CAAF,CAA1C,CAAjC,CAAmG,OAAnG,CAA4G,CAE1GE,KAAMA,QAASA,KAAI,CAACC,SAAD,CAA2D,CAC5E,IAAIC,EAAIZ,QAAA,CAASW,SAAT,CACR,KAAIE,EAAI,MAAO,KAAP,EAAe,UAAf,CAA4B,IAA5B,CAAmCJ,KAC3C;IAAIK,KAAOC,SAAAC,OACX,KAAIC,MAAQH,IAAA,CAAO,CAAP,CAAWC,SAAA,CAAU,CAAV,CAAX,CAA0BG,SACtC,KAAIC,QAAUF,KAAVE,GAAoBD,SACxB,KAAIE,MAAQ,CACZ,KAAIC,OAAShB,SAAA,CAAUO,CAAV,CACb,KAAII,MAAJ,CAAYM,MAAZ,CAAoBC,IAApB,CAA0BC,QAC1B,IAAIL,OAAJ,CAAaF,KAAA,CAAQnB,GAAA,CAAImB,KAAJ,CAAWH,IAAA,CAAO,CAAP,CAAWC,SAAA,CAAU,CAAV,CAAX,CAA0BG,SAArC,CAAgD,CAAhD,CAErB,IAAIG,MAAJ,EAAcH,SAAd,EAA2B,EAAEL,CAAF,EAAOJ,KAAP,EAAgBP,WAAA,CAAYmB,MAAZ,CAAhB,CAA3B,CACE,IAAKG,QAAA,CAAWH,MAAApB,KAAA,CAAYW,CAAZ,CAAX,CAA2BU,MAA3B,CAAoC,IAAIT,CAA7C,CAAkD,CAACY,CAACF,IAADE,CAAQD,QAAAE,KAAA,EAARD,MAAnD,CAAkFL,KAAA,EAAlF,CACEhB,cAAA,CAAekB,MAAf,CAAuBF,KAAvB,CAA8BD,OAAA,CAAUlB,IAAA,CAAKuB,QAAL,CAAeP,KAAf,CAAsB,CAACM,IAAAI,MAAD,CAAaP,KAAb,CAAtB,CAA2C,IAA3C,CAAV,CAA6DG,IAAAI,MAA3F,CAFJ,KAIO,CACLX,MAAA,CAASb,QAAA,CAASS,CAAAI,OAAT,CACT,KAAKM,MAAL,CAAc,IAAIT,CAAJ,CAAMG,MAAN,CAAd,CAA6BA,MAA7B;AAAsCI,KAAtC,CAA6CA,KAAA,EAA7C,CACEhB,cAAA,CAAekB,MAAf,CAAuBF,KAAvB,CAA8BD,OAAA,CAAUF,KAAA,CAAML,CAAA,CAAEQ,KAAF,CAAN,CAAgBA,KAAhB,CAAV,CAAmCR,CAAA,CAAEQ,KAAF,CAAjE,CAHG,CAMPE,MAAAN,OAAA,CAAgBI,KAChB,OAAOE,OAtBqE,CAF4B,CAA5G,CAX4I;",
"sources":["node_modules/core-js/library/modules/es6.array.from.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$library$modules$es6_array_from\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ctx","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","O","C","aLen","arguments","length","mapfn","undefined","mapping","index","iterFn","result","step","iterator","done","next","value"]
}
