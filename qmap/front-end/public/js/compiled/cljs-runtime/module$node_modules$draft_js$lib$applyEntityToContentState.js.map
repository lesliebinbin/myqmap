{
"version":3,
"file":"module$node_modules$draft_js$lib$applyEntityToContentState.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,4DAAf,CAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB5I,IAAIC,UAAYJ,OAAA,CAAQ,8CAAR,CAEhB,KAAIK,0BAA4BL,OAAA,CAAQ,4DAAR,CAEhCM,SAASA,0BAAyB,CAACC,YAAD,CAAeC,cAAf,CAA+BC,SAA/B,CAA0C,CAC1E,IAAIC,SAAWH,YAAAI,YAAA,EACf,KAAIC,SAAWJ,cAAAK,YAAA,EACf,KAAIC,YAAcN,cAAAO,eAAA,EAClB;IAAIC,OAASR,cAAAS,UAAA,EACb,KAAIC,UAAYV,cAAAW,aAAA,EAEhB,KAAIC,UAAYV,QAAAW,UAAA,CAAmB,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACjD,MAAOA,EAAP,GAAaX,QADoC,CAAnC,CAAAY,UAAA,CAEH,QAAS,CAACF,CAAD,CAAIC,CAAJ,CAAO,CAC3B,MAAOA,EAAP,GAAaP,MADc,CAFb,CAAAS,aAAA,EAAAC,MAAA,CAIQtB,SAAAuB,WAAA,CAAqB,CAAC,CAACX,MAAD,CAASN,QAAAkB,IAAA,CAAaZ,MAAb,CAAT,CAAD,CAArB,CAJR,CAAAa,IAAA,CAIoE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC7G,IAAIC,WAAaD,QAAA,GAAanB,QAAb,CAAwBE,WAAxB,CAAsC,CACvD,KAAImB,SAAWF,QAAA,GAAaf,MAAb,CAAsBE,SAAtB,CAAkCY,KAAAI,UAAA,EACjD,OAAO7B,0BAAA,CAA0ByB,KAA1B,CAAiCE,UAAjC,CAA6CC,QAA7C,CAAuDxB,SAAvD,CAHsG,CAJ/F,CAUhB,OAAOF,aAAAmB,MAAA,CAAmB,CACxBhB,SAAUA,QAAAgB,MAAA,CAAeN,SAAf,CADc;AAExBe,gBAAiB3B,cAFO,CAGxB4B,eAAgB5B,cAHQ,CAAnB,CAjBmE,CAwB5EP,MAAAC,QAAA,CAAiBI,yBA5C2H;",
"sources":["node_modules/draft-js/lib/applyEntityToContentState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$applyEntityToContentState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule applyEntityToContentState\n * @format\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\n\nvar applyEntityToContentBlock = require('./applyEntityToContentBlock');\n\nfunction applyEntityToContentState(contentState, selectionState, entityKey) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).toOrderedMap().merge(Immutable.OrderedMap([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart = blockKey === startKey ? startOffset : 0;\n    var sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\n  });\n\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = applyEntityToContentState;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Immutable","applyEntityToContentBlock","applyEntityToContentState","contentState","selectionState","entityKey","blockMap","getBlockMap","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","newBlocks","skipUntil","_","k","takeUntil","toOrderedMap","merge","OrderedMap","get","map","block","blockKey","sliceStart","sliceEnd","getLength","selectionBefore","selectionAfter"]
}
