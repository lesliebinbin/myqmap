{
"version":3,
"file":"module$node_modules$draft_js$lib$editOnFocus.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB9H,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAClB,KAAIK,UAAYL,OAAA,CAAQ,wCAAR,CAEhBM,SAASA,YAAW,CAACC,MAAD,CAASC,CAAT,CAAY,CAC9B,IAAIC,YAAcF,MAAAG,mBAClB,KAAIC,iBAAmBF,WAAAG,aAAA,EACvB,IAAID,gBAAAE,YAAA,EAAJ,CACE,MAGF,KAAIC,UAAYH,gBAAAI,IAAA,CAAqB,UAArB,CAAiC,IAAjC,CAChBR,OAAAS,MAAAC,QAAA,EAAwBV,MAAAS,MAAAC,QAAA,CAAqBT,CAArB,CAYxB;GAAIH,SAAAa,UAAA,CAAoB,yBAApB,CAAJ,CACEX,MAAAY,OAAA,CAAcf,WAAAgB,eAAA,CAA2BX,WAA3B,CAAwCK,SAAxC,CAAd,CADF,KAGEP,OAAAY,OAAA,CAAcf,WAAAiB,gBAAA,CAA4BZ,WAA5B,CAAyCK,SAAzC,CAAd,CAvB4B,CA2BhCb,MAAAC,QAAA,CAAiBI,WA9C6G;",
"sources":["node_modules/draft-js/lib/editOnFocus.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$editOnFocus\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnFocus\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nfunction editOnFocus(editor, e) {\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n  if (currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', true);\n  editor.props.onFocus && editor.props.onFocus(e);\n\n  // When the tab containing this text editor is hidden and the user does a\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\n  // selection was right after sending this focus event and (if you let it)\n  // moves the cursor back to the beginning of the editor, so we force the\n  // selection here instead of simply accepting it in order to preserve the\n  // old cursor position. See https://crbug.com/540004.\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\n  // doesn't preserve the selection, matching how textareas work.\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\n    editor.update(EditorState.forceSelection(editorState, selection));\n  } else {\n    editor.update(EditorState.acceptSelection(editorState, selection));\n  }\n}\n\nmodule.exports = editOnFocus;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EditorState","UserAgent","editOnFocus","editor","e","editorState","_latestEditorState","currentSelection","getSelection","getHasFocus","selection","set","props","onFocus","isBrowser","update","forceSelection","acceptSelection"]
}
