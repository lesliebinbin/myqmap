{
"version":3,
"file":"module$node_modules$draft_js$lib$RichTextEditorUtil.js",
"lineCount":15,
"mappings":"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",
"sources":["node_modules/draft-js/lib/RichTextEditorUtil.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$RichTextEditorUtil\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule RichTextEditorUtil\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\nvar SelectionState = require('./SelectionState');\n\nvar adjustBlockDepthForContentState = require('./adjustBlockDepthForContentState');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar RichTextEditorUtil = {\n  currentBlockContainsLink: function currentBlockContainsLink(editorState) {\n    var selection = editorState.getSelection();\n    var contentState = editorState.getCurrentContent();\n    var entityMap = contentState.getEntityMap();\n    return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(), selection.getEndOffset()).some(function (v) {\n      var entity = v.getEntity();\n      return !!entity && entityMap.__get(entity).getType() === 'LINK';\n    });\n  },\n\n  getCurrentBlockType: function getCurrentBlockType(editorState) {\n    var selection = editorState.getSelection();\n    return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  },\n\n  getDataObjectForLinkURL: function getDataObjectForLinkURL(uri) {\n    return { url: uri.toString() };\n  },\n\n  handleKeyCommand: function handleKeyCommand(editorState, command) {\n    switch (command) {\n      case 'bold':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'BOLD');\n      case 'italic':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'ITALIC');\n      case 'underline':\n        return RichTextEditorUtil.toggleInlineStyle(editorState, 'UNDERLINE');\n      case 'code':\n        return RichTextEditorUtil.toggleCode(editorState);\n      case 'backspace':\n      case 'backspace-word':\n      case 'backspace-to-start-of-line':\n        return RichTextEditorUtil.onBackspace(editorState);\n      case 'delete':\n      case 'delete-word':\n      case 'delete-to-end-of-block':\n        return RichTextEditorUtil.onDelete(editorState);\n      default:\n        // they may have custom editor commands; ignore those\n        return null;\n    }\n  },\n\n  insertSoftNewline: function insertSoftNewline(editorState) {\n    var contentState = DraftModifier.insertText(editorState.getCurrentContent(), editorState.getSelection(), '\\n', editorState.getCurrentInlineStyle(), null);\n\n    var newEditorState = EditorState.push(editorState, contentState, 'insert-characters');\n\n    return EditorState.forceSelection(newEditorState, contentState.getSelectionAfter());\n  },\n\n  /**\n   * For collapsed selections at the start of styled blocks, backspace should\n   * just remove the existing style.\n   */\n  onBackspace: function onBackspace(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed() || selection.getAnchorOffset() || selection.getFocusOffset()) {\n      return null;\n    }\n\n    // First, try to remove a preceding atomic block.\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var blockBefore = content.getBlockBefore(startKey);\n\n    if (blockBefore && blockBefore.getType() === 'atomic') {\n      var blockMap = content.getBlockMap()['delete'](blockBefore.getKey());\n      var withoutAtomicBlock = content.merge({\n        blockMap: blockMap,\n        selectionAfter: selection\n      });\n      if (withoutAtomicBlock !== content) {\n        return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n      }\n    }\n\n    // If that doesn't succeed, try to remove the current block style.\n    var withoutBlockStyle = RichTextEditorUtil.tryToRemoveBlockStyle(editorState);\n\n    if (withoutBlockStyle) {\n      return EditorState.push(editorState, withoutBlockStyle, 'change-block-type');\n    }\n\n    return null;\n  },\n\n  onDelete: function onDelete(editorState) {\n    var selection = editorState.getSelection();\n    if (!selection.isCollapsed()) {\n      return null;\n    }\n\n    var content = editorState.getCurrentContent();\n    var startKey = selection.getStartKey();\n    var block = content.getBlockForKey(startKey);\n    var length = block.getLength();\n\n    // The cursor is somewhere within the text. Behave normally.\n    if (selection.getStartOffset() < length) {\n      return null;\n    }\n\n    var blockAfter = content.getBlockAfter(startKey);\n\n    if (!blockAfter || blockAfter.getType() !== 'atomic') {\n      return null;\n    }\n\n    var atomicBlockTarget = selection.merge({\n      focusKey: blockAfter.getKey(),\n      focusOffset: blockAfter.getLength()\n    });\n\n    var withoutAtomicBlock = DraftModifier.removeRange(content, atomicBlockTarget, 'forward');\n\n    if (withoutAtomicBlock !== content) {\n      return EditorState.push(editorState, withoutAtomicBlock, 'remove-range');\n    }\n\n    return null;\n  },\n\n  onTab: function onTab(event, editorState, maxDepth) {\n    var selection = editorState.getSelection();\n    var key = selection.getAnchorKey();\n    if (key !== selection.getFocusKey()) {\n      return editorState;\n    }\n\n    var content = editorState.getCurrentContent();\n    var block = content.getBlockForKey(key);\n    var type = block.getType();\n    if (type !== 'unordered-list-item' && type !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    event.preventDefault();\n\n    // Only allow indenting one level beyond the block above, and only if\n    // the block above is a list item as well.\n    var blockAbove = content.getBlockBefore(key);\n    if (!blockAbove) {\n      return editorState;\n    }\n\n    var typeAbove = blockAbove.getType();\n    if (typeAbove !== 'unordered-list-item' && typeAbove !== 'ordered-list-item') {\n      return editorState;\n    }\n\n    var depth = block.getDepth();\n    if (!event.shiftKey && depth === maxDepth) {\n      return editorState;\n    }\n\n    maxDepth = Math.min(blockAbove.getDepth() + 1, maxDepth);\n\n    var withAdjustment = adjustBlockDepthForContentState(content, selection, event.shiftKey ? -1 : 1, maxDepth);\n\n    return EditorState.push(editorState, withAdjustment, 'adjust-depth');\n  },\n\n  toggleBlockType: function toggleBlockType(editorState, blockType) {\n    var selection = editorState.getSelection();\n    var startKey = selection.getStartKey();\n    var endKey = selection.getEndKey();\n    var content = editorState.getCurrentContent();\n    var target = selection;\n\n    // Triple-click can lead to a selection that includes offset 0 of the\n    // following block. The `SelectionState` for this case is accurate, but\n    // we should avoid toggling block type for the trailing block because it\n    // is a confusing interaction.\n    if (startKey !== endKey && selection.getEndOffset() === 0) {\n      var blockBefore = nullthrows(content.getBlockBefore(endKey));\n      endKey = blockBefore.getKey();\n      target = target.merge({\n        anchorKey: startKey,\n        anchorOffset: selection.getStartOffset(),\n        focusKey: endKey,\n        focusOffset: blockBefore.getLength(),\n        isBackward: false\n      });\n    }\n\n    var hasAtomicBlock = content.getBlockMap().skipWhile(function (_, k) {\n      return k !== startKey;\n    }).reverse().skipWhile(function (_, k) {\n      return k !== endKey;\n    }).some(function (v) {\n      return v.getType() === 'atomic';\n    });\n\n    if (hasAtomicBlock) {\n      return editorState;\n    }\n\n    var typeToSet = content.getBlockForKey(startKey).getType() === blockType ? 'unstyled' : blockType;\n\n    return EditorState.push(editorState, DraftModifier.setBlockType(content, target, typeToSet), 'change-block-type');\n  },\n\n  toggleCode: function toggleCode(editorState) {\n    var selection = editorState.getSelection();\n    var anchorKey = selection.getAnchorKey();\n    var focusKey = selection.getFocusKey();\n\n    if (selection.isCollapsed() || anchorKey !== focusKey) {\n      return RichTextEditorUtil.toggleBlockType(editorState, 'code-block');\n    }\n\n    return RichTextEditorUtil.toggleInlineStyle(editorState, 'CODE');\n  },\n\n  /**\n   * Toggle the specified inline style for the selection. If the\n   * user's selection is collapsed, apply or remove the style for the\n   * internal state. If it is not collapsed, apply the change directly\n   * to the document state.\n   */\n  toggleInlineStyle: function toggleInlineStyle(editorState, inlineStyle) {\n    var selection = editorState.getSelection();\n    var currentStyle = editorState.getCurrentInlineStyle();\n\n    // If the selection is collapsed, toggle the specified style on or off and\n    // set the result as the new inline style override. This will then be\n    // used as the inline style for the next character to be inserted.\n    if (selection.isCollapsed()) {\n      return EditorState.setInlineStyleOverride(editorState, currentStyle.has(inlineStyle) ? currentStyle.remove(inlineStyle) : currentStyle.add(inlineStyle));\n    }\n\n    // If characters are selected, immediately apply or remove the\n    // inline style on the document state itself.\n    var content = editorState.getCurrentContent();\n    var newContent;\n\n    // If the style is already present for the selection range, remove it.\n    // Otherwise, apply it.\n    if (currentStyle.has(inlineStyle)) {\n      newContent = DraftModifier.removeInlineStyle(content, selection, inlineStyle);\n    } else {\n      newContent = DraftModifier.applyInlineStyle(content, selection, inlineStyle);\n    }\n\n    return EditorState.push(editorState, newContent, 'change-inline-style');\n  },\n\n  toggleLink: function toggleLink(editorState, targetSelection, entityKey) {\n    var withoutLink = DraftModifier.applyEntity(editorState.getCurrentContent(), targetSelection, entityKey);\n\n    return EditorState.push(editorState, withoutLink, 'apply-entity');\n  },\n\n  /**\n   * When a collapsed cursor is at the start of the first styled block, or\n   * an empty styled block, changes block to 'unstyled'. Returns null if\n   * block or selection does not meet that criteria.\n   */\n  tryToRemoveBlockStyle: function tryToRemoveBlockStyle(editorState) {\n    var selection = editorState.getSelection();\n    var offset = selection.getAnchorOffset();\n    if (selection.isCollapsed() && offset === 0) {\n      var key = selection.getAnchorKey();\n      var content = editorState.getCurrentContent();\n      var block = content.getBlockForKey(key);\n\n      var firstBlock = content.getFirstBlock();\n      if (block.getLength() > 0 && block !== firstBlock) {\n        return null;\n      }\n\n      var type = block.getType();\n      var blockBefore = content.getBlockBefore(key);\n      if (type === 'code-block' && blockBefore && blockBefore.getType() === 'code-block' && blockBefore.getLength() !== 0) {\n        return null;\n      }\n\n      if (type !== 'unstyled') {\n        return DraftModifier.setBlockType(content, selection, 'unstyled');\n      }\n    }\n    return null;\n  }\n};\n\nmodule.exports = RichTextEditorUtil;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","DraftModifier","EditorState","SelectionState","adjustBlockDepthForContentState","nullthrows","RichTextEditorUtil","currentBlockContainsLink","editorState","selection","getSelection","contentState","getCurrentContent","entityMap","getEntityMap","getBlockForKey","getAnchorKey","getCharacterList","slice","getStartOffset","getEndOffset","some","v","entity","getEntity","__get","getType","getCurrentBlockType","getStartKey","getDataObjectForLinkURL","uri","url","toString","handleKeyCommand","command","toggleInlineStyle","toggleCode","onBackspace","onDelete","insertSoftNewline","insertText","getCurrentInlineStyle","newEditorState","push","forceSelection","getSelectionAfter","isCollapsed","getAnchorOffset","getFocusOffset","content","startKey","blockBefore","getBlockBefore","blockMap","getBlockMap","getKey","withoutAtomicBlock","merge","selectionAfter","withoutBlockStyle","tryToRemoveBlockStyle","block","length","getLength","blockAfter","getBlockAfter","atomicBlockTarget","focusKey","focusOffset","removeRange","onTab","event","maxDepth","key","getFocusKey","type","preventDefault","blockAbove","typeAbove","depth","getDepth","shiftKey","Math","min","withAdjustment","toggleBlockType","blockType","endKey","getEndKey","target","anchorKey","anchorOffset","isBackward","hasAtomicBlock","skipWhile","_","k","reverse","typeToSet","setBlockType","inlineStyle","currentStyle","setInlineStyleOverride","has","remove","add","newContent","removeInlineStyle","applyInlineStyle","toggleLink","targetSelection","entityKey","withoutLink","applyEntity","offset","firstBlock","getFirstBlock"]
}
