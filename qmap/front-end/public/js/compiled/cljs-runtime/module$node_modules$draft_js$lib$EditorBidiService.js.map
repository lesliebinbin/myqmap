{
"version":3,
"file":"module$node_modules$draft_js$lib$EditorBidiService.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,oDAAf,CAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBpI,IAAIC,UAAYJ,OAAA,CAAQ,8CAAR,CAChB,KAAIK,mBAAqBL,OAAA,CAAQ,iDAAR,CAEzB,KAAIM,WAAaN,OAAA,CAAQ,yCAAR,CAEjB,KAAIO,WAAaH,SAAAG,WAGjB,KAAIC,WAEJ,KAAIC,kBAAoB,CACtBC,gBAAiBA,QAASA,gBAAe,CAACC,OAAD,CAAUC,WAAV,CAAuB,CAC9D,GAAI,CAACJ,WAAL,CACEA,WAAA;AAAc,IAAIH,kBADpB,KAGEG,YAAAK,MAAA,EAGF,KAAIC,SAAWH,OAAAI,YAAA,EACf,KAAIC,SAAWF,QAAAG,SAAA,EAAAC,IAAA,CAAwB,QAAS,CAACC,KAAD,CAAQ,CACtD,MAAOb,WAAA,CAAWE,WAAX,CAAAY,aAAA,CAAqCD,KAAAE,QAAA,EAArC,CAD+C,CAAzC,CAGf,KAAIC,QAAUf,UAAA,CAAWO,QAAAS,OAAA,EAAAC,IAAA,CAAsBR,QAAtB,CAAX,CAEd,IAAIJ,WAAJ,EAAmB,IAAnB,EAA2BR,SAAAqB,GAAA,CAAab,WAAb,CAA0BU,OAA1B,CAA3B,CACE,MAAOV,YAGT,OAAOU,QAjBuD,CAD1C,CAsBxBrB,OAAAC,QAAA,CAAiBO,iBAhDmH;",
"sources":["node_modules/draft-js/lib/EditorBidiService.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$EditorBidiService\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EditorBidiService\n * @format\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\nvar UnicodeBidiService = require('fbjs/lib/UnicodeBidiService');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar OrderedMap = Immutable.OrderedMap;\n\n\nvar bidiService;\n\nvar EditorBidiService = {\n  getDirectionMap: function getDirectionMap(content, prevBidiMap) {\n    if (!bidiService) {\n      bidiService = new UnicodeBidiService();\n    } else {\n      bidiService.reset();\n    }\n\n    var blockMap = content.getBlockMap();\n    var nextBidi = blockMap.valueSeq().map(function (block) {\n      return nullthrows(bidiService).getDirection(block.getText());\n    });\n    var bidiMap = OrderedMap(blockMap.keySeq().zip(nextBidi));\n\n    if (prevBidiMap != null && Immutable.is(prevBidiMap, bidiMap)) {\n      return prevBidiMap;\n    }\n\n    return bidiMap;\n  }\n};\n\nmodule.exports = EditorBidiService;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Immutable","UnicodeBidiService","nullthrows","OrderedMap","bidiService","EditorBidiService","getDirectionMap","content","prevBidiMap","reset","blockMap","getBlockMap","nextBidi","valueSeq","map","block","getDirection","getText","bidiMap","keySeq","zip","is"]
}
