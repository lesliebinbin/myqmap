shadow$provide["module$node_modules$draft_js$lib$EditorState"]=function(global,process,require,module,exports,shadow$shims){var _assign=require("module$node_modules$object_assign$index");var _extends=_assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}return target};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function");
}var BlockTree=require("module$node_modules$draft_js$lib$BlockTree");var ContentState=require("module$node_modules$draft_js$lib$ContentState");var EditorBidiService=require("module$node_modules$draft_js$lib$EditorBidiService");var Immutable=require("module$node_modules$immutable$dist$immutable");var SelectionState=require("module$node_modules$draft_js$lib$SelectionState");var OrderedSet=Immutable.OrderedSet,Record=Immutable.Record,Stack=Immutable.Stack;var defaultRecord={allowUndo:true,currentContent:null,
decorator:null,directionMap:null,forceSelection:false,inCompositionMode:false,inlineStyleOverride:null,lastChangeType:null,nativelyRenderedContent:null,redoStack:Stack(),selection:null,treeMap:null,undoStack:Stack()};var EditorStateRecord=Record(defaultRecord);var EditorState=function(){EditorState.createEmpty=function createEmpty(decorator){return EditorState.createWithContent(ContentState.createFromText(""),decorator)};EditorState.createWithContent=function createWithContent(contentState,decorator){var firstKey=
contentState.getBlockMap().first().getKey();return EditorState.create({currentContent:contentState,undoStack:Stack(),redoStack:Stack(),decorator:decorator||null,selection:SelectionState.createEmpty(firstKey)})};EditorState.create=function create(config){var currentContent=config.currentContent,decorator=config.decorator;var recordConfig=_extends({},config,{treeMap:generateNewTreeMap(currentContent,decorator),directionMap:EditorBidiService.getDirectionMap(currentContent)});return new EditorState(new EditorStateRecord(recordConfig))};
EditorState.set=function set(editorState,put){var map=editorState.getImmutable().withMutations(function(state){var existingDecorator=state.get("decorator");var decorator=existingDecorator;if(put.decorator===null)decorator=null;else if(put.decorator)decorator=put.decorator;var newContent=put.currentContent||editorState.getCurrentContent();if(decorator!==existingDecorator){var treeMap=state.get("treeMap");var newTreeMap;if(decorator&&existingDecorator)newTreeMap=regenerateTreeForNewDecorator(newContent,
newContent.getBlockMap(),treeMap,decorator,existingDecorator);else newTreeMap=generateNewTreeMap(newContent,decorator);state.merge({decorator:decorator,treeMap:newTreeMap,nativelyRenderedContent:null});return}var existingContent=editorState.getCurrentContent();if(newContent!==existingContent)state.set("treeMap",regenerateTreeForNewBlocks(editorState,newContent.getBlockMap(),newContent.getEntityMap(),decorator));state.merge(put)});return new EditorState(map)};EditorState.prototype.toJS=function toJS(){return this.getImmutable().toJS()};
EditorState.prototype.getAllowUndo=function getAllowUndo(){return this.getImmutable().get("allowUndo")};EditorState.prototype.getCurrentContent=function getCurrentContent(){return this.getImmutable().get("currentContent")};EditorState.prototype.getUndoStack=function getUndoStack(){return this.getImmutable().get("undoStack")};EditorState.prototype.getRedoStack=function getRedoStack(){return this.getImmutable().get("redoStack")};EditorState.prototype.getSelection=function getSelection(){return this.getImmutable().get("selection")};
EditorState.prototype.getDecorator=function getDecorator(){return this.getImmutable().get("decorator")};EditorState.prototype.isInCompositionMode=function isInCompositionMode(){return this.getImmutable().get("inCompositionMode")};EditorState.prototype.mustForceSelection=function mustForceSelection(){return this.getImmutable().get("forceSelection")};EditorState.prototype.getNativelyRenderedContent=function getNativelyRenderedContent(){return this.getImmutable().get("nativelyRenderedContent")};EditorState.prototype.getLastChangeType=
function getLastChangeType(){return this.getImmutable().get("lastChangeType")};EditorState.prototype.getInlineStyleOverride=function getInlineStyleOverride(){return this.getImmutable().get("inlineStyleOverride")};EditorState.setInlineStyleOverride=function setInlineStyleOverride(editorState,inlineStyleOverride){return EditorState.set(editorState,{inlineStyleOverride:inlineStyleOverride})};EditorState.prototype.getCurrentInlineStyle=function getCurrentInlineStyle(){var override=this.getInlineStyleOverride();
if(override!=null)return override;var content=this.getCurrentContent();var selection=this.getSelection();if(selection.isCollapsed())return getInlineStyleForCollapsedSelection(content,selection);return getInlineStyleForNonCollapsedSelection(content,selection)};EditorState.prototype.getBlockTree=function getBlockTree(blockKey){return this.getImmutable().getIn(["treeMap",blockKey])};EditorState.prototype.isSelectionAtStartOfContent=function isSelectionAtStartOfContent(){var firstKey=this.getCurrentContent().getBlockMap().first().getKey();
return this.getSelection().hasEdgeWithin(firstKey,0,0)};EditorState.prototype.isSelectionAtEndOfContent=function isSelectionAtEndOfContent(){var content=this.getCurrentContent();var blockMap=content.getBlockMap();var last=blockMap.last();var end=last.getLength();return this.getSelection().hasEdgeWithin(last.getKey(),end,end)};EditorState.prototype.getDirectionMap=function getDirectionMap(){return this.getImmutable().get("directionMap")};EditorState.acceptSelection=function acceptSelection(editorState,
selection){return updateSelection(editorState,selection,false)};EditorState.forceSelection=function forceSelection(editorState,selection){if(!selection.getHasFocus())selection=selection.set("hasFocus",true);return updateSelection(editorState,selection,true)};EditorState.moveSelectionToEnd=function moveSelectionToEnd(editorState){var content=editorState.getCurrentContent();var lastBlock=content.getLastBlock();var lastKey=lastBlock.getKey();var length=lastBlock.getLength();return EditorState.acceptSelection(editorState,
new SelectionState({anchorKey:lastKey,anchorOffset:length,focusKey:lastKey,focusOffset:length,isBackward:false}))};EditorState.moveFocusToEnd=function moveFocusToEnd(editorState){var afterSelectionMove=EditorState.moveSelectionToEnd(editorState);return EditorState.forceSelection(afterSelectionMove,afterSelectionMove.getSelection())};EditorState.push=function push(editorState,contentState,changeType){if(editorState.getCurrentContent()===contentState)return editorState;var forceSelection=changeType!==
"insert-characters";var directionMap=EditorBidiService.getDirectionMap(contentState,editorState.getDirectionMap());if(!editorState.getAllowUndo())return EditorState.set(editorState,{currentContent:contentState,directionMap:directionMap,lastChangeType:changeType,selection:contentState.getSelectionAfter(),forceSelection:forceSelection,inlineStyleOverride:null});var selection=editorState.getSelection();var currentContent=editorState.getCurrentContent();var undoStack=editorState.getUndoStack();var newContent=
contentState;if(selection!==currentContent.getSelectionAfter()||mustBecomeBoundary(editorState,changeType)){undoStack=undoStack.push(currentContent);newContent=newContent.set("selectionBefore",selection)}else if(changeType==="insert-characters"||changeType==="backspace-character"||changeType==="delete-character")newContent=newContent.set("selectionBefore",currentContent.getSelectionBefore());var inlineStyleOverride=editorState.getInlineStyleOverride();var overrideChangeTypes=["adjust-depth","change-block-type",
"split-block"];if(overrideChangeTypes.indexOf(changeType)===-1)inlineStyleOverride=null;var editorStateChanges={currentContent:newContent,directionMap:directionMap,undoStack:undoStack,redoStack:Stack(),lastChangeType:changeType,selection:contentState.getSelectionAfter(),forceSelection:forceSelection,inlineStyleOverride:inlineStyleOverride};return EditorState.set(editorState,editorStateChanges)};EditorState.undo=function undo(editorState){if(!editorState.getAllowUndo())return editorState;var undoStack=
editorState.getUndoStack();var newCurrentContent=undoStack.peek();if(!newCurrentContent)return editorState;var currentContent=editorState.getCurrentContent();var directionMap=EditorBidiService.getDirectionMap(newCurrentContent,editorState.getDirectionMap());return EditorState.set(editorState,{currentContent:newCurrentContent,directionMap:directionMap,undoStack:undoStack.shift(),redoStack:editorState.getRedoStack().push(currentContent),forceSelection:true,inlineStyleOverride:null,lastChangeType:"undo",
nativelyRenderedContent:null,selection:currentContent.getSelectionBefore()})};EditorState.redo=function redo(editorState){if(!editorState.getAllowUndo())return editorState;var redoStack=editorState.getRedoStack();var newCurrentContent=redoStack.peek();if(!newCurrentContent)return editorState;var currentContent=editorState.getCurrentContent();var directionMap=EditorBidiService.getDirectionMap(newCurrentContent,editorState.getDirectionMap());return EditorState.set(editorState,{currentContent:newCurrentContent,
directionMap:directionMap,undoStack:editorState.getUndoStack().push(currentContent),redoStack:redoStack.shift(),forceSelection:true,inlineStyleOverride:null,lastChangeType:"redo",nativelyRenderedContent:null,selection:newCurrentContent.getSelectionAfter()})};function EditorState(immutable){_classCallCheck(this,EditorState);this._immutable=immutable}EditorState.prototype.getImmutable=function getImmutable(){return this._immutable};return EditorState}();function updateSelection(editorState,selection,
forceSelection){return EditorState.set(editorState,{selection:selection,forceSelection:forceSelection,nativelyRenderedContent:null,inlineStyleOverride:null})}function generateNewTreeMap(contentState,decorator){return contentState.getBlockMap().map(function(block){return BlockTree.generate(contentState,block,decorator)}).toOrderedMap()}function regenerateTreeForNewBlocks(editorState,newBlockMap,newEntityMap,decorator){var contentState=editorState.getCurrentContent().set("entityMap",newEntityMap);var prevBlockMap=
contentState.getBlockMap();var prevTreeMap=editorState.getImmutable().get("treeMap");return prevTreeMap.merge(newBlockMap.toSeq().filter(function(block,key){return block!==prevBlockMap.get(key)}).map(function(block){return BlockTree.generate(contentState,block,decorator)}))}function regenerateTreeForNewDecorator(content,blockMap,previousTreeMap,decorator,existingDecorator){return previousTreeMap.merge(blockMap.toSeq().filter(function(block){return decorator.getDecorations(block,content)!==existingDecorator.getDecorations(block,
content)}).map(function(block){return BlockTree.generate(content,block,decorator)}))}function mustBecomeBoundary(editorState,changeType){var lastChangeType=editorState.getLastChangeType();return changeType!==lastChangeType||changeType!=="insert-characters"&&changeType!=="backspace-character"&&changeType!=="delete-character"}function getInlineStyleForCollapsedSelection(content,selection){var startKey=selection.getStartKey();var startOffset=selection.getStartOffset();var startBlock=content.getBlockForKey(startKey);
if(startOffset>0)return startBlock.getInlineStyleAt(startOffset-1);if(startBlock.getLength())return startBlock.getInlineStyleAt(0);return lookUpwardForInlineStyle(content,startKey)}function getInlineStyleForNonCollapsedSelection(content,selection){var startKey=selection.getStartKey();var startOffset=selection.getStartOffset();var startBlock=content.getBlockForKey(startKey);if(startOffset<startBlock.getLength())return startBlock.getInlineStyleAt(startOffset);if(startOffset>0)return startBlock.getInlineStyleAt(startOffset-
1);return lookUpwardForInlineStyle(content,startKey)}function lookUpwardForInlineStyle(content,fromKey){var lastNonEmpty=content.getBlockMap().reverse().skipUntil(function(_,k){return k===fromKey}).skip(1).skipUntil(function(block,_){return block.getLength()}).first();if(lastNonEmpty)return lastNonEmpty.getInlineStyleAt(lastNonEmpty.getLength()-1);return OrderedSet()}module.exports=EditorState}
//# sourceMappingURL=module$node_modules$draft_js$lib$EditorState.js.map
