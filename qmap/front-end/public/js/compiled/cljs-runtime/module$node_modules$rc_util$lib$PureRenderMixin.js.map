{
"version":3,
"file":"module$node_modules$rc_util$lib$PureRenderMixin.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAcjI,IAAIC,aAAeJ,OAAA,CAAQ,wCAAR,CAEnBK,SAASA,eAAc,CAACC,QAAD,CAAWC,SAAX,CAAsBC,SAAtB,CAAiC,CACtD,MAAO,CAACJ,YAAA,CAAaE,QAAAG,MAAb,CAA6BF,SAA7B,CAAR,EAAmD,CAACH,YAAA,CAAaE,QAAAI,MAAb,CAA6BF,SAA7B,CADE,CA8BxD,IAAIG,kCAAoC,CACtCC,sBAAuBA,QAASA,sBAAqB,CAACL,SAAD,CAAYC,SAAZ,CAAuB,CAC1E,MAAOH,eAAA,CAAe,IAAf,CAAqBE,SAArB,CAAgCC,SAAhC,CADmE,CADtC,CAMxCP,OAAAC,QAAA;AAAiBS,iCApDgH;",
"sources":["node_modules/rc-util/lib/PureRenderMixin.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_util$lib$PureRenderMixin\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentWithPureRenderMixin\n */\n\nvar shallowEqual = require('shallowequal');\n\nfunction shallowCompare(instance, nextProps, nextState) {\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\n}\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n *\n * See https://facebook.github.io/react/docs/pure-render-mixin.html\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","shallowEqual","shallowCompare","instance","nextProps","nextState","props","state","ReactComponentWithPureRenderMixin","shouldComponentUpdate"]
}
