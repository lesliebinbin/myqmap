{
"version":3,
"file":"module$node_modules$lodash$_ListCache.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,uCAAf,CAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACvH,IAAIC,eAAiBJ,OAAA,CAAQ,4CAAR,CAArB,CACIK,gBAAkBL,OAAA,CAAQ,6CAAR,CADtB,CAEIM,aAAeN,OAAA,CAAQ,0CAAR,CAFnB,CAGIO,aAAeP,OAAA,CAAQ,0CAAR,CAHnB,CAIIQ,aAAeR,OAAA,CAAQ,0CAAR,CASnBS,SAASA,UAAS,CAACC,OAAD,CAAU,CAC1B,IAAIC,MAAS,EAAb,CACIC;AAASF,OAAA,EAAW,IAAX,CAAkB,CAAlB,CAAsBA,OAAAE,OAEnC,KAAAC,MAAA,EACA,OAAO,EAAEF,KAAT,CAAiBC,MAAjB,CAAyB,CACvB,IAAIE,MAAQJ,OAAA,CAAQC,KAAR,CACZ,KAAAI,IAAA,CAASD,KAAA,CAAM,CAAN,CAAT,CAAmBA,KAAA,CAAM,CAAN,CAAnB,CAFuB,CALC,CAY5BL,SAAAO,UAAAH,MAAA,CAA4BT,cAC5BK,UAAAO,UAAA,CAAoB,QAApB,CAAA,CAAgCX,eAChCI,UAAAO,UAAAC,IAAA,CAA0BX,YAC1BG,UAAAO,UAAAE,IAAA,CAA0BX,YAC1BE,UAAAO,UAAAD,IAAA,CAA0BP,YAE1BP,OAAAC,QAAA,CAAiBO,SAhCsG;",
"sources":["node_modules/lodash/_ListCache.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_ListCache\"] = function(global,process,require,module,exports,shadow$shims) {\nvar listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","clear","entry","set","prototype","get","has"]
}
