{
"version":3,
"file":"module$node_modules$fbjs$lib$getScrollPosition.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAYhI,IAAIC,yBAA2BJ,OAAA,CAAQ,uDAAR,CAC/B,KAAIK,2BAA6BL,OAAA,CAAQ,yDAAR,CAcjCM,SAASA,kBAAiB,CAACC,UAAD,CAAa,CACrC,IAAIC,sBAAwBJ,wBAAA,CAAyBG,UAAAE,cAAzB,EAAqDF,UAAAG,SAArD,CAC5B,IAAIH,UAAAI,OAAJ,EAAyBJ,UAAzB,WAA+CA,WAAAI,OAA/C,CACEJ,UAAA;AAAaC,qBAEf,KAAII,eAAiBP,0BAAA,CAA2BE,UAA3B,CAErB,KAAIM,SAAWN,UAAA,GAAeC,qBAAf,CAAuCD,UAAAE,cAAAK,gBAAvC,CAAkFP,UAEjG,KAAIQ,KAAOR,UAAAS,YAAPD,CAAgCF,QAAAI,YACpC,KAAIC,KAAOX,UAAAY,aAAPD,CAAiCL,QAAAO,aAErCR,eAAAS,EAAA,CAAmBC,IAAAC,IAAA,CAAS,CAAT,CAAYD,IAAAE,IAAA,CAASZ,cAAAS,EAAT,CAA2BN,IAA3B,CAAZ,CACnBH,eAAAa,EAAA,CAAmBH,IAAAC,IAAA,CAAS,CAAT,CAAYD,IAAAE,IAAA,CAASZ,cAAAa,EAAT,CAA2BP,IAA3B,CAAZ,CAEnB,OAAON,eAf8B,CAkBvCX,MAAAC,QAAA,CAAiBI,iBA7C+G;",
"sources":["node_modules/fbjs/lib/getScrollPosition.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$getScrollPosition\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar getDocumentScrollElement = require('./getDocumentScrollElement');\nvar getUnboundedScrollPosition = require('./getUnboundedScrollPosition');\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are bounded. This means that if the scroll position is\n * negative or exceeds the element boundaries (which is possible using inertial\n * scrolling), you will get zero or the maximum scroll position, respectively.\n *\n * If you need the unbound scroll position, use `getUnboundedScrollPosition`.\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getScrollPosition(scrollable) {\n  var documentScrollElement = getDocumentScrollElement(scrollable.ownerDocument || scrollable.document);\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    scrollable = documentScrollElement;\n  }\n  var scrollPosition = getUnboundedScrollPosition(scrollable);\n\n  var viewport = scrollable === documentScrollElement ? scrollable.ownerDocument.documentElement : scrollable;\n\n  var xMax = scrollable.scrollWidth - viewport.clientWidth;\n  var yMax = scrollable.scrollHeight - viewport.clientHeight;\n\n  scrollPosition.x = Math.max(0, Math.min(scrollPosition.x, xMax));\n  scrollPosition.y = Math.max(0, Math.min(scrollPosition.y, yMax));\n\n  return scrollPosition;\n}\n\nmodule.exports = getScrollPosition;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getDocumentScrollElement","getUnboundedScrollPosition","getScrollPosition","scrollable","documentScrollElement","ownerDocument","document","Window","scrollPosition","viewport","documentElement","xMax","scrollWidth","clientWidth","yMax","scrollHeight","clientHeight","x","Math","max","min","y"]
}
