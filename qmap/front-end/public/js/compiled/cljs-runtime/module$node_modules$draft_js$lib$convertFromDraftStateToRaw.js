shadow$provide["module$node_modules$draft_js$lib$convertFromDraftStateToRaw"]=function(global,process,require,module,exports,shadow$shims){var _assign=require("module$node_modules$object_assign$index");var _extends=_assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}return target};var ContentBlock=require("module$node_modules$draft_js$lib$ContentBlock");var ContentBlockNode=
require("module$node_modules$draft_js$lib$ContentBlockNode");var DraftStringKey=require("module$node_modules$draft_js$lib$DraftStringKey");var encodeEntityRanges=require("module$node_modules$draft_js$lib$encodeEntityRanges");var encodeInlineStyleRanges=require("module$node_modules$draft_js$lib$encodeInlineStyleRanges");var invariant=require("module$node_modules$fbjs$lib$invariant");var createRawBlock=function createRawBlock(block,entityStorageMap){return{key:block.getKey(),text:block.getText(),type:block.getType(),
depth:block.getDepth(),inlineStyleRanges:encodeInlineStyleRanges(block),entityRanges:encodeEntityRanges(block,entityStorageMap),data:block.getData().toObject()}};var insertRawBlock=function insertRawBlock(block,entityMap,rawBlocks,blockCacheRef){if(block instanceof ContentBlock){rawBlocks.push(createRawBlock(block,entityMap));return}!(block instanceof ContentBlockNode)?"development"!=="production"?invariant(false,"block is not a BlockNode"):invariant(false):void 0;var parentKey=block.getParentKey();
var rawBlock=blockCacheRef[block.getKey()]=_extends({},createRawBlock(block,entityMap),{children:[]});if(parentKey){blockCacheRef[parentKey].children.push(rawBlock);return}rawBlocks.push(rawBlock)};var encodeRawBlocks=function encodeRawBlocks(contentState,rawState){var entityMap=rawState.entityMap;var rawBlocks=[];var blockCacheRef={};var entityCacheRef={};var entityStorageKey=0;contentState.getBlockMap().forEach(function(block){block.findEntityRanges(function(character){return character.getEntity()!==
null},function(start){var entityKey=block.getEntityAt(start);var stringifiedEntityKey=DraftStringKey.stringify(entityKey);if(entityCacheRef[stringifiedEntityKey])return;entityCacheRef[stringifiedEntityKey]=entityKey;entityMap[stringifiedEntityKey]=""+entityStorageKey;entityStorageKey++});insertRawBlock(block,entityMap,rawBlocks,blockCacheRef)});return{blocks:rawBlocks,entityMap:entityMap}};var encodeRawEntityMap=function encodeRawEntityMap(contentState,rawState){var blocks=rawState.blocks,entityMap=
rawState.entityMap;var rawEntityMap={};Object.keys(entityMap).forEach(function(key,index){var entity=contentState.getEntity(DraftStringKey.unstringify(key));rawEntityMap[index]={type:entity.getType(),mutability:entity.getMutability(),data:entity.getData()}});return{blocks:blocks,entityMap:rawEntityMap}};var convertFromDraftStateToRaw=function convertFromDraftStateToRaw(contentState){var rawDraftContentState={entityMap:{},blocks:[]};rawDraftContentState=encodeRawBlocks(contentState,rawDraftContentState);
rawDraftContentState=encodeRawEntityMap(contentState,rawDraftContentState);return rawDraftContentState};module.exports=convertFromDraftStateToRaw}
//# sourceMappingURL=module$node_modules$draft_js$lib$convertFromDraftStateToRaw.js.map
