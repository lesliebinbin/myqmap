{
"version":3,
"file":"module$node_modules$lodash$uniqBy.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,mCAAf,CAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACnH,IAAIC,aAAeJ,OAAA,CAAQ,0CAAR,CAAnB,CACIK,SAAWL,OAAA,CAAQ,sCAAR,CAyBfM,SAASA,OAAM,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC/B,MAAQD,MAAD,EAAUA,KAAAE,OAAV,CAA0BJ,QAAA,CAASE,KAAT,CAAgBH,YAAA,CAAaI,QAAb,CAAuB,CAAvB,CAAhB,CAA1B,CAAuE,EAD/C,CAIjCP,MAAAC,QAAA,CAAiBI,MA/BkG;",
"sources":["node_modules/lodash/uniqBy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$uniqBy\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseIteratee = require('./_baseIteratee'),\n    baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nmodule.exports = uniqBy;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseIteratee","baseUniq","uniqBy","array","iteratee","length"]
}
