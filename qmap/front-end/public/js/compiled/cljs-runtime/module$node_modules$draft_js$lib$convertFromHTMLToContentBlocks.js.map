{
"version":3,
"file":"module$node_modules$draft_js$lib$convertFromHTMLToContentBlocks.js",
"lineCount":29,
"mappings":"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",
"sources":["node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$convertFromHTMLToContentBlocks\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromHTMLToContentBlocks\n * @format\n * \n */\n\n'use strict';\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _knownListItemDepthCl,\n    _assign = require('object-assign');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar _require = require('immutable'),\n    Set = _require.Set;\n\nvar URI = require('fbjs/lib/URI');\n\nvar cx = require('fbjs/lib/cx');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar invariant = require('fbjs/lib/invariant');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\n\nvar List = Immutable.List,\n    OrderedSet = Immutable.OrderedSet;\n\n\nvar NBSP = '&nbsp;';\nvar SPACE = ' ';\n\n// Arbitrary max indent\nvar MAX_DEPTH = 4;\n\n// used for replacing characters in HTML\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g');\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', '100', '200', '300', '400'];\n\n// Block tag flow is different because LIs do not have\n// a deterministic style ;_;\nvar inlineTags = {\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE'\n};\n\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\n\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\n\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\n\nvar lastBlock = void 0;\n\nvar EMPTY_CHUNK = {\n  text: '',\n  inlines: [],\n  entities: [],\n  blocks: []\n};\n\nvar EMPTY_BLOCK = {\n  children: List(),\n  depth: 0,\n  key: '',\n  type: ''\n};\n\nvar getListBlockType = function getListBlockType(tag, lastList) {\n  if (tag === 'li') {\n    return lastList === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n  }\n  return null;\n};\n\nvar getBlockMapSupportedTags = function getBlockMapSupportedTags(blockRenderMap) {\n  var unstyledElement = blockRenderMap.get('unstyled').element;\n  var tags = Set([]);\n\n  blockRenderMap.forEach(function (draftBlock) {\n    if (draftBlock.aliasedElements) {\n      draftBlock.aliasedElements.forEach(function (tag) {\n        tags = tags.add(tag);\n      });\n    }\n\n    tags = tags.add(draftBlock.element);\n  });\n\n  return tags.filter(function (tag) {\n    return tag && tag !== unstyledElement;\n  }).toArray().sort();\n};\n\n// custom element conversions\nvar getMultiMatchedType = function getMultiMatchedType(tag, lastList, multiMatchExtractor) {\n  for (var ii = 0; ii < multiMatchExtractor.length; ii++) {\n    var matchType = multiMatchExtractor[ii](tag, lastList);\n    if (matchType) {\n      return matchType;\n    }\n  }\n  return null;\n};\n\nvar getBlockTypeForTag = function getBlockTypeForTag(tag, lastList, blockRenderMap) {\n  var matchedTypes = blockRenderMap.filter(function (draftBlock) {\n    return draftBlock.element === tag || draftBlock.wrapper === tag || draftBlock.aliasedElements && draftBlock.aliasedElements.some(function (alias) {\n      return alias === tag;\n    });\n  }).keySeq().toSet().toArray().sort();\n\n  // if we dont have any matched type, return unstyled\n  // if we have one matched type return it\n  // if we have multi matched types use the multi-match function to gather type\n  switch (matchedTypes.length) {\n    case 0:\n      return 'unstyled';\n    case 1:\n      return matchedTypes[0];\n    default:\n      return getMultiMatchedType(tag, lastList, [getListBlockType]) || 'unstyled';\n  }\n};\n\nvar processInlineTag = function processInlineTag(tag, node, currentStyle) {\n  var styleToCheck = inlineTags[tag];\n  if (styleToCheck) {\n    currentStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  } else if (node instanceof HTMLElement) {\n    var htmlElement = node;\n    currentStyle = currentStyle.withMutations(function (style) {\n      var fontWeight = htmlElement.style.fontWeight;\n      var fontStyle = htmlElement.style.fontStyle;\n      var textDecoration = htmlElement.style.textDecoration;\n\n      if (boldValues.indexOf(fontWeight) >= 0) {\n        style.add('BOLD');\n      } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n        style.remove('BOLD');\n      }\n\n      if (fontStyle === 'italic') {\n        style.add('ITALIC');\n      } else if (fontStyle === 'normal') {\n        style.remove('ITALIC');\n      }\n\n      if (textDecoration === 'underline') {\n        style.add('UNDERLINE');\n      }\n      if (textDecoration === 'line-through') {\n        style.add('STRIKETHROUGH');\n      }\n      if (textDecoration === 'none') {\n        style.remove('UNDERLINE');\n        style.remove('STRIKETHROUGH');\n      }\n    }).toOrderedSet();\n  }\n  return currentStyle;\n};\n\nvar joinChunks = function joinChunks(A, B, experimentalHasNestedBlocks) {\n  // Sometimes two blocks will touch in the DOM and we need to strip the\n  // extra delimiter to preserve niceness.\n  var lastInA = A.text.slice(-1);\n  var firstInB = B.text.slice(0, 1);\n\n  if (lastInA === '\\r' && firstInB === '\\r' && !experimentalHasNestedBlocks) {\n    A.text = A.text.slice(0, -1);\n    A.inlines.pop();\n    A.entities.pop();\n    A.blocks.pop();\n  }\n\n  // Kill whitespace after blocks\n  if (lastInA === '\\r') {\n    if (B.text === SPACE || B.text === '\\n') {\n      return A;\n    } else if (firstInB === SPACE || firstInB === '\\n') {\n      B.text = B.text.slice(1);\n      B.inlines.shift();\n      B.entities.shift();\n    }\n  }\n\n  return {\n    text: A.text + B.text,\n    inlines: A.inlines.concat(B.inlines),\n    entities: A.entities.concat(B.entities),\n    blocks: A.blocks.concat(B.blocks)\n  };\n};\n\n/**\n * Check to see if we have anything like <p> <blockquote> <h1>... to create\n * block tags from. If we do, we can use those and ignore <div> tags. If we\n * don't, we can treat <div> tags as meaningful (unstyled) blocks.\n */\nvar containsSemanticBlockMarkup = function containsSemanticBlockMarkup(html, blockTags) {\n  return blockTags.some(function (tag) {\n    return html.indexOf('<' + tag) !== -1;\n  });\n};\n\nvar hasValidLinkText = function hasValidLinkText(link) {\n  !(link instanceof HTMLAnchorElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Link must be an HTMLAnchorElement.') : invariant(false) : void 0;\n  var protocol = link.protocol;\n  return protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:';\n};\n\nvar getWhitespaceChunk = function getWhitespaceChunk(inEntity) {\n  var entities = new Array(1);\n  if (inEntity) {\n    entities[0] = inEntity;\n  }\n  return _extends({}, EMPTY_CHUNK, {\n    text: SPACE,\n    inlines: [OrderedSet()],\n    entities: entities\n  });\n};\n\nvar getSoftNewlineChunk = function getSoftNewlineChunk() {\n  return _extends({}, EMPTY_CHUNK, {\n    text: '\\n',\n    inlines: [OrderedSet()],\n    entities: new Array(1)\n  });\n};\n\nvar getChunkedBlock = function getChunkedBlock() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _extends({}, EMPTY_BLOCK, props);\n};\n\nvar getBlockDividerChunk = function getBlockDividerChunk(block, depth) {\n  var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return {\n    text: '\\r',\n    inlines: [OrderedSet()],\n    entities: new Array(1),\n    blocks: [getChunkedBlock({\n      parent: parentKey,\n      key: generateRandomKey(),\n      type: block,\n      depth: Math.max(0, Math.min(MAX_DEPTH, depth))\n    })]\n  };\n};\n\n/**\n *  If we're pasting from one DraftEditor to another we can check to see if\n *  existing list item depth classes are being used and preserve this style\n */\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\n\nvar genFragment = function genFragment(entityMap, node, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, inEntity, parentKey) {\n  var lastLastBlock = lastBlock;\n  var nodeName = node.nodeName.toLowerCase();\n  var newEntityMap = entityMap;\n  var nextBlockType = 'unstyled';\n  var newBlock = false;\n  var inBlockType = inBlock && getBlockTypeForTag(inBlock, lastList, blockRenderMap);\n  var chunk = _extends({}, EMPTY_CHUNK);\n  var newChunk = null;\n  var blockKey = void 0;\n\n  // Base Case\n  if (nodeName === '#text') {\n    var _text = node.textContent;\n    var nodeTextContent = _text.trim();\n\n    // We should not create blocks for leading spaces that are\n    // existing around ol/ul and their children list items\n    if (lastList && nodeTextContent === '' && node.parentElement) {\n      var parentNodeName = node.parentElement.nodeName.toLowerCase();\n      if (parentNodeName === 'ol' || parentNodeName === 'ul') {\n        return { chunk: _extends({}, EMPTY_CHUNK), entityMap: entityMap };\n      }\n    }\n\n    if (nodeTextContent === '' && inBlock !== 'pre') {\n      return { chunk: getWhitespaceChunk(inEntity), entityMap: entityMap };\n    }\n    if (inBlock !== 'pre') {\n      // Can't use empty string because MSWord\n      _text = _text.replace(REGEX_LF, SPACE);\n    }\n\n    // save the last block so we can use it later\n    lastBlock = nodeName;\n\n    return {\n      chunk: {\n        text: _text,\n        inlines: Array(_text.length).fill(inlineStyle),\n        entities: Array(_text.length).fill(inEntity),\n        blocks: []\n      },\n      entityMap: entityMap\n    };\n  }\n\n  // save the last block so we can use it later\n  lastBlock = nodeName;\n\n  // BR tags\n  if (nodeName === 'br') {\n    if (lastLastBlock === 'br' && (!inBlock || inBlockType === 'unstyled')) {\n      return {\n        chunk: getBlockDividerChunk('unstyled', depth, parentKey),\n        entityMap: entityMap\n      };\n    }\n    return { chunk: getSoftNewlineChunk(), entityMap: entityMap };\n  }\n\n  // IMG tags\n  if (nodeName === 'img' && node instanceof HTMLImageElement && node.attributes.getNamedItem('src') && node.attributes.getNamedItem('src').value) {\n    var image = node;\n    var entityConfig = {};\n\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    });\n    // Forcing this node to have children because otherwise no entity will be\n    // created for this node.\n    // The child text node cannot just have a space or return as content -\n    // we strip those out.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n    node.textContent = '\\uD83D\\uDCF7';\n\n    // TODO: update this when we remove DraftEntity entirely\n    inEntity = DraftEntity.__create('IMAGE', 'MUTABLE', entityConfig || {});\n  }\n\n  // Inline tags\n  inlineStyle = processInlineTag(nodeName, node, inlineStyle);\n\n  // Handle lists\n  if (nodeName === 'ul' || nodeName === 'ol') {\n    if (lastList) {\n      depth += 1;\n    }\n    lastList = nodeName;\n  }\n\n  if (!experimentalTreeDataSupport && nodeName === 'li' && node instanceof HTMLElement) {\n    depth = getListItemDepth(node, depth);\n  }\n\n  var blockType = getBlockTypeForTag(nodeName, lastList, blockRenderMap);\n  var inListBlock = lastList && inBlock === 'li' && nodeName === 'li';\n  var inBlockOrHasNestedBlocks = (!inBlock || experimentalTreeDataSupport) && blockTags.indexOf(nodeName) !== -1;\n\n  // Block Tags\n  if (inListBlock || inBlockOrHasNestedBlocks) {\n    chunk = getBlockDividerChunk(blockType, depth, parentKey);\n    blockKey = chunk.blocks[0].key;\n    inBlock = nodeName;\n    newBlock = !experimentalTreeDataSupport;\n  }\n\n  // this is required so that we can handle 'ul' and 'ol'\n  if (inListBlock) {\n    nextBlockType = lastList === 'ul' ? 'unordered-list-item' : 'ordered-list-item';\n  }\n\n  // Recurse through children\n  var child = node.firstChild;\n  if (child != null) {\n    nodeName = child.nodeName.toLowerCase();\n  }\n\n  var entityId = null;\n\n  while (child) {\n    if (child instanceof HTMLAnchorElement && child.href && hasValidLinkText(child)) {\n      (function () {\n        var anchor = child;\n        var entityConfig = {};\n\n        anchorAttr.forEach(function (attr) {\n          var anchorAttribute = anchor.getAttribute(attr);\n          if (anchorAttribute) {\n            entityConfig[attr] = anchorAttribute;\n          }\n        });\n\n        entityConfig.url = new URI(anchor.href).toString();\n        // TODO: update this when we remove DraftEntity completely\n        entityId = DraftEntity.__create('LINK', 'MUTABLE', entityConfig || {});\n      })();\n    } else {\n      entityId = undefined;\n    }\n\n    var _genFragment = genFragment(newEntityMap, child, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, entityId || inEntity, experimentalTreeDataSupport ? blockKey : null),\n        generatedChunk = _genFragment.chunk,\n        maybeUpdatedEntityMap = _genFragment.entityMap;\n\n    newChunk = generatedChunk;\n    newEntityMap = maybeUpdatedEntityMap;\n\n    chunk = joinChunks(chunk, newChunk, experimentalTreeDataSupport);\n    var sibling = child.nextSibling;\n\n    // Put in a newline to break up blocks inside blocks\n    if (!parentKey && sibling && blockTags.indexOf(nodeName) >= 0 && inBlock) {\n      chunk = joinChunks(chunk, getSoftNewlineChunk());\n    }\n    if (sibling) {\n      nodeName = sibling.nodeName.toLowerCase();\n    }\n    child = sibling;\n  }\n\n  if (newBlock) {\n    chunk = joinChunks(chunk, getBlockDividerChunk(nextBlockType, depth, parentKey));\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar getChunkForHTML = function getChunkForHTML(html, DOMBuilder, blockRenderMap, entityMap) {\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, '');\n\n  var supportedBlockTags = getBlockMapSupportedTags(blockRenderMap);\n\n  var safeBody = DOMBuilder(html);\n  if (!safeBody) {\n    return null;\n  }\n  lastBlock = null;\n\n  // Sometimes we aren't dealing with content that contains nice semantic\n  // tags. In this case, use divs to separate everything out into paragraphs\n  // and hope for the best.\n  var workingBlocks = containsSemanticBlockMarkup(html, supportedBlockTags) ? supportedBlockTags : ['div'];\n\n  // Start with -1 block depth to offset the fact that we are passing in a fake\n  // UL block to start with.\n  var fragment = genFragment(entityMap, safeBody, OrderedSet(), 'ul', null, workingBlocks, -1, blockRenderMap);\n\n  var chunk = fragment.chunk;\n  var newEntityMap = fragment.entityMap;\n\n  // join with previous block to prevent weirdness on paste\n  if (chunk.text.indexOf('\\r') === 0) {\n    chunk = {\n      text: chunk.text.slice(1),\n      inlines: chunk.inlines.slice(1),\n      entities: chunk.entities.slice(1),\n      blocks: chunk.blocks\n    };\n  }\n\n  // Kill block delimiter at the end\n  if (chunk.text.slice(-1) === '\\r') {\n    chunk.text = chunk.text.slice(0, -1);\n    chunk.inlines = chunk.inlines.slice(0, -1);\n    chunk.entities = chunk.entities.slice(0, -1);\n    chunk.blocks.pop();\n  }\n\n  // If we saw no block tags, put an unstyled one in\n  if (chunk.blocks.length === 0) {\n    chunk.blocks.push(_extends({}, EMPTY_CHUNK, {\n      type: 'unstyled',\n      depth: 0\n    }));\n  }\n\n  // Sometimes we start with text that isn't in a block, which is then\n  // followed by blocks. Need to fix up the blocks to add in\n  // an unstyled block for this content\n  if (chunk.text.split('\\r').length === chunk.blocks.length + 1) {\n    chunk.blocks.unshift({ type: 'unstyled', depth: 0 });\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar convertChunkToContentBlocks = function convertChunkToContentBlocks(chunk) {\n  if (!chunk || !chunk.text || !Array.isArray(chunk.blocks)) {\n    return null;\n  }\n\n  var initialState = {\n    cacheRef: {},\n    contentBlocks: []\n  };\n\n  var start = 0;\n\n  var rawBlocks = chunk.blocks,\n      rawInlines = chunk.inlines,\n      rawEntities = chunk.entities;\n\n\n  var BlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\n  return chunk.text.split('\\r').reduce(function (acc, textBlock, index) {\n    // Make absolutely certain that our text is acceptable.\n    textBlock = sanitizeDraftText(textBlock);\n\n    var block = rawBlocks[index];\n    var end = start + textBlock.length;\n    var inlines = rawInlines.slice(start, end);\n    var entities = rawEntities.slice(start, end);\n    var characterList = List(inlines.map(function (style, index) {\n      var data = { style: style, entity: null };\n      if (entities[index]) {\n        data.entity = entities[index];\n      }\n      return CharacterMetadata.create(data);\n    }));\n    start = end + 1;\n\n    var depth = block.depth,\n        type = block.type,\n        parent = block.parent;\n\n\n    var key = block.key || generateRandomKey();\n    var parentTextNodeKey = null; // will be used to store container text nodes\n\n    // childrens add themselves to their parents since we are iterating in order\n    if (parent) {\n      var parentIndex = acc.cacheRef[parent];\n      var parentRecord = acc.contentBlocks[parentIndex];\n\n      // if parent has text we need to split it into a separate unstyled element\n      if (parentRecord.getChildKeys().isEmpty() && parentRecord.getText()) {\n        var parentCharacterList = parentRecord.getCharacterList();\n        var parentText = parentRecord.getText();\n        parentTextNodeKey = generateRandomKey();\n\n        var textNode = new ContentBlockNode({\n          key: parentTextNodeKey,\n          text: parentText,\n          characterList: parentCharacterList,\n          parent: parent,\n          nextSibling: key\n        });\n\n        acc.contentBlocks.push(textNode);\n\n        parentRecord = parentRecord.withMutations(function (block) {\n          block.set('characterList', List()).set('text', '').set('children', parentRecord.children.push(textNode.getKey()));\n        });\n      }\n\n      acc.contentBlocks[parentIndex] = parentRecord.set('children', parentRecord.children.push(key));\n    }\n\n    var blockNode = new BlockNodeRecord({\n      key: key,\n      parent: parent,\n      type: type,\n      depth: depth,\n      text: textBlock,\n      characterList: characterList,\n      prevSibling: parentTextNodeKey || (index === 0 || rawBlocks[index - 1].parent !== parent ? null : rawBlocks[index - 1].key),\n      nextSibling: index === rawBlocks.length - 1 || rawBlocks[index + 1].parent !== parent ? null : rawBlocks[index + 1].key\n    });\n\n    // insert node\n    acc.contentBlocks.push(blockNode);\n\n    // cache ref for building links\n    acc.cacheRef[blockNode.key] = index;\n\n    return acc;\n  }, initialState).contentBlocks;\n};\n\nvar convertFromHTMLtoContentBlocks = function convertFromHTMLtoContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n\n  // TODO: replace DraftEntity with an OrderedMap here\n  var chunkData = getChunkForHTML(html, DOMBuilder, blockRenderMap, DraftEntity);\n\n  if (chunkData == null) {\n    return null;\n  }\n\n  var chunk = chunkData.chunk,\n      entityMap = chunkData.entityMap;\n\n  var contentBlocks = convertChunkToContentBlocks(chunk);\n\n  return {\n    contentBlocks: contentBlocks,\n    entityMap: entityMap\n  };\n};\n\nmodule.exports = convertFromHTMLtoContentBlocks;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_extends","_assign","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","_knownListItemDepthCl","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","CharacterMetadata","ContentBlock","ContentBlockNode","DefaultDraftBlockRenderMap","DraftEntity","DraftFeatureFlags","Immutable","_require","Set","URI","cx","generateRandomKey","getSafeBodyFromHTML","invariant","sanitizeDraftText","experimentalTreeDataSupport","draft_tree_data_support","List","OrderedSet","NBSP","SPACE","MAX_DEPTH","REGEX_CR","RegExp","REGEX_LF","REGEX_NBSP","REGEX_CARRIAGE","REGEX_ZWS","boldValues","notBoldValues","inlineTags","b","code","del","em","s","strike","strong","u","knownListItemDepthClasses","anchorAttr","imgAttr","lastBlock","EMPTY_CHUNK","text","inlines","entities","blocks","EMPTY_BLOCK","children","depth","type","getListBlockType","tag","lastList","getBlockMapSupportedTags","blockRenderMap","unstyledElement","get","element","tags","forEach","draftBlock","aliasedElements","add","filter","toArray","sort","getMultiMatchedType","multiMatchExtractor","ii","matchType","getBlockTypeForTag","matchedTypes","wrapper","some","alias","keySeq","toSet","processInlineTag","node","currentStyle","styleToCheck","toOrderedSet","HTMLElement","htmlElement","withMutations","style","fontWeight","fontStyle","textDecoration","indexOf","remove","joinChunks","A","B","experimentalHasNestedBlocks","lastInA","slice","firstInB","pop","shift","concat","containsSemanticBlockMarkup","html","blockTags","hasValidLinkText","link","HTMLAnchorElement","NODE_ENV","protocol","getWhitespaceChunk","inEntity","Array","getSoftNewlineChunk","getChunkedBlock","props","undefined","getBlockDividerChunk","block","parentKey","parent","Math","max","min","getListItemDepth","keys","depthClass","classList","contains","genFragment","entityMap","inlineStyle","inBlock","lastLastBlock","nodeName","toLowerCase","newEntityMap","nextBlockType","newBlock","inBlockType","chunk","newChunk","blockKey","_text","textContent","nodeTextContent","trim","parentElement","parentNodeName","replace","fill","HTMLImageElement","attributes","getNamedItem","image","entityConfig","attr","imageAttribute","getAttribute","__create","blockType","inListBlock","inBlockOrHasNestedBlocks","child","firstChild","entityId","href","anchor","anchorAttribute","url","toString","_genFragment","generatedChunk","maybeUpdatedEntityMap","sibling","nextSibling","getChunkForHTML","DOMBuilder","supportedBlockTags","safeBody","workingBlocks","fragment","push","split","unshift","convertChunkToContentBlocks","isArray","initialState","cacheRef","contentBlocks","start","rawBlocks","rawInlines","rawEntities","BlockNodeRecord","reduce","acc","textBlock","index","end","characterList","map","data","entity","create","parentTextNodeKey","parentIndex","parentRecord","getChildKeys","isEmpty","getText","parentCharacterList","getCharacterList","parentText","textNode","set","getKey","blockNode","prevSibling","convertFromHTMLtoContentBlocks","chunkData"]
}
