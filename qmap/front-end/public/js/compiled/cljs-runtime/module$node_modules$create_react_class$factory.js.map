{
"version":3,
"file":"module$node_modules$create_react_class$factory.js",
"lineCount":23,
"mappings":"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",
"sources":["node_modules/create-react-class/factory.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$create_react_class$factory\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins';\n\n// Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n\n  var injectedMixins = [];\n\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n  var RESERVED_SPEC_KEYS = {\n    displayName: function(Constructor, displayName) {\n      Constructor.displayName = displayName;\n    },\n    mixins: function(Constructor, mixins) {\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function(Constructor, childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, childContextTypes, 'childContext');\n      }\n      Constructor.childContextTypes = _assign(\n        {},\n        Constructor.childContextTypes,\n        childContextTypes\n      );\n    },\n    contextTypes: function(Constructor, contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, contextTypes, 'context');\n      }\n      Constructor.contextTypes = _assign(\n        {},\n        Constructor.contextTypes,\n        contextTypes\n      );\n    },\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function(Constructor, getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(\n          Constructor.getDefaultProps,\n          getDefaultProps\n        );\n      } else {\n        Constructor.getDefaultProps = getDefaultProps;\n      }\n    },\n    propTypes: function(Constructor, propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, propTypes, 'prop');\n      }\n      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);\n    },\n    statics: function(Constructor, statics) {\n      mixStaticSpecIntoComponent(Constructor, statics);\n    },\n    autobind: function() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            typeof typeDef[propName] === 'function',\n            '%s: %s type `%s` is invalid; it must be a function, usually from ' +\n              'React.PropTypes.',\n            Constructor.displayName || 'ReactClass',\n            ReactPropTypeLocationNames[location],\n            propName\n          );\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name)\n      ? ReactClassInterface[name]\n      : null;\n\n    // Disallow overriding of base class methods unless explicitly allowed.\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(\n        specPolicy === 'OVERRIDE_BASE',\n        'ReactClassInterface: You are attempting to override ' +\n          '`%s` from your class specification. Ensure that your method names ' +\n          'do not overlap with React methods.',\n        name\n      );\n    }\n\n    // Disallow defining methods more than once unless explicitly allowed.\n    if (isAlreadyDefined) {\n      _invariant(\n        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',\n        'ReactClassInterface: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be due ' +\n          'to a mixin.',\n        name\n      );\n    }\n  }\n\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(\n            isMixinValid,\n            \"%s: You're attempting to include a mixin that is either null \" +\n              'or not an object. Check the mixins included by the component, ' +\n              'as well as any mixins they include themselves. ' +\n              'Expected object but got %s.',\n            Constructor.displayName || 'ReactClass',\n            spec === null ? null : typeofSpec\n          );\n        }\n      }\n\n      return;\n    }\n\n    _invariant(\n      typeof spec !== 'function',\n      \"ReactClass: You're attempting to \" +\n        'use a component class or function as a mixin. Instead, just use a ' +\n        'regular object.'\n    );\n    _invariant(\n      !isValidElement(spec),\n      \"ReactClass: You're attempting to \" +\n        'use a component as a mixin. Instead, just use a regular object.'\n    );\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs;\n\n    // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind =\n          isFunction &&\n          !isReactClassMethod &&\n          !isAlreadyDefined &&\n          spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name];\n\n            // These cases should already be caught by validateMethodOverride.\n            _invariant(\n              isReactClassMethod &&\n                (specPolicy === 'DEFINE_MANY_MERGED' ||\n                  specPolicy === 'DEFINE_MANY'),\n              'ReactClass: Unexpected spec policy %s for key %s ' +\n                'when mixing in component specs.',\n              specPolicy,\n              name\n            );\n\n            // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n    for (var name in statics) {\n      var property = statics[name];\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = name in RESERVED_SPEC_KEYS;\n      _invariant(\n        !isReserved,\n        'ReactClass: You are attempting to define a reserved ' +\n          'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' +\n          'as an instance property instead; it will still be accessible on the ' +\n          'constructor.',\n        name\n      );\n\n      var isInherited = name in Constructor;\n      _invariant(\n        !isInherited,\n        'ReactClass: You are attempting to define ' +\n          '`%s` on your component more than once. This conflict may be ' +\n          'due to a mixin.',\n        name\n      );\n      Constructor[name] = property;\n    }\n  }\n\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(\n      one && two && typeof one === 'object' && typeof two === 'object',\n      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'\n    );\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(\n          one[key] === undefined,\n          'mergeIntoWithNoDuplicateKeys(): ' +\n            'Tried to merge two objects with the same key: `%s`. This conflict ' +\n            'may be due to a mixin; in particular, this may be caused by two ' +\n            'getInitialState() or getDefaultProps() methods returning objects ' +\n            'with clashing keys.',\n          key\n        );\n        one[key] = two[key];\n      }\n    }\n    return one;\n  }\n\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n      boundMethod.bind = function(newThis) {\n        for (\n          var _len = arguments.length,\n            args = Array(_len > 1 ? _len - 1 : 0),\n            _key = 1;\n          _key < _len;\n          _key++\n        ) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): React component methods may only be bound to the ' +\n                'component instance. See %s',\n              componentName\n            );\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(\n              false,\n              'bind(): You are binding a component method to the component. ' +\n                'React does this for you automatically in a high-performance ' +\n                'way, so you can safely remove this call. See %s',\n              componentName\n            );\n          }\n          return boundMethod;\n        }\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n    return boundMethod;\n  }\n\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function() {\n      this.__isMounted = true;\n    }\n  };\n\n  var IsMountedPostMixin = {\n    componentWillUnmount: function() {\n      this.__isMounted = false;\n    }\n  };\n\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this.__didWarnIsMounted,\n          '%s: isMounted is deprecated. Instead, make sure to clean up ' +\n            'subscriptions and pending requests in componentWillUnmount to ' +\n            'prevent memory leaks.',\n          (this.constructor && this.constructor.displayName) ||\n            this.name ||\n            'Component'\n        );\n        this.__didWarnIsMounted = true;\n      }\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function() {};\n  _assign(\n    ReactClassComponent.prototype,\n    ReactComponent.prototype,\n    ReactClassMixin\n  );\n\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function(props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n\n      if (process.env.NODE_ENV !== 'production') {\n        warning(\n          this instanceof Constructor,\n          'Something is calling a React component directly. Use a factory or ' +\n            'JSX instead. See: https://fb.me/react-legacyfactory'\n        );\n      }\n\n      // Wire up auto-binding\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n\n      this.state = null;\n\n      // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (\n          initialState === undefined &&\n          this.getInitialState._isMockFunction\n        ) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n      _invariant(\n        typeof initialState === 'object' && !Array.isArray(initialState),\n        '%s.getInitialState(): must return an object or null',\n        Constructor.displayName || 'ReactCompositeComponent'\n      );\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin);\n\n    // Initialize the defaultProps property after all mixins have been merged.\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(\n      Constructor.prototype.render,\n      'createClass(...): Class specification must implement a `render` method.'\n    );\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(\n        !Constructor.prototype.componentShouldUpdate,\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        spec.displayName || 'A component'\n      );\n      warning(\n        !Constructor.prototype.componentWillRecieveProps,\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        spec.displayName || 'A component'\n      );\n    }\n\n    // Reduce time spent doing lookups by setting these on the prototype.\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_assign","emptyObject","_invariant","NODE_ENV","warning","MIXINS_KEY","identity","fn","ReactPropTypeLocationNames","prop","context","childContext","factory","ReactComponent","isValidElement","ReactNoopUpdateQueue","injectedMixins","ReactClassInterface","mixins","statics","propTypes","contextTypes","childContextTypes","getDefaultProps","getInitialState","getChildContext","render","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","componentWillUnmount","updateComponent","RESERVED_SPEC_KEYS","displayName","Constructor","i","length","mixSpecIntoComponent","validateTypeDef","createMergedResultFunction","mixStaticSpecIntoComponent","autobind","typeDef","location","propName","hasOwnProperty","validateMethodOverride","isAlreadyDefined","name","specPolicy","ReactClassMixin","spec","typeofSpec","isMixinValid","proto","prototype","autoBindPairs","__reactAutoBindPairs","property","isReactClassMethod","isFunction","shouldAutoBind","push","createChainedFunction","isReserved","isInherited","mergeIntoWithNoDuplicateKeys","one","two","key","undefined","mergedResult","a","apply","arguments","b","c","chainedFunction","bindAutoBindMethod","component","method","boundMethod","bind","__reactBoundContext","__reactBoundMethod","__reactBoundArguments","componentName","constructor","_bind","boundMethod.bind","newThis","_len","args","Array","_key","reboundMethod","bindAutoBindMethods","pairs","autoBindKey","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","updater","enqueueReplaceState","isMounted","__didWarnIsMounted","ReactClassComponent","createClass","props","refs","state","initialState","_isMockFunction","isArray","forEach","defaultProps","isReactClassApproved","componentShouldUpdate","componentWillRecieveProps","methodName"]
}
