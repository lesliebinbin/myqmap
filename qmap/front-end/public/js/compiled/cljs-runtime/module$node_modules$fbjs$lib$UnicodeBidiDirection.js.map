{
"version":3,
"file":"module$node_modules$fbjs$lib$UnicodeBidiDirection.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,mDAAf,CAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA2BnI,IAAIC,UAAYJ,OAAA,CAAQ,wCAAR,CAEhB,KAAIK,QAAU,SACd,KAAIC,IAAM,KACV,KAAIC,IAAM,KAEV,KAAIC,UAAY,IAOhBC,SAASA,SAAQ,CAACC,GAAD,CAAM,CACrB,MAAOA,IAAP,GAAeJ,GAAf,EAAsBI,GAAtB,GAA8BH,GADT,CAQvBI,QAASA,WAAU,CAACD,GAAD,CAAM,CACvB,CAACD,QAAA,CAASC,GAAT,CAAD,CAAiBE,aAAA,GAAyB,YAAzB,CAAwCR,SAAA,CAAU,KAAV,CAAiB,oEAAjB,CAAxC,CAAiIA,SAAA,CAAU,KAAV,CAAlJ,CAAqK,IAAK,EAC1K,OAAOM,IAAA;AAAQJ,GAAR,CAAc,KAAd,CAAsB,KAFN,CAUzBO,QAASA,sBAAqB,CAACH,GAAD,CAAMI,QAAN,CAAgB,CAC5C,CAACL,QAAA,CAASC,GAAT,CAAD,CAAiBE,aAAA,GAAyB,YAAzB,CAAwCR,SAAA,CAAU,KAAV,CAAiB,oEAAjB,CAAxC,CAAiIA,SAAA,CAAU,KAAV,CAAlJ,CAAqK,IAAK,EAC1K,EAACK,QAAA,CAASK,QAAT,CAAD,CAAsBF,aAAA,GAAyB,YAAzB,CAAwCR,SAAA,CAAU,KAAV,CAAiB,yEAAjB,CAAxC,CAAsIA,SAAA,CAAU,KAAV,CAA5J,CAA+K,IAAK,EACpL,OAAOM,IAAA,GAAQI,QAAR,CAAmB,IAAnB,CAA0BH,UAAA,CAAWD,GAAX,CAHW,CAW9CK,QAASA,aAAY,CAACL,GAAD,CAAM,CACzBF,SAAA,CAAYE,GADa,CAO3BM,QAASA,cAAa,EAAG,CACvBD,YAAA,CAAaT,GAAb,CADuB;AAOzBW,QAASA,aAAY,EAAG,CACtB,GAAI,CAACT,SAAL,CACE,IAAAQ,cAAA,EAEF,EAACR,SAAD,CAAaI,aAAA,GAAyB,YAAzB,CAAwCR,SAAA,CAAU,KAAV,CAAiB,2BAAjB,CAAxC,CAAwFA,SAAA,CAAU,KAAV,CAArG,CAAwH,IAAK,EAC7H,OAAOI,UALe,CAQxB,IAAIU,qBAAuB,CAEzBb,QAASA,OAFgB,CAGzBC,IAAKA,GAHoB,CAIzBC,IAAKA,GAJoB,CAMzBE,SAAUA,QANe,CAOzBE,WAAYA,UAPa,CAQzBE,sBAAuBA,qBARE,CAUzBE,aAAcA,YAVW,CAWzBC,cAAeA,aAXU,CAYzBC,aAAcA,YAZW,CAe3BhB,OAAAC,QAAA,CAAiBgB,oBA1GkH;",
"sources":["node_modules/fbjs/lib/UnicodeBidiDirection.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$UnicodeBidiDirection\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/**\n * Constants to represent text directionality\n *\n * Also defines a *global* direciton, to be used in bidi algorithms as a\n * default fallback direciton, when no better direction is found or provided.\n *\n * NOTE: Use `setGlobalDir()`, or update `initGlobalDir()`, to set the initial\n *       global direction value based on the application.\n *\n * Part of the implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */\n\n'use strict';\n\nvar invariant = require('./invariant');\n\nvar NEUTRAL = 'NEUTRAL'; // No strong direction\nvar LTR = 'LTR'; // Left-to-Right direction\nvar RTL = 'RTL'; // Right-to-Left direction\n\nvar globalDir = null;\n\n// == Helpers ==\n\n/**\n * Check if a directionality value is a Strong one\n */\nfunction isStrong(dir) {\n  return dir === LTR || dir === RTL;\n}\n\n/**\n * Get string value to be used for `dir` HTML attribute or `direction` CSS\n * property.\n */\nfunction getHTMLDir(dir) {\n  !isStrong(dir) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dir` must be a strong direction to be converted to HTML Direction') : invariant(false) : void 0;\n  return dir === LTR ? 'ltr' : 'rtl';\n}\n\n/**\n * Get string value to be used for `dir` HTML attribute or `direction` CSS\n * property, but returns null if `dir` has same value as `otherDir`.\n * `null`.\n */\nfunction getHTMLDirIfDifferent(dir, otherDir) {\n  !isStrong(dir) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dir` must be a strong direction to be converted to HTML Direction') : invariant(false) : void 0;\n  !isStrong(otherDir) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`otherDir` must be a strong direction to be converted to HTML Direction') : invariant(false) : void 0;\n  return dir === otherDir ? null : getHTMLDir(dir);\n}\n\n// == Global Direction ==\n\n/**\n * Set the global direction.\n */\nfunction setGlobalDir(dir) {\n  globalDir = dir;\n}\n\n/**\n * Initialize the global direction\n */\nfunction initGlobalDir() {\n  setGlobalDir(LTR);\n}\n\n/**\n * Get the global direction\n */\nfunction getGlobalDir() {\n  if (!globalDir) {\n    this.initGlobalDir();\n  }\n  !globalDir ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Global direction not set.') : invariant(false) : void 0;\n  return globalDir;\n}\n\nvar UnicodeBidiDirection = {\n  // Values\n  NEUTRAL: NEUTRAL,\n  LTR: LTR,\n  RTL: RTL,\n  // Helpers\n  isStrong: isStrong,\n  getHTMLDir: getHTMLDir,\n  getHTMLDirIfDifferent: getHTMLDirIfDifferent,\n  // Global Direction\n  setGlobalDir: setGlobalDir,\n  initGlobalDir: initGlobalDir,\n  getGlobalDir: getGlobalDir\n};\n\nmodule.exports = UnicodeBidiDirection;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","invariant","NEUTRAL","LTR","RTL","globalDir","isStrong","dir","getHTMLDir","NODE_ENV","getHTMLDirIfDifferent","otherDir","setGlobalDir","initGlobalDir","getGlobalDir","UnicodeBidiDirection"]
}
