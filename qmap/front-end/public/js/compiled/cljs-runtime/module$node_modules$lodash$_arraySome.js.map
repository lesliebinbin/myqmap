{
"version":3,
"file":"module$node_modules$lodash$_arraySome.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,uCAAf,CAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAWvHC,QAASA,UAAS,CAACC,KAAD,CAAQC,SAAR,CAAmB,CACnC,IAAIC,MAAS,EAAb,CACIC,OAASH,KAAA,EAAS,IAAT,CAAgB,CAAhB,CAAoBA,KAAAG,OAEjC,OAAO,EAAED,KAAT,CAAiBC,MAAjB,CACE,GAAIF,SAAA,CAAUD,KAAA,CAAME,KAAN,CAAV,CAAwBA,KAAxB,CAA+BF,KAA/B,CAAJ,CACE,MAAO,KAGX,OAAO,MAT4B,CAYrCJ,MAAAC,QAAA,CAAiBE,SAvBsG;",
"sources":["node_modules/lodash/_arraySome.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_arraySome\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","arraySome","array","predicate","index","length"]
}
