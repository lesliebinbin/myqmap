shadow$provide["module$node_modules$draft_js$lib$editOnKeyDown"]=function(global,process,require,module,exports,shadow$shims){var DraftModifier=require("module$node_modules$draft_js$lib$DraftModifier");var EditorState=require("module$node_modules$draft_js$lib$EditorState");var KeyBindingUtil=require("module$node_modules$draft_js$lib$KeyBindingUtil");var Keys=require("module$node_modules$fbjs$lib$Keys");var SecondaryClipboard=require("module$node_modules$draft_js$lib$SecondaryClipboard");var UserAgent=
require("module$node_modules$fbjs$lib$UserAgent");var isEventHandled=require("module$node_modules$draft_js$lib$isEventHandled");var keyCommandBackspaceToStartOfLine=require("module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine");var keyCommandBackspaceWord=require("module$node_modules$draft_js$lib$keyCommandBackspaceWord");var keyCommandDeleteWord=require("module$node_modules$draft_js$lib$keyCommandDeleteWord");var keyCommandInsertNewline=require("module$node_modules$draft_js$lib$keyCommandInsertNewline");
var keyCommandMoveSelectionToEndOfBlock=require("module$node_modules$draft_js$lib$keyCommandMoveSelectionToEndOfBlock");var keyCommandMoveSelectionToStartOfBlock=require("module$node_modules$draft_js$lib$keyCommandMoveSelectionToStartOfBlock");var keyCommandPlainBackspace=require("module$node_modules$draft_js$lib$keyCommandPlainBackspace");var keyCommandPlainDelete=require("module$node_modules$draft_js$lib$keyCommandPlainDelete");var keyCommandTransposeCharacters=require("module$node_modules$draft_js$lib$keyCommandTransposeCharacters");
var keyCommandUndo=require("module$node_modules$draft_js$lib$keyCommandUndo");var isOptionKeyCommand=KeyBindingUtil.isOptionKeyCommand;var isChrome=UserAgent.isBrowser("Chrome");function onKeyCommand(command,editorState){switch(command){case "redo":return EditorState.redo(editorState);case "delete":return keyCommandPlainDelete(editorState);case "delete-word":return keyCommandDeleteWord(editorState);case "backspace":return keyCommandPlainBackspace(editorState);case "backspace-word":return keyCommandBackspaceWord(editorState);
case "backspace-to-start-of-line":return keyCommandBackspaceToStartOfLine(editorState);case "split-block":return keyCommandInsertNewline(editorState);case "transpose-characters":return keyCommandTransposeCharacters(editorState);case "move-selection-to-start-of-block":return keyCommandMoveSelectionToStartOfBlock(editorState);case "move-selection-to-end-of-block":return keyCommandMoveSelectionToEndOfBlock(editorState);case "secondary-cut":return SecondaryClipboard.cut(editorState);case "secondary-paste":return SecondaryClipboard.paste(editorState);
default:return editorState}}function editOnKeyDown(editor,e){var keyCode=e.which;var editorState=editor._latestEditorState;switch(keyCode){case Keys.RETURN:e.preventDefault();if(editor.props.handleReturn&&isEventHandled(editor.props.handleReturn(e,editorState)))return;break;case Keys.ESC:e.preventDefault();editor.props.onEscape&&editor.props.onEscape(e);return;case Keys.TAB:editor.props.onTab&&editor.props.onTab(e);return;case Keys.UP:editor.props.onUpArrow&&editor.props.onUpArrow(e);return;case Keys.RIGHT:editor.props.onRightArrow&&
editor.props.onRightArrow(e);return;case Keys.DOWN:editor.props.onDownArrow&&editor.props.onDownArrow(e);return;case Keys.LEFT:editor.props.onLeftArrow&&editor.props.onLeftArrow(e);return;case Keys.SPACE:if(isChrome&&isOptionKeyCommand(e)){e.preventDefault();var contentState=DraftModifier.replaceText(editorState.getCurrentContent(),editorState.getSelection(),"Â ");editor.update(EditorState.push(editorState,contentState,"insert-characters"));return}}var command=editor.props.keyBindingFn(e);if(!command)return;
if(command==="undo"){keyCommandUndo(e,editorState,editor.update);return}e.preventDefault();if(editor.props.handleKeyCommand&&isEventHandled(editor.props.handleKeyCommand(command,editorState)))return;var newState=onKeyCommand(command,editorState);if(newState!==editorState)editor.update(newState)}module.exports=editOnKeyDown}
//# sourceMappingURL=module$node_modules$draft_js$lib$editOnKeyDown.js.map
