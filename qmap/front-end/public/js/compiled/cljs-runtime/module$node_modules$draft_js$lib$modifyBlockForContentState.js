shadow$provide["module$node_modules$draft_js$lib$modifyBlockForContentState"]=function(global,process,require,module,exports,shadow$shims){var Immutable=require("module$node_modules$immutable$dist$immutable");var Map=Immutable.Map;function modifyBlockForContentState(contentState,selectionState,operation){var startKey=selectionState.getStartKey();var endKey=selectionState.getEndKey();var blockMap=contentState.getBlockMap();var newBlocks=blockMap.toSeq().skipUntil(function(_,k){return k===startKey}).takeUntil(function(_,
k){return k===endKey}).concat(Map([[endKey,blockMap.get(endKey)]])).map(operation);return contentState.merge({blockMap:blockMap.merge(newBlocks),selectionBefore:selectionState,selectionAfter:selectionState})}module.exports=modifyBlockForContentState}
//# sourceMappingURL=module$node_modules$draft_js$lib$modifyBlockForContentState.js.map
