shadow$provide["module$node_modules$draft_js$lib$editOnInput"]=function(global,process,require,module,exports,shadow$shims){var DraftFeatureFlags=require("module$node_modules$draft_js$lib$DraftFeatureFlags");var DraftModifier=require("module$node_modules$draft_js$lib$DraftModifier");var DraftOffsetKey=require("module$node_modules$draft_js$lib$DraftOffsetKey");var EditorState=require("module$node_modules$draft_js$lib$EditorState");var UserAgent=require("module$node_modules$fbjs$lib$UserAgent");var findAncestorOffsetKey=
require("module$node_modules$draft_js$lib$findAncestorOffsetKey");var nullthrows=require("module$node_modules$fbjs$lib$nullthrows");var isGecko=UserAgent.isEngine("Gecko");var DOUBLE_NEWLINE="\n\n";function editOnInput(editor){if(editor._pendingStateFromBeforeInput!==undefined){editor.update(editor._pendingStateFromBeforeInput);editor._pendingStateFromBeforeInput=undefined}var domSelection=global.getSelection();var anchorNode=domSelection.anchorNode,isCollapsed=domSelection.isCollapsed;var isNotTextNode=
anchorNode.nodeType!==Node.TEXT_NODE;var isNotTextOrElementNode=anchorNode.nodeType!==Node.TEXT_NODE&&anchorNode.nodeType!==Node.ELEMENT_NODE;if(DraftFeatureFlags.draft_killswitch_allow_nontextnodes){if(isNotTextNode)return}else if(isNotTextOrElementNode)return;if(anchorNode.nodeType===Node.TEXT_NODE&&(anchorNode.previousSibling!==null||anchorNode.nextSibling!==null)){var span=anchorNode.parentNode;anchorNode.nodeValue=span.textContent;for(var child=span.firstChild;child!==null;child=child.nextSibling)if(child!==
anchorNode)span.removeChild(child)}var domText=anchorNode.textContent;var editorState=editor._latestEditorState;var offsetKey=nullthrows(findAncestorOffsetKey(anchorNode));var _DraftOffsetKey$decod=DraftOffsetKey.decode(offsetKey),blockKey=_DraftOffsetKey$decod.blockKey,decoratorKey=_DraftOffsetKey$decod.decoratorKey,leafKey=_DraftOffsetKey$decod.leafKey;var _editorState$getBlock=editorState.getBlockTree(blockKey).getIn([decoratorKey,"leaves",leafKey]),start=_editorState$getBlock.start,end=_editorState$getBlock.end;
var content=editorState.getCurrentContent();var block=content.getBlockForKey(blockKey);var modelText=block.getText().slice(start,end);if(domText.endsWith(DOUBLE_NEWLINE))domText=domText.slice(0,-1);if(domText===modelText)return;var selection=editorState.getSelection();var targetRange=selection.merge({anchorOffset:start,focusOffset:end,isBackward:false});var entityKey=block.getEntityAt(start);var entity=entityKey&&content.getEntity(entityKey);var entityType=entity&&entity.getMutability();var preserveEntity=
entityType==="MUTABLE";var changeType=preserveEntity?"spellcheck-change":"apply-entity";var newContent=DraftModifier.replaceText(content,targetRange,domText,block.getInlineStyleAt(start),preserveEntity?block.getEntityAt(start):null);var anchorOffset,focusOffset,startOffset,endOffset;if(isGecko){anchorOffset=domSelection.anchorOffset;focusOffset=domSelection.focusOffset;startOffset=start+Math.min(anchorOffset,focusOffset);endOffset=startOffset+Math.abs(anchorOffset-focusOffset);anchorOffset=startOffset;
focusOffset=endOffset}else{var charDelta=domText.length-modelText.length;startOffset=selection.getStartOffset();endOffset=selection.getEndOffset();anchorOffset=isCollapsed?endOffset+charDelta:startOffset;focusOffset=endOffset+charDelta}var contentWithAdjustedDOMSelection=newContent.merge({selectionBefore:content.getSelectionAfter(),selectionAfter:selection.merge({anchorOffset:anchorOffset,focusOffset:focusOffset})});editor.update(EditorState.push(editorState,contentWithAdjustedDOMSelection,changeType))}
module.exports=editOnInput}
//# sourceMappingURL=module$node_modules$draft_js$lib$editOnInput.js.map
