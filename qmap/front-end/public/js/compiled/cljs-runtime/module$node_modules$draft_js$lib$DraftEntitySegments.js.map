{
"version":3,
"file":"module$node_modules$draft_js$lib$DraftEntitySegments.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAuCtI,IAAIC,oBAAsB,CACxBC,gBAAiBA,QAASA,gBAAe,CAACC,cAAD,CAAiBC,YAAjB,CAA+BC,IAA/B,CAAqCC,WAArC,CAAkDC,SAAlD,CAA6D,CACpG,IAAIC,SAAWH,IAAAI,MAAA,CAAW,GAAX,CACfD,SAAA,CAAWA,QAAAE,IAAA,CAAa,QAAS,CAAYC,OAAZ,CAA+BC,EAA/B,CAAmC,CAClE,GAAIL,SAAJ,GAAkB,SAAlB,CACE,IAAIK,EAAJ,CAAS,CAAT,CACE,MAAO,GAAP,CAAaD,OADf,CADF,IAIO,IAAIC,EAAJ,CAASJ,QAAAK,OAAT,CAA2B,CAA3B,CACL,MAAOF,QAAP,CAAiB,GAEnB,OAAOA,QAR2D,CAAzD,CAWX,KAAIG,aAAeR,WACnB,KAAIS,UACJ,KAAIJ,OACJ,KAAIK;AAAe,IACnB,KAAIC,WAAa,IAEjB,KAAK,IAAIC,GAAK,CAAd,CAAiBA,EAAjB,CAAsBV,QAAAK,OAAtB,CAAuCK,EAAA,EAAvC,CAA6C,CAC3CP,OAAA,CAAUH,QAAA,CAASU,EAAT,CACVH,WAAA,CAAaD,YAAb,CAA4BH,OAAAE,OAG5B,IAAIV,cAAJ,CAAqBY,UAArB,EAAmCD,YAAnC,CAAkDV,YAAlD,CACE,GAAIY,YAAJ,GAAqB,IAArB,CACEC,UAAA,CAAaF,UADf,KAEO,CACLC,YAAA,CAAeF,YACfG,WAAA,CAAaF,UAFR,CAHT,IAOO,IAAIC,YAAJ,GAAqB,IAArB,CACL,KAGFF,aAAA,CAAeC,UAhB4B,CAmB7C,IAAII,UAAYb,WAAZa,CAA0Bd,IAAAQ,OAC9B,KAAIO,QAAUJ,YAAVI,GAA2Bd,WAC/B,KAAIe,MAAQJ,UAARI,GAAuBF,SAE3B,IAAI,CAACC,OAAL,EAAgBC,KAAhB,EAAyBD,OAAzB,EAAoC,CAACC,KAArC,CACE,GAAId,SAAJ,GAAkB,SAAlB,CACE,IAAIU,UAAJ;AAAmBE,SAAnB,CACEF,UAAA,EADF,CADF,IAIO,IAAID,YAAJ,GAAqBV,WAArB,CACLU,YAAA,EAIJ,OAAO,CACLM,MAAON,YADF,CAELO,IAAKN,UAFA,CApD6F,CAD9E,CA4D1BnB,OAAAC,QAAA,CAAiBE,mBAnGqH;",
"sources":["node_modules/draft-js/lib/DraftEntitySegments.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$DraftEntitySegments\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntitySegments\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */\nvar DraftEntitySegments = {\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n    var segments = text.split(' ');\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\n      if (direction === 'forward') {\n        if (ii > 0) {\n          return ' ' + segment;\n        }\n      } else if (ii < segments.length - 1) {\n        return segment + ' ';\n      }\n      return segment;\n    });\n\n    var segmentStart = entityStart;\n    var segmentEnd;\n    var segment;\n    var removalStart = null;\n    var removalEnd = null;\n\n    for (var jj = 0; jj < segments.length; jj++) {\n      segment = segments[jj];\n      segmentEnd = segmentStart + segment.length;\n\n      // Our selection overlaps this segment.\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n        if (removalStart !== null) {\n          removalEnd = segmentEnd;\n        } else {\n          removalStart = segmentStart;\n          removalEnd = segmentEnd;\n        }\n      } else if (removalStart !== null) {\n        break;\n      }\n\n      segmentStart = segmentEnd;\n    }\n\n    var entityEnd = entityStart + text.length;\n    var atStart = removalStart === entityStart;\n    var atEnd = removalEnd === entityEnd;\n\n    if (!atStart && atEnd || atStart && !atEnd) {\n      if (direction === 'forward') {\n        if (removalEnd !== entityEnd) {\n          removalEnd++;\n        }\n      } else if (removalStart !== entityStart) {\n        removalStart--;\n      }\n    }\n\n    return {\n      start: removalStart,\n      end: removalEnd\n    };\n  }\n};\n\nmodule.exports = DraftEntitySegments;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","DraftEntitySegments","getRemovalRange","selectionStart","selectionEnd","text","entityStart","direction","segments","split","map","segment","ii","length","segmentStart","segmentEnd","removalStart","removalEnd","jj","entityEnd","atStart","atEnd","start","end"]
}
