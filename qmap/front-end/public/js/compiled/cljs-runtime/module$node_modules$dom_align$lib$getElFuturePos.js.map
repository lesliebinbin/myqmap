{
"version":3,
"file":"module$node_modules$dom_align$lib$getElFuturePos.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,kDAAf,CAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGlIC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAIA,KAAIC,gBAAkBP,OAAA,CAAQ,kDAAR,CAEtB,KAAIQ,iBAAmBC,sBAAA,CAAuBF,eAAvB,CAEvBE,SAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAErCE,QAASA,eAAc,CAACC,QAAD,CAAWC,aAAX,CAA0BC,MAA1B,CAAkCC,MAAlC,CAA0CC,YAA1C,CAAwD,CAC7E,IAAIC,GAAK,CAAC,CAAA,CAAGV,gBAAA,CAAiB,SAAjB,CAAJ,EAAiCM,aAAjC;AAAgDC,MAAA,CAAO,CAAP,CAAhD,CACT,KAAII,GAAK,CAAC,CAAA,CAAGX,gBAAA,CAAiB,SAAjB,CAAJ,EAAiCK,QAAjC,CAA2CE,MAAA,CAAO,CAAP,CAA3C,CACT,KAAIK,KAAO,CAACD,EAAAE,KAAD,CAAWH,EAAAG,KAAX,CAAoBF,EAAAG,IAApB,CAA6BJ,EAAAI,IAA7B,CAEX,OAAO,CACLD,KAAMR,QAAAQ,KAANA,CAAsBD,IAAA,CAAK,CAAL,CAAtBC,CAAgCL,MAAA,CAAO,CAAP,CAAhCK,CAA4CJ,YAAA,CAAa,CAAb,CADvC,CAELK,IAAKT,QAAAS,IAALA,CAAoBF,IAAA,CAAK,CAAL,CAApBE,CAA8BN,MAAA,CAAO,CAAP,CAA9BM,CAA0CL,YAAA,CAAa,CAAb,CAFrC,CALsE,CAW/Ef,OAAA,CAAQ,SAAR,CAAA,CAAqBU,cACrBX,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAzBiH;",
"sources":["node_modules/dom-align/lib/getElFuturePos.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$dom_align$lib$getElFuturePos\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _getAlignOffset = require('./getAlignOffset');\n\nvar _getAlignOffset2 = _interopRequireDefault(_getAlignOffset);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset, targetOffset) {\n  var p1 = (0, _getAlignOffset2['default'])(refNodeRegion, points[1]);\n  var p2 = (0, _getAlignOffset2['default'])(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n\n  return {\n    left: elRegion.left - diff[0] + offset[0] - targetOffset[0],\n    top: elRegion.top - diff[1] + offset[1] - targetOffset[1]\n  };\n}\n\nexports['default'] = getElFuturePos;\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","_getAlignOffset","_getAlignOffset2","_interopRequireDefault","obj","__esModule","getElFuturePos","elRegion","refNodeRegion","points","offset","targetOffset","p1","p2","diff","left","top"]
}
