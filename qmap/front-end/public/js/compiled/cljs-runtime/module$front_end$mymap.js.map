{
"version":3,
"file":"module$front_end$mymap.js",
"lineCount":26,
"mappings":"A;AAWA,IAAAA,+CAAe,QAAA,EAAM;AAoDjBC,UAASA,UAAS,CAACC,CAAD,CAAI;AAMlB,QAAIC,YAAYC,CAAA,IAAIC,4CAAAC,OAAJ,CAAaJ,CAAAK,OAAb,EAAuB,CACnCC,KAAMC,SAD6B,CAAvB,CAAAL,OAAA,CAEPM,GAFO,CAAhB;AAGAP,aAAAQ,UAAA,CAAoB,uDAApB,CAAA;AACAC,YAAA,GAAW,IAAX;AAVkB;AApDL,gBAKjB,IAAMF,MAAML,4CAAAK,IAAA,CAAM,WAAN,EAAmB,CAC3BG,QAAS,CADkB,EAE3BC,QAAS,CAFkB,EAG3BC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAHmB,EAI3BC,KAAM,CAJqB,EAK3BC,IAAKZ,4CAAAa,IAAAC,OALsB,EAM3BC,mBAAoB,KANO,CAAnB,CAAZ;AASAf,8CAAAgB,QAAAC,YAAA,CAAsB,CAClBC,OAAQ,KADU,CAAtB,CAAAC,eAAA,CAEkB,UAFlB,CAAApB,MAAA,CAEoCM,GAFpC,CAAA;AAdiB,gBAqBjB,IAAMe,IAAI,IAAJA,GAAW,CAAjB;AArBiB,gBAsBjB,IAAMC,IAAI,GAAJA,GAAU,CAAhB;AAtBiB,gBAuBjB,IAAMC,MAAM,iBAAZ;AAvBiB,gBA0BjB,IAAMC,YAAYlB,GAAAmB,UAAA,CAAc,CAAC,CAAD,EAAIH,CAAJ,CAAd,EAAsBhB,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AA1BiB,gBA2BjB,IAAMC,YAAYrB,GAAAmB,UAAA,CAAc,CAACJ,CAAD,EAAI,CAAJ,CAAd,EAAsBf,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AA3BiB,gBA4BjB,IAAME,SAAS,IAAI3B,4CAAA4B,aAAJ,CAAmBL,SAAnB,EAA8BG,SAA9B,CAAf;AAIA1B,8CAAA6B,aAAA,CAAeP,GAAf,EAAoBK,MAApB,CAAA5B,MAAA,CAAkCM,GAAlC,CAAA;AAGAA,KAAAyB,aAAA,CAAiBH,MAAjB,CAAA;AAnCiB,gBAsCjB,IAAMI,IAAI,CACNC,EAAG,IADG,EAENC,EAAG,GAFG,CAAV;AAMA5B,KAAA6B,GAAA,CAAO,OAAP,EAAgBtC,SAAhB,CAAA;AA5CiB,gBA6CjB,IAAMQ,YAAYJ,4CAAAmC,QAAA,CAAU,CACxBC,UAAW,cADa,EAExBC,KAAM,8JAFkB,EAGxBC,SAAU,CAAC,EAAD,EAAK,EAAL,CAHc,EAIxBC,WAAY,CAAC,EAAD,EAAK,EAAL,CAJY,CAAV,CAAlB;AA7CiB,gBAmEjB,IAAMtC,SAASD,4CAAAC,OAAA,CAASI,GAAAmB,UAAA,CAAc,CAACO,CAAAC,EAAD,EAAMD,CAAAE,EAAN,CAAd,EAA0B5B,GAAAoB,WAAA,EAA1B,CAAT,EAAsD,CACjEtB,KAAMC,SAD2D,CAAtD,CAAAL,MAAA,CAENM,GAFM,CAAf;AAIAJ,QAAAK,UAAA,CAAiB,oDAAjB,CAAA;AAvEiB,CAArB;AAXA,cAAA,IAAAkC,yBAAA,EAAA;AAWe,cAAA,sBAAA,QAAA,GAAA7C,4CAAA;;",
"sources":["front_end/mymap.js"],
"sourcesContent":["import * as L from \"/node_modules/leaflet/dist/leaflet-src.js\"\n// export default ()=>{\n//     const myMap = L.map('mymap').setView([51.505, -0.09], 13)\n//     L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n//         attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery \u00a9 <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n//         maxZoom: 18,\n//         id: 'mapbox.streets',\n//         accessToken: 'pk.eyJ1IjoibGVzbGllYmluYmluIiwiYSI6ImNqdHpoNGhqYTM0ZjM0M280OGlldWh0bm4ifQ.eXTBy2GzzUhNk6c_Kpk00w'\n//     }).addTo(myMap);\n// }\n\nexport default () => {\n    // Using leaflet.js to pan and zoom a big image.\n    // See also: http://kempe.net/blog/2014/06/14/leaflet-pan-zoom-image.html\n    // Marker Pin: https://codepen.io/zachdunn/pen/wapEam\n    // create the slippy map\n    const map = L.map('image-map', {\n        minZoom: 1,\n        maxZoom: 4,\n        center: [0, 0],\n        zoom: 1,\n        crs: L.CRS.Simple,\n        attributionControl: false\n    })\n\n    L.control.attribution({\n        prefix: false\n    }).addAttribution('UQ QAAFI').addTo(map)\n\n    // House: https://i.imgur.com/cenqiCf.jpg\n    // Palace SVG (1280 x 806): https://dl.dropbox.com/s/yhrpnftsuis15z6/Topkapi_Palace_plan.svg\n    // dimensions of the image\n    const w = 1280 * 2\n    const h = 806 * 2\n    const url = \"/cad/0083-4.svg\"\n\n    // calculate the edges of the image, in coordinate space\n    const southWest = map.unproject([0, h], map.getMaxZoom() - 1)\n    const northEast = map.unproject([w, 0], map.getMaxZoom() - 1)\n    const bounds = new L.LatLngBounds(southWest, northEast)\n\n    // add the image overlay,\n    // so that it covers the entire map\n    L.imageOverlay(url, bounds).addTo(map)\n\n    // tell leaflet that the map is exactly as big as the image\n    map.setMaxBounds(bounds)\n\n    // pixel coords\n    const m = {\n        x: 1250,\n        y: 850\n    }\n    //Add marker\n    // let newMarkerGroup = new L.LayerGroup()\n    map.on('click', addMarker)\n    const customPin = L.divIcon({\n        className: 'location-pin',\n        html: '<img src=\"https://static.robinpowered.com/roadshow/robin-avatar.png\"><div class=\"pin\"></div><div class=\"pulse\"></div>',\n        iconSize: [30, 30],\n        iconAnchor: [18, 30]\n    })\n\n    function addMarker(e) {\n        // Add marker to map at click location; add popup window\n        // if (addedOne) {\n        //     return;\n        // }\n\n        let newMarker = new L.marker(e.latlng, {\n            icon: customPin\n        }).addTo(map)\n        newMarker.bindPopup(\"<b>New Room</b><br>Adventures await\")\n        addedOne = true\n    }\n\n    // Lookup neighbors https://github.com/mapbox/leaflet-knn\n\n    const marker = L.marker(map.unproject([m.x, m.y], map.getMaxZoom()), {\n        icon: customPin\n    }).addTo(map)\n    // Add pop up for click\n    marker.bindPopup(\"<b>Bedroom</b><br>Free all night\")\n}"],
"names":["$jscompDefaultExport","addMarker","e","newMarker","addTo","L","marker","latlng","icon","customPin","map","bindPopup","addedOne","minZoom","maxZoom","center","zoom","crs","CRS","Simple","attributionControl","control","attribution","prefix","addAttribution","w","h","url","southWest","unproject","getMaxZoom","northEast","bounds","LatLngBounds","imageOverlay","setMaxBounds","m","x","y","on","divIcon","className","html","iconSize","iconAnchor","exports"]
}
