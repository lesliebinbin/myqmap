{
"version":3,
"file":"module$front_end$mymap.js",
"lineCount":27,
"mappings":"A;AAYA,IAAAA,+CAAe,QAAA,EAAM;AAiDnBC,UAASA,UAAS,CAACC,CAAD,CAAI;AAKpB,QAAIC,YAAYC,CAAA,IAAIC,CAAAC,OAAJ,CAAaJ,CAAAK,OAAb,EAAuB,CACrCC,KAAMC,SAD+B,CAAvB,CAAAL,OAAA,CAEPM,GAFO,CAAhB;AAGAP,aAAAQ,UAAA,CAAoB,uDAApB,CAAA;AACAC,YAAA,GAAW,IAAX;AAToB;AAjDH,gBAKnB,IAAMF,MAAML,CAAAK,IAAA,CAAM,WAAN,EAAmB,CAC7BG,QAAS,CADoB,EAE7BC,QAAS,CAFoB,EAG7BC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAHqB,EAI7BC,KAAM,CAJuB,EAK7BC,IAAKZ,CAAAa,IAAAC,OALwB,EAM7BC,mBAAoB,KANS,CAAnB,CAAZ;AAQAf,GAAAgB,QAAAC,YAAA,CACe,CACXC,OAAQ,KADG,CADf,CAAAC,eAAA,CAIkB,UAJlB,CAAApB,MAAA,CAKSM,GALT,CAAA;AAbmB,gBAsBnB,IAAMe,IAAI,IAAJA,GAAW,CAAjB;AAtBmB,gBAuBnB,IAAMC,IAAI,GAAJA,GAAU,CAAhB;AAvBmB,gBAwBnB,IAAMC,MAAM,iBAAZ;AAxBmB,gBA0BnB,IAAMC,YAAYlB,GAAAmB,UAAA,CAAc,CAAC,CAAD,EAAIH,CAAJ,CAAd,EAAsBhB,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AA1BmB,gBA2BnB,IAAMC,YAAYrB,GAAAmB,UAAA,CAAc,CAACJ,CAAD,EAAI,CAAJ,CAAd,EAAsBf,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AA3BmB,gBA4BnB,IAAME,SAAS,IAAI3B,CAAA4B,aAAJ,CAAmBL,SAAnB,EAA8BG,SAA9B,CAAf;AAGA1B,GAAA6B,aAAA,CAAeP,GAAf,EAAoBK,MAApB,CAAA5B,MAAA,CAAkCM,GAAlC,CAAA;AAEAA,KAAAyB,aAAA,CAAiBH,MAAjB,CAAA;AAjCmB,gBAmCnB,IAAMI,IAAI,CACRC,EAAG,IADK,EAERC,EAAG,GAFK,CAAV;AAMA5B,KAAA6B,GAAA,CAAO,OAAP,EAAgBtC,SAAhB,CAAA;AAzCmB,gBA0CnB,IAAMQ,YAAYJ,CAAAmC,QAAA,CAAU,CAC1BC,UAAW,cADe,EAE1BC,KACE,8JAHwB,EAI1BC,SAAU,CAAC,EAAD,EAAK,EAAL,CAJgB,EAK1BC,WAAY,CAAC,EAAD,EAAK,EAAL,CALc,CAAV,CAAlB;AA1CmB,gBA6DnB,IAAMtC,SAASD,CAAAC,OAAA,CAASI,GAAAmB,UAAA,CAAc,CAACO,CAAAC,EAAD,EAAMD,CAAAE,EAAN,CAAd,EAA0B5B,GAAAoB,WAAA,EAA1B,CAAT,EAAsD,CACnEtB,KAAMC,SAD6D,CAAtD,CAAAL,MAAA,CAENM,GAFM,CAAf;AAIAJ,QAAAK,UAAA,CAAiB,oDAAjB,CAAA;AACAkC,SAAAC,IAAA,CAAYzC,CAAZ,CAAA;AAlEmB,CAArB;AAXA,cAAA,IAAA0C,yBAAA,EAAA;AAWA,cAAA,sBAAA,QAAA,GAAA,4CAAA;;",
"sources":["front_end/mymap.js"],
"sourcesContent":["//import * as L from \"leaflet\";\nimport \"/node_modules/leaflet/dist/leaflet-src.js\";\n// export default ()=>{\n//     const myMap = L.map('mymap').setView([51.505, -0.09], 13)\n//     L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n//         attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery \u00a9 <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n//         maxZoom: 18,\n//         id: 'mapbox.streets',\n//         accessToken: 'pk.eyJ1IjoibGVzbGllYmluYmluIiwiYSI6ImNqdHpoNGhqYTM0ZjM0M280OGlldWh0bm4ifQ.eXTBy2GzzUhNk6c_Kpk00w'\n//     }).addTo(myMap);\n// }\n\nexport default () => {\n  // Using leaflet.js to pan and zoom a big image.\n  // See also: http://kempe.net/blog/2014/06/14/leaflet-pan-zoom-image.html\n  // Marker Pin: https://codepen.io/zachdunn/pen/wapEam\n  // create the slippy map\n  const map = L.map(\"image-map\", {\n    minZoom: 1,\n    maxZoom: 4,\n    center: [0, 0],\n    zoom: 1,\n    crs: L.CRS.Simple,\n    attributionControl: false\n  });\n  L.control\n    .attribution({\n      prefix: false\n    })\n    .addAttribution(\"UQ QAAFI\")\n    .addTo(map);\n  // House: https://i.imgur.com/cenqiCf.jpg\n  // Palace SVG (1280 x 806): https://dl.dropbox.com/s/yhrpnftsuis15z6/Topkapi_Palace_plan.svg\n  // dimensions of the image\n  const w = 1280 * 2;\n  const h = 806 * 2;\n  const url = \"/cad/0083-4.svg\";\n  // calculate the edges of the image, in coordinate space\n  const southWest = map.unproject([0, h], map.getMaxZoom() - 1);\n  const northEast = map.unproject([w, 0], map.getMaxZoom() - 1);\n  const bounds = new L.LatLngBounds(southWest, northEast);\n  // add the image overlay,\n  // so that it covers the entire map\n  L.imageOverlay(url, bounds).addTo(map);\n  // tell leaflet that the map is exactly as big as the image\n  map.setMaxBounds(bounds);\n  // pixel coords\n  const m = {\n    x: 1250,\n    y: 850\n  };\n  //Add marker\n  // let newMarkerGroup = new L.LayerGroup()\n  map.on(\"click\", addMarker);\n  const customPin = L.divIcon({\n    className: \"location-pin\",\n    html:\n      '<img src=\"https://static.robinpowered.com/roadshow/robin-avatar.png\"><div class=\"pin\"></div><div class=\"pulse\"></div>',\n    iconSize: [30, 30],\n    iconAnchor: [18, 30]\n  });\n  function addMarker(e) {\n    // Add marker to map at click location; add popup window\n    // if (addedOne) {\n    //     return;\n    // }\n    let newMarker = new L.marker(e.latlng, {\n      icon: customPin\n    }).addTo(map);\n    newMarker.bindPopup(\"<b>New Room</b><br>Adventures await\");\n    addedOne = true;\n  }\n  // Lookup neighbors https://github.com/mapbox/leaflet-knn\n  const marker = L.marker(map.unproject([m.x, m.y], map.getMaxZoom()), {\n    icon: customPin\n  }).addTo(map);\n  // Add pop up for click\n  marker.bindPopup(\"<b>Bedroom</b><br>Free all night\");\n  console.log(L);\n};\n"],
"names":["$jscompDefaultExport","addMarker","e","newMarker","addTo","L","marker","latlng","icon","customPin","map","bindPopup","addedOne","minZoom","maxZoom","center","zoom","crs","CRS","Simple","attributionControl","control","attribution","prefix","addAttribution","w","h","url","southWest","unproject","getMaxZoom","northEast","bounds","LatLngBounds","imageOverlay","setMaxBounds","m","x","y","on","divIcon","className","html","iconSize","iconAnchor","console","log","exports"]
}
