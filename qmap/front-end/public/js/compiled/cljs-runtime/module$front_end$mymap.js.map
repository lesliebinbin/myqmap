{
"version":3,
"file":"module$front_end$mymap.js",
"lineCount":25,
"mappings":"A;AAYA,IAAAA,+CAAe,CAAAC,WAAA,CAAA,IAAe;AAK1B,QAAMC,MAAMC,4CAAAD,IAAA,CAAM,WAAN,EAAmB,CAC3BE,QAAS,CADkB,EAE3BC,QAAS,CAFkB,EAG3BC,OAAQ,CAAC,CAAD,EAAI,CAAJ,CAHmB,EAI3BC,KAAM,CAJqB,EAK3BC,IAAKL,4CAAAM,IAAAC,OALsB,EAM3BC,mBAAoB,KANO,CAAnB,CAAZ;AAQAR,8CAAAS,QAAAC,YAAA,CACiB,CACTC,OAAQ,KADC,CADjB,CAAAC,eAAA,CAIoB,UAJpB,CAAAC,MAAA,CAKWd,GALX,CAAA;AASA,QAAMe,IAAI,IAAJA,GAAW,CAAjB;AACA,QAAMC,IAAI,GAAJA,GAAU,CAAhB;AACA,QAAMC,MAAM,iBAAZ;AAEA,QAAMC,YAAYlB,GAAAmB,UAAA,CAAc,CAAC,CAAD,EAAIH,CAAJ,CAAd,EAAsBhB,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AACA,QAAMC,YAAYrB,GAAAmB,UAAA,CAAc,CAACJ,CAAD,EAAI,CAAJ,CAAd,EAAsBf,GAAAoB,WAAA,EAAtB,GAAyC,CAAzC,CAAlB;AACA,QAAME,SAAS,IAAIrB,4CAAAsB,aAAJ,CAAmBL,SAAnB,EAA8BG,SAA9B,CAAf;AAGApB,8CAAAuB,aAAA,CAAeP,GAAf,EAAoBK,MAApB,CAAAR,MAAA,CAAkCd,GAAlC,CAAA;AAEAA,KAAAyB,aAAA,CAAiBH,MAAjB,CAAA;AAEA,QAAMI,IAAI,CACNC,EAAG,IADG,EAENC,EAAG,GAFG,CAAV;AAMA5B,KAAA6B,GAAA,CAAO,OAAP,EAAgBC,SAAhB,CAAA;AACA,QAAMC,YAAY9B,4CAAA+B,QAAA,CAAU,CACxBC,UAAW,cADa,EAExBC,KACI,8JAHoB,EAIxBC,SAAU,CAAC,EAAD,EAAK,EAAL,CAJc,EAKxBC,WAAY,CAAC,EAAD,EAAK,EAAL,CALY,CAAV,CAAlB;AAQAN,UAASA,UAAS,CAACO,CAAD,CAAI;AAKlB,QAAIC,YAAYxB,CAAA,IAAIb,4CAAAsC,OAAJ,CAAaF,CAAAG,OAAb,EAAuB,CACnCC,KAAMV,SAD6B,CAAvB,CAAAjB,OAAA,CAEPd,GAFO,CAAhB;AAIAsC,aAAAI,UAAA,CAAoB3C,WAApB,CAAA;AATkB;AAatB,QAAMwC,SAAStC,4CAAAsC,OAAA,CAASvC,GAAAmB,UAAA,CAAc,CAACO,CAAAC,EAAD,EAAMD,CAAAE,EAAN,CAAd,EAA0B5B,GAAAoB,WAAA,EAA1B,CAAT,EAAsD,CACjEqB,KAAMV,SAD2D,CAAtD,CAAAjB,MAAA,CAENd,GAFM,CAAf;AAIAuC,QAAAG,UAAA,CAAiB,oDAAjB,CAAA;AAnE0B,CAA9B;AAVA,cAAA,IAAAC,yBAAA,EAAA;AAUe,cAAA,sBAAA,QAAA,GAAA7C,4CAAA;;",
"sources":["front_end/mymap.js"],
"sourcesContent":["//import * as L from \"leaflet\";\n// import * as L from \"leaflet\";\nimport * as L from \"/node_modules/leaflet/dist/leaflet-src.js\"\n// export default ()=>{\n//     const myMap = L.map('mymap').setView([51.505, -0.09], 13)\n//     L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {\n//         attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery \u00a9 <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n//         maxZoom: 18,\n//         id: 'mapbox.streets',\n//         accessToken: 'pk.eyJ1IjoibGVzbGllYmluYmluIiwiYSI6ImNqdHpoNGhqYTM0ZjM0M280OGlldWh0bm4ifQ.eXTBy2GzzUhNk6c_Kpk00w'\n//     }).addTo(myMap);\n// }\nexport default markerPopup => {\n    // Using leaflet.js to pan and zoom a big image.\n    // See also: http://kempe.net/blog/2014/06/14/leaflet-pan-zoom-image.html\n    // Marker Pin: https://codepen.io/zachdunn/pen/wapEam\n    // create the slippy map\n    const map = L.map(\"image-map\", {\n        minZoom: 1,\n        maxZoom: 4,\n        center: [0, 0],\n        zoom: 1,\n        crs: L.CRS.Simple,\n        attributionControl: false\n    });\n    L.control\n        .attribution({\n            prefix: false\n        })\n        .addAttribution(\"UQ QAAFI\")\n        .addTo(map);\n    // House: https://i.imgur.com/cenqiCf.jpg\n    // Palace SVG (1280 x 806): https://dl.dropbox.com/s/yhrpnftsuis15z6/Topkapi_Palace_plan.svg\n    // dimensions of the image\n    const w = 1280 * 2;\n    const h = 806 * 2;\n    const url = \"/cad/0083-4.svg\";\n    // calculate the edges of the image, in coordinate space\n    const southWest = map.unproject([0, h], map.getMaxZoom() - 1);\n    const northEast = map.unproject([w, 0], map.getMaxZoom() - 1);\n    const bounds = new L.LatLngBounds(southWest, northEast);\n    // add the image overlay,\n    // so that it covers the entire map\n    L.imageOverlay(url, bounds).addTo(map);\n    // tell leaflet that the map is exactly as big as the image\n    map.setMaxBounds(bounds);\n    // pixel coords\n    const m = {\n        x: 1250,\n        y: 850\n    };\n    //Add marker\n    // let newMarkerGroup = new L.LayerGroup()\n    map.on(\"click\", addMarker);\n    const customPin = L.divIcon({\n        className: \"location-pin\",\n        html:\n            '<img src=\"https://static.robinpowered.com/roadshow/robin-avatar.png\"><div class=\"pin\"></div><div class=\"pulse\"></div>',\n        iconSize: [30, 30],\n        iconAnchor: [18, 30]\n    });\n\n    function addMarker(e) {\n        // Add marker to map at click location; add popup window\n        // if (addedOne) {\n        //     return;\n        // }\n        let newMarker = new L.marker(e.latlng, {\n            icon: customPin\n        }).addTo(map);\n        // newMarker.bindPopup(\"<b>New Room</b><br>Adventures await\");\n        newMarker.bindPopup(markerPopup);\n    }\n\n    // Lookup neighbors https://github.com/mapbox/leaflet-knn\n    const marker = L.marker(map.unproject([m.x, m.y], map.getMaxZoom()), {\n        icon: customPin\n    }).addTo(map);\n    // Add pop up for click\n    marker.bindPopup(\"<b>Bedroom</b><br>Free all night\");\n};\n"],
"names":["$jscompDefaultExport","markerPopup","map","L","minZoom","maxZoom","center","zoom","crs","CRS","Simple","attributionControl","control","attribution","prefix","addAttribution","addTo","w","h","url","southWest","unproject","getMaxZoom","northEast","bounds","LatLngBounds","imageOverlay","setMaxBounds","m","x","y","on","addMarker","customPin","divIcon","className","html","iconSize","iconAnchor","e","newMarker","marker","latlng","icon","bindPopup","exports"]
}
