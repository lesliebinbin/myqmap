{
"version":3,
"file":"module$node_modules$rc_editor_mention$lib$utils$getSearchWord.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,+DAAf,CAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG/ID,OAAAE,WAAA,CAAqB,IACrBF,QAAA,CAAQ,SAAR,CAAA,CAAqBG,aACrBC,SAASA,QAAO,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAC/B,IAAIC,IAAMC,MAAA,CAAOH,IAAP,CAEV,KAAII,IAAMC,MAAA,CAAOJ,QAAP,CAANG,GAA2B,CAG/B,KAAIE,KAAOJ,GAAAK,MAAA,CAAU,CAAV,CAAaH,GAAb,CAAmB,CAAnB,CAAAI,OAAA,CAA6B,MAA7B,CACX,KAAIC,MAAQP,GAAAK,MAAA,CAAUH,GAAV,CAAAI,OAAA,CAAsB,IAAtB,CAEZ,IAAIC,KAAJ,CAAY,CAAZ,CACE,MAAO,CACLC,KAAMR,GAAAK,MAAA,CAAUD,IAAV,CADD,CAELK,MAAOL,IAFF,CAGLM,IAAKV,GAAAW,OAHA,CAQT,OAAO,CACLH,KAAMR,GAAAK,MAAA,CAAUD,IAAV,CAAgBG,KAAhB,CAAwBL,GAAxB,CADD,CAELO,MAAOL,IAFF,CAGLM,IAAKH,KAALG,CAAaR,GAHR,CAlBwB,CAyBjCN,QAASA,cAAa,CAACgB,WAAD;AAAcC,SAAd,CAAyB,CAC7C,IAAIC,UAAYD,SAAAE,aAAA,EAChB,KAAIC,aAAeH,SAAAI,gBAAA,EAAfD,CAA6C,CACjD,KAAIE,eAAiBN,WAAAO,kBAAA,EACrB,KAAIC,aAAeF,cAAAG,eAAA,CAA8BP,SAA9B,CACnB,IAAIM,YAAJ,CAAkB,CAChB,IAAIE,UAAYF,YAAAG,QAAA,EAChB,OAAO1B,QAAA,CAAQyB,SAAR,CAAmBN,YAAnB,CAFS,CAIlB,MAAO,EATsC,CAW/CxB,MAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAzC8H;",
"sources":["node_modules/rc-editor-mention/lib/utils/getSearchWord.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_editor_mention$lib$utils$getSearchWord\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = getSearchWord;\nfunction getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\n\nfunction getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","__esModule","getSearchWord","getWord","text","position","str","String","pos","Number","left","slice","search","right","word","begin","end","length","editorState","selection","anchorKey","getAnchorKey","anchorOffset","getAnchorOffset","currentContent","getCurrentContent","currentBlock","getBlockForKey","blockText","getText"]
}
