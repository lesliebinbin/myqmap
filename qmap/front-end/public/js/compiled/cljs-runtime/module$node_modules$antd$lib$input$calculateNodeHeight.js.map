{
"version":3,
"file":"module$node_modules$antd$lib$input$calculateNodeHeight.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/antd/lib/input/calculateNodeHeight.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$input$calculateNodeHeight\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateNodeStyling = calculateNodeStyling;\nexports[\"default\"] = calculateNodeHeight;\n// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\n\nfunction calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nfunction calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  } // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n\n\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      sizingStyle = _calculateNodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = Number.MIN_SAFE_INTEGER;\n  var maxHeight = Number.MAX_SAFE_INTEGER;\n  var height = hiddenTextarea.scrollHeight;\n  var overflowY;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n\n      height = Math.max(minHeight, height);\n    }\n\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    overflowY: overflowY\n  };\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","calculateNodeStyling","calculateNodeHeight","HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","hiddenTextarea","node","useCache","arguments","length","undefined","nodeRef","getAttribute","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","sizingStyle","map","name","concat","join","nodeInfo","uiTextNode","minRows","maxRows","document","createElement","body","appendChild","setAttribute","removeAttribute","_calculateNodeStyling","placeholder","minHeight","Number","MIN_SAFE_INTEGER","maxHeight","MAX_SAFE_INTEGER","height","scrollHeight","overflowY","singleRowHeight","Math","max","min"]
}
