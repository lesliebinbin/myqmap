{
"version":3,
"file":"module$node_modules$draft_js$lib$getNextDelimiterBlockKey.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmB3I,IAAIC,iBAAmBJ,OAAA,CAAQ,mDAAR,CAEvB,KAAIK,yBAA2BA,QAASA,yBAAwB,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAChF,IAAIC,wBAA0BF,KAA1BE,WAA2CJ,iBAE/C,IAAI,CAACI,uBAAL,CACE,MAAO,KAGT,KAAIC,eAAiBH,KAAAI,kBAAA,EAErB,IAAID,cAAJ,CACE,MAAOA,eAGT,KAAIE,OAASL,KAAAM,aAAA,EAEb;GAAI,CAACD,MAAL,CACE,MAAO,KAGT,KAAIE,uBAAyBN,QAAAO,IAAA,CAAaH,MAAb,CAC7B,OAAOE,sBAAP,EAAiC,CAACA,sBAAAH,kBAAA,EAAlC,CAA8E,CAC5E,IAAIK,UAAYF,sBAAAD,aAAA,EAChBC,uBAAA,CAAyBE,SAAA,CAAYR,QAAAO,IAAA,CAAaC,SAAb,CAAZ,CAAsC,IAFa,CAK9E,GAAI,CAACF,sBAAL,CACE,MAAO,KAGT,OAAOA,uBAAAH,kBAAA,EA7ByE,CAgClFT,OAAAC,QAAA,CAAiBG,wBArD0H;",
"sources":["node_modules/draft-js/lib/getNextDelimiterBlockKey.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$getNextDelimiterBlockKey\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNextDelimiterBlockKey\n * @format\n * \n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n\nvar ContentBlockNode = require('./ContentBlockNode');\n\nvar getNextDelimiterBlockKey = function getNextDelimiterBlockKey(block, blockMap) {\n  var isExperimentalTreeBlock = block instanceof ContentBlockNode;\n\n  if (!isExperimentalTreeBlock) {\n    return null;\n  }\n\n  var nextSiblingKey = block.getNextSiblingKey();\n\n  if (nextSiblingKey) {\n    return nextSiblingKey;\n  }\n\n  var parent = block.getParentKey();\n\n  if (!parent) {\n    return null;\n  }\n\n  var nextNonDescendantBlock = blockMap.get(parent);\n  while (nextNonDescendantBlock && !nextNonDescendantBlock.getNextSiblingKey()) {\n    var parentKey = nextNonDescendantBlock.getParentKey();\n    nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\n  }\n\n  if (!nextNonDescendantBlock) {\n    return null;\n  }\n\n  return nextNonDescendantBlock.getNextSiblingKey();\n};\n\nmodule.exports = getNextDelimiterBlockKey;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","ContentBlockNode","getNextDelimiterBlockKey","block","blockMap","isExperimentalTreeBlock","nextSiblingKey","getNextSiblingKey","parent","getParentKey","nextNonDescendantBlock","get","parentKey"]
}
