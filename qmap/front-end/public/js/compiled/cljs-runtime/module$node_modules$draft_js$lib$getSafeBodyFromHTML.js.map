{
"version":3,
"file":"module$node_modules$draft_js$lib$getSafeBodyFromHTML.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBtI,IAAIC,UAAYJ,OAAA,CAAQ,wCAAR,CAEhB,KAAIK,UAAYL,OAAA,CAAQ,wCAAR,CAEhB,KAAIM,QAAUF,SAAAG,UAAA,CAAoB,eAApB,CAMdC,SAASA,oBAAmB,CAACC,IAAD,CAAO,CACjC,IAAIC,GACJ,KAAIC,KAAO,IAEX,IAAI,CAACL,OAAL,EAAgBM,QAAAC,eAAhB,EAA2CD,QAAAC,eAAAC,mBAA3C,CAAuF,CACrFJ,GAAA,CAAME,QAAAC,eAAAC,mBAAA,CAA2C,KAA3C,CACN;CAACJ,GAAAK,gBAAD,CAAuBC,aAAA,GAAyB,YAAzB,CAAwCX,SAAA,CAAU,KAAV,CAAiB,6BAAjB,CAAxC,CAA0FA,SAAA,CAAU,KAAV,CAAjH,CAAoI,IAAK,EACzIK,IAAAK,gBAAAE,UAAA,CAAgCR,IAChCE,KAAA,CAAOD,GAAAQ,qBAAA,CAAyB,MAAzB,CAAA,CAAiC,CAAjC,CAJ8E,CAMvF,MAAOP,KAV0B,CAanCV,MAAAC,QAAA,CAAiBM,mBAvCqH;",
"sources":["node_modules/draft-js/lib/getSafeBodyFromHTML.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$getSafeBodyFromHTML\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getSafeBodyFromHTML\n * @format\n * \n */\n\n'use strict';\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar isOldIE = UserAgent.isBrowser('IE <= 9');\n\n// Provides a dom node that will not execute scripts\n// https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation.createHTMLDocument\n// https://developer.mozilla.org/en-US/Add-ons/Code_snippets/HTML_to_DOM\n\nfunction getSafeBodyFromHTML(html) {\n  var doc;\n  var root = null;\n  // Provides a safe context\n  if (!isOldIE && document.implementation && document.implementation.createHTMLDocument) {\n    doc = document.implementation.createHTMLDocument('foo');\n    !doc.documentElement ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing doc.documentElement') : invariant(false) : void 0;\n    doc.documentElement.innerHTML = html;\n    root = doc.getElementsByTagName('body')[0];\n  }\n  return root;\n}\n\nmodule.exports = getSafeBodyFromHTML;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","UserAgent","invariant","isOldIE","isBrowser","getSafeBodyFromHTML","html","doc","root","document","implementation","createHTMLDocument","documentElement","NODE_ENV","innerHTML","getElementsByTagName"]
}
