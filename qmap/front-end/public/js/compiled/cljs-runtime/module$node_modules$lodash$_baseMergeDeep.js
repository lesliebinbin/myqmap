shadow$provide["module$node_modules$lodash$_baseMergeDeep"]=function(global,process,require,module,exports,shadow$shims){var assignMergeValue=require("module$node_modules$lodash$_assignMergeValue"),cloneBuffer=require("module$node_modules$lodash$_cloneBuffer"),cloneTypedArray=require("module$node_modules$lodash$_cloneTypedArray"),copyArray=require("module$node_modules$lodash$_copyArray"),initCloneObject=require("module$node_modules$lodash$_initCloneObject"),isArguments=require("module$node_modules$lodash$isArguments"),
isArray=require("module$node_modules$lodash$isArray"),isArrayLikeObject=require("module$node_modules$lodash$isArrayLikeObject"),isBuffer=require("module$node_modules$lodash$isBuffer"),isFunction=require("module$node_modules$lodash$isFunction"),isObject=require("module$node_modules$lodash$isObject"),isPlainObject=require("module$node_modules$lodash$isPlainObject"),isTypedArray=require("module$node_modules$lodash$isTypedArray"),safeGet=require("module$node_modules$lodash$_safeGet"),toPlainObject=require("module$node_modules$lodash$toPlainObject");
function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return}var newValue=customizer?customizer(objValue,srcValue,key+"",object,source,stack):undefined;var isCommon=newValue===undefined;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||
isTyped)if(isArray(objValue))newValue=objValue;else if(isArrayLikeObject(objValue))newValue=copyArray(objValue);else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true)}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true)}else newValue=[];else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue))newValue=toPlainObject(objValue);else if(!isObject(objValue)||isFunction(objValue))newValue=initCloneObject(srcValue)}else isCommon=false}if(isCommon){stack.set(srcValue,
newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack["delete"](srcValue)}assignMergeValue(object,key,newValue)}module.exports=baseMergeDeep}
//# sourceMappingURL=module$node_modules$lodash$_baseMergeDeep.js.map
