{
"version":3,
"file":"module$node_modules$draft_js$lib$editOnCopy.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB7H,IAAIC,yBAA2BJ,OAAA,CAAQ,2DAAR,CAO/BK,SAASA,WAAU,CAACC,MAAD,CAASC,CAAT,CAAY,CAC7B,IAAIC,YAAcF,MAAAG,mBAClB,KAAIC,UAAYF,WAAAG,aAAA,EAGhB,IAAID,SAAAE,YAAA,EAAJ,CAA6B,CAC3BL,CAAAM,eAAA,EACA,OAF2B,CAK7BP,MAAAQ,aAAA,CAAoBV,wBAAA,CAAyBE,MAAAG,mBAAzB,CAApB,CAV6B,CAa/BR,MAAAC,QAAA,CAAiBG,UApC4G;",
"sources":["node_modules/draft-js/lib/editOnCopy.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$editOnCopy\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCopy\n * @format\n * \n */\n\n'use strict';\n\nvar getFragmentFromSelection = require('./getFragmentFromSelection');\n\n/**\n * If we have a selection, create a ContentState fragment and store\n * it in our internal clipboard. Subsequent paste events will use this\n * fragment if no external clipboard data is supplied.\n */\nfunction editOnCopy(editor, e) {\n  var editorState = editor._latestEditorState;\n  var selection = editorState.getSelection();\n\n  // No selection, so there's nothing to copy.\n  if (selection.isCollapsed()) {\n    e.preventDefault();\n    return;\n  }\n\n  editor.setClipboard(getFragmentFromSelection(editor._latestEditorState));\n}\n\nmodule.exports = editOnCopy;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getFragmentFromSelection","editOnCopy","editor","e","editorState","_latestEditorState","selection","getSelection","isCollapsed","preventDefault","setClipboard"]
}
