{
"version":3,
"file":"module$node_modules$rc_util$lib$Dom$class.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,2CAAf,CAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG3HC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAJ,QAAAK,SAAA,CAAmBA,QACnBL,QAAAM,SAAA,CAAmBA,QACnBN,QAAAO,YAAA,CAAsBA,WACtBF,SAASA,SAAQ,CAACG,IAAD,CAAOC,SAAP,CAAkB,CACjC,GAAID,IAAAE,UAAJ,CACE,MAAOF,KAAAE,UAAAC,SAAA,CAAwBF,SAAxB,CAET,KAAIG,YAAcJ,IAAAC,UAClB,OAAOI,CAAC,GAADA,CAAOD,WAAPC,CAAqB,GAArBA,SAAA,CAAkC,GAAlC,CAAwCJ,SAAxC,CAAoD,GAApD,CAAP,CAAmE,EALlC,CAQnCH,QAASA,SAAQ,CAACE,IAAD,CAAOC,SAAP,CAAkB,CACjC,GAAID,IAAAE,UAAJ,CACEF,IAAAE,UAAAI,IAAA,CAAmBL,SAAnB,CADF;IAGE,IAAI,CAACJ,QAAA,CAASG,IAAT,CAAeC,SAAf,CAAL,CACED,IAAAC,UAAA,CAAiBD,IAAAC,UAAjB,CAAkC,GAAlC,CAAwCA,SALX,CAUnCF,QAASA,YAAW,CAACC,IAAD,CAAOC,SAAP,CAAkB,CACpC,GAAID,IAAAE,UAAJ,CACEF,IAAAE,UAAAK,OAAA,CAAsBN,SAAtB,CADF,KAGE,IAAIJ,QAAA,CAASG,IAAT,CAAeC,SAAf,CAAJ,CAA+B,CAC7B,IAAIG,YAAcJ,IAAAC,UAClBD,KAAAC,UAAA,CAAiBO,CAAC,GAADA,CAAOJ,WAAPI,CAAqB,GAArBA,SAAA,CAAkC,GAAlC,CAAwCP,SAAxC,CAAoD,GAApD,CAAyD,GAAzD,CAFY,CAJG,CA3BqF;",
"sources":["node_modules/rc-util/lib/Dom/class.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_util$lib$Dom$class\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasClass = hasClass;\nexports.addClass = addClass;\nexports.removeClass = removeClass;\nfunction hasClass(node, className) {\n  if (node.classList) {\n    return node.classList.contains(className);\n  }\n  var originClass = node.className;\n  return (' ' + originClass + ' ').indexOf(' ' + className + ' ') > -1;\n}\n\nfunction addClass(node, className) {\n  if (node.classList) {\n    node.classList.add(className);\n  } else {\n    if (!hasClass(node, className)) {\n      node.className = node.className + ' ' + className;\n    }\n  }\n}\n\nfunction removeClass(node, className) {\n  if (node.classList) {\n    node.classList.remove(className);\n  } else {\n    if (hasClass(node, className)) {\n      var originClass = node.className;\n      node.className = (' ' + originClass + ' ').replace(' ' + className + ' ', ' ');\n    }\n  }\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","hasClass","addClass","removeClass","node","className","classList","contains","originClass","indexOf","add","remove","replace"]
}
