shadow$provide["module$node_modules$enquire_DOT_js$src$MediaQueryDispatch"]=function(global,process,require,module,exports,shadow$shims){var MediaQuery=require("module$node_modules$enquire_DOT_js$src$MediaQuery");var Util=require("module$node_modules$enquire_DOT_js$src$Util");var each=Util.each;var isFunction=Util.isFunction;var isArray=Util.isArray;function MediaQueryDispatch(){if(!window.matchMedia)throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries={};this.browserIsIncapable=
!window.matchMedia("only all").matches}MediaQueryDispatch.prototype={constructor:MediaQueryDispatch,register:function(q,options,shouldDegrade){var queries=this.queries,isUnconditional=shouldDegrade&&this.browserIsIncapable;if(!queries[q])queries[q]=new MediaQuery(q,isUnconditional);if(isFunction(options))options={match:options};if(!isArray(options))options=[options];each(options,function(handler){if(isFunction(handler))handler={match:handler};queries[q].addHandler(handler)});return this},unregister:function(q,
handler){var query=this.queries[q];if(query)if(handler)query.removeHandler(handler);else{query.clear();delete this.queries[q]}return this}};module.exports=MediaQueryDispatch}
//# sourceMappingURL=module$node_modules$enquire_DOT_js$src$MediaQueryDispatch.js.map
