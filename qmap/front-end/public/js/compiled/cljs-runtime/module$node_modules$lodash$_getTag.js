shadow$provide["module$node_modules$lodash$_getTag"]=function(global,process,require,module,exports,shadow$shims){var DataView=require("module$node_modules$lodash$_DataView"),Map=require("module$node_modules$lodash$_Map"),Promise=require("module$node_modules$lodash$_Promise"),Set=require("module$node_modules$lodash$_Set"),WeakMap=require("module$node_modules$lodash$_WeakMap"),baseGetTag=require("module$node_modules$lodash$_baseGetTag"),toSource=require("module$node_modules$lodash$_toSource");var mapTag=
"[object Map]",objectTag="[object Object]",promiseTag="[object Promise]",setTag="[object Set]",weakMapTag="[object WeakMap]";var dataViewTag="[object DataView]";var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);var getTag=baseGetTag;if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map)!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&
getTag(new Set)!=setTag||WeakMap&&getTag(new WeakMap)!=weakMapTag)getTag=function(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined,ctorString=Ctor?toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag}return result};module.exports=getTag}
//# sourceMappingURL=module$node_modules$lodash$_getTag.js.map
