{
"version":3,
"file":"module$node_modules$lodash$_unicodeSize.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAEzH,IAAIC,cAAgB,iBAApB,CACIC,kBAAoB,iBADxB,CAEIC,sBAAwB,iBAF5B,CAGIC,oBAAsB,iBAH1B,CAIIC,aAAeH,iBAAfG,CAAmCF,qBAAnCE,CAA2DD,mBAJ/D,CAKIE,WAAa,gBAGjB,KAAIC,SAAW,GAAXA,CAAiBN,aAAjBM,CAAiC,GAArC,CACIC,QAAU,GAAVA,CAAgBH,YAAhBG,CAA+B,GADnC,CAEIC,OAAS,0BAFb,CAGIC,WAAa,KAAbA,CAAqBF,OAArBE,CAA+B,GAA/BA,CAAqCD,MAArCC;AAA8C,GAHlD,CAIIC,YAAc,IAAdA,CAAqBV,aAArBU,CAAqC,GAJzC,CAKIC,WAAa,iCALjB,CAMIC,WAAa,oCANjB,CAOIC,MAAQ,SAGZ,KAAIC,SAAWL,UAAXK,CAAwB,GAA5B,CACIC,SAAW,GAAXA,CAAiBV,UAAjBU,CAA8B,IADlC,CAEIC,UAAY,KAAZA,CAAoBH,KAApBG,CAA4B,KAA5BA,CAAoC,CAACN,WAAD,CAAcC,UAAd,CAA0BC,UAA1B,CAAAK,KAAA,CAA2C,GAA3C,CAApCD,CAAsF,GAAtFA,CAA4FD,QAA5FC,CAAuGF,QAAvGE,CAAkH,IAFtH,CAGIE,MAAQH,QAARG,CAAmBJ,QAAnBI,CAA8BF,SAHlC,CAIIG,SAAW,KAAXA,CAAmB,CAACT,WAAD,CAAeH,OAAf,CAAyB,GAAzB,CAA8BA,OAA9B,CAAuCI,UAAvC,CAAmDC,UAAnD,CAA+DN,QAA/D,CAAAW,KAAA,CAA8E,GAA9E,CAAnBE,CAAwG,GAG5G,KAAIC,UAAYC,MAAA,CAAOb,MAAP,CAAgB,QAAhB,CAAwBA,MAAxB,CAAiC,IAAjC,CAAwCW,QAAxC,CAAmDD,KAAnD,CAA0D,GAA1D,CAShBI;QAASA,YAAW,CAACC,MAAD,CAAS,CAC3B,IAAIC,OAASJ,SAAAK,UAATD,CAA+B,CACnC,OAAOJ,SAAAM,KAAA,CAAeH,MAAf,CAAP,CACE,EAAEC,MAEJ,OAAOA,OALoB,CAQ7B3B,MAAAC,QAAA,CAAiBwB,WA5CwG;",
"sources":["node_modules/lodash/_unicodeSize.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_unicodeSize\"] = function(global,process,require,module,exports,shadow$shims) {\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsVarRange","rsAstral","rsCombo","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsZWJ","reOptMod","rsOptVar","rsOptJoin","join","rsSeq","rsSymbol","reUnicode","RegExp","unicodeSize","string","result","lastIndex","test"]
}
