{
"version":3,
"file":"module$node_modules$antd$lib$tooltip$placements.js",
"lineCount":6,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGjIC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAJ,QAAAK,mBAAA,CAA6BA,kBAC7BL,QAAA,CAAQ,SAAR,CAAA,CAAqBM,aAErB,KAAIC,YAAcT,OAAA,CAAQ,+CAAR,CAElBU,SAASA,SAAQ,EAAG,CAAEA,QAAA,CAAWN,MAAAO,OAAX,EAA4B,QAAS,CAACC,MAAD,CAAS,CAAE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBC,SAAAC,OAApB,CAAsCF,CAAA,EAAtC,CAA2C,CAAE,IAAIG,OAASF,SAAA,CAAUD,CAAV,CAAc,KAAK,IAAII,GAAT,GAAgBD,OAAhB,CAA0B,GAAIZ,MAAAc,UAAAC,eAAAC,KAAA,CAAqCJ,MAArC;AAA6CC,GAA7C,CAAJ,CAAyDL,MAAA,CAAOK,GAAP,CAAA,CAAcD,MAAA,CAAOC,GAAP,CAA9H,CAAiJ,MAAOL,OAArM,CAAgN,OAAOF,SAAAW,MAAA,CAAe,IAAf,CAAqBP,SAArB,CAAvQ,CAEpB,IAAIQ,0BAA4B,CAC9BC,QAAS,CADqB,CAE9BC,QAAS,CAFqB,CAIhC,KAAIC,2BAA6B,CAC/BF,QAAS,CADsB,CAE/BC,QAAS,CAFsB,CAIjC,KAAIE,aAAe,CAAC,CAAD,CAAI,CAAJ,CAEnBnB,SAASA,mBAAkB,CAACoB,kBAAD,CAAqB,CAC9C,GAAI,MAAOA,mBAAX,GAAkC,SAAlC,CACE,MAAOA,mBAAA,CAAqBL,yBAArB,CAAiDG,0BAG1D,OAAOf,SAAA,CAAS,EAAT,CAAae,0BAAb,CAAyCE,kBAAzC,CALuC,CAQhDnB,QAASA,cAAa,EAAG,CACvB,IAAIoB,OAASd,SAAAC,OAAA,CAAmB,CAAnB,EAAwBD,SAAA,CAAU,CAAV,CAAxB;AAAyCe,SAAzC,CAAqDf,SAAA,CAAU,CAAV,CAArD,CAAoE,EACjF,KAAIgB,mBAAqBF,MAAAG,WAAzB,CACIA,WAAaD,kBAAA,GAAuB,IAAK,EAA5B,CAAgC,CAAhC,CAAoCA,kBADrD,CAEIE,sBAAwBJ,MAAAK,qBAF5B,CAGIA,qBAAuBD,qBAAA,GAA0B,IAAK,EAA/B,CAAmC,EAAnC,CAAwCA,qBAHnE,CAIIE,sBAAwBN,MAAAO,mBAJ5B,CAKIA,mBAAqBD,qBAAA,GAA0B,IAAK,EAA/B,CAAmC,EAAnC,CAAwCA,qBALjE,CAMIE,sBAAwBR,MAAAD,mBAN5B,CAOIA,mBAAqBS,qBAAA,GAA0B,IAAK,EAA/B,CAAmC,IAAnC,CAA0CA,qBACnE;IAAIC,aAAe,CACjBC,KAAM,CACJC,OAAQ,CAAC,IAAD,CAAO,IAAP,CADJ,CAEJC,OAAQ,CAAE,EAAF,CAAK,CAAL,CAFJ,CADW,CAKjBC,MAAO,CACLF,OAAQ,CAAC,IAAD,CAAO,IAAP,CADH,CAELC,OAAQ,CAAC,CAAD,CAAI,CAAJ,CAFH,CALU,CASjBE,IAAK,CACHH,OAAQ,CAAC,IAAD,CAAO,IAAP,CADL,CAEHC,OAAQ,CAAC,CAAD,CAAK,EAAL,CAFL,CATY,CAajBG,OAAQ,CACNJ,OAAQ,CAAC,IAAD,CAAO,IAAP,CADF,CAENC,OAAQ,CAAC,CAAD,CAAI,CAAJ,CAFF,CAbS,CAiBjBI,QAAS,CACPL,OAAQ,CAAC,IAAD,CAAO,IAAP,CADD,CAEPC,OAAQ,CAAC,EAAEP,oBAAF,CAAyBF,UAAzB,CAAD,CAAwC,EAAxC,CAFD,CAjBQ,CAqBjBc,QAAS,CACPN,OAAQ,CAAC,IAAD,CAAO,IAAP,CADD,CAEPC,OAAQ,CAAE,EAAF,CAAK,EAAEL,kBAAF,CAAuBJ,UAAvB,CAAL,CAFD,CArBQ,CAyBjBe,SAAU,CACRP,OAAQ,CAAC,IAAD,CAAO,IAAP,CADA,CAERC,OAAQ,CAACP,oBAAD,CAAwBF,UAAxB,CAAqC,EAArC,CAFA,CAzBO,CA6BjBgB,SAAU,CACRR,OAAQ,CAAC,IAAD,CAAO,IAAP,CADA,CAERC,OAAQ,CAAC,CAAD,CAAI,EAAEL,kBAAF,CAAuBJ,UAAvB,CAAJ,CAFA,CA7BO,CAiCjBiB,YAAa,CACXT,OAAQ,CAAC,IAAD;AAAO,IAAP,CADG,CAEXC,OAAQ,CAACP,oBAAD,CAAwBF,UAAxB,CAAoC,CAApC,CAFG,CAjCI,CAqCjBkB,YAAa,CACXV,OAAQ,CAAC,IAAD,CAAO,IAAP,CADG,CAEXC,OAAQ,CAAC,CAAD,CAAIL,kBAAJ,CAAyBJ,UAAzB,CAFG,CArCI,CAyCjBmB,WAAY,CACVX,OAAQ,CAAC,IAAD,CAAO,IAAP,CADE,CAEVC,OAAQ,CAAC,EAAEP,oBAAF,CAAyBF,UAAzB,CAAD,CAAuC,CAAvC,CAFE,CAzCK,CA6CjBoB,WAAY,CACVZ,OAAQ,CAAC,IAAD,CAAO,IAAP,CADE,CAEVC,OAAQ,CAAE,EAAF,CAAKL,kBAAL,CAA0BJ,UAA1B,CAFE,CA7CK,CAkDnB3B,OAAAgD,KAAA,CAAYf,YAAZ,CAAAgB,QAAA,CAAkC,QAAS,CAACpC,GAAD,CAAM,CAC/CoB,YAAA,CAAapB,GAAb,CAAA,CAAoBW,MAAA0B,mBAAA,CAA4B5C,QAAA,CAAS,EAAT,CAAa2B,YAAA,CAAapB,GAAb,CAAb,CAAgC,CAC9EsC,SAAUhD,kBAAA,CAAmBoB,kBAAnB,CADoE,CAE9ED,aAAcA,YAFgE,CAAhC,CAA5B,CAGfhB,QAAA,CAAS,EAAT,CAAaD,WAAA+C,WAAA,CAAuBvC,GAAvB,CAAb;AAA0C,CAC7CsC,SAAUhD,kBAAA,CAAmBoB,kBAAnB,CADmC,CAA1C,CAGLU,aAAA,CAAapB,GAAb,CAAAwC,YAAA,CAAgC,IAPe,CAAjD,CASA,OAAOpB,aArEgB,CA/BwG;",
"sources":["node_modules/antd/lib/tooltip/placements.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$tooltip$placements\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOverflowOptions = getOverflowOptions;\nexports[\"default\"] = getPlacements;\n\nvar _placements = require(\"rc-tooltip/lib/placements\");\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\n\nfunction getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return _extends({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\n}\n\nfunction getPlacements() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 12 : _config$verticalArrow,\n      _config$autoAdjustOve = config.autoAdjustOverflow,\n      autoAdjustOverflow = _config$autoAdjustOve === void 0 ? true : _config$autoAdjustOve;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? _extends({}, placementMap[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : _extends({}, _placements.placements[key], {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","getOverflowOptions","getPlacements","_placements","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","autoAdjustOverflow","config","undefined","_config$arrowWidth","arrowWidth","_config$horizontalArr","horizontalArrowShift","_config$verticalArrow","verticalArrowShift","_config$autoAdjustOve","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","keys","forEach","arrowPointAtCenter","overflow","placements","ignoreShake"]
}
