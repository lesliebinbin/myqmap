{
"version":3,
"file":"module$node_modules$lodash$_assignMergeValue.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,8CAAf,CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC9H,IAAIC,gBAAkBJ,OAAA,CAAQ,6CAAR,CAAtB,CACIK,GAAKL,OAAA,CAAQ,+BAAR,CAWTM,SAASA,iBAAgB,CAACC,MAAD,CAASC,GAAT,CAAcC,KAAd,CAAqB,CAC5C,GAAKA,KAAL,GAAeC,SAAf,EAA4B,CAACL,EAAA,CAAGE,MAAA,CAAOC,GAAP,CAAH,CAAgBC,KAAhB,CAA7B,EACKA,KADL,GACeC,SADf,EAC4B,EAAEF,GAAF,GAASD,OAAT,CAD5B,CAEEH,eAAA,CAAgBG,MAAhB,CAAwBC,GAAxB,CAA6BC,KAA7B,CAH0C,CAO9CR,MAAAC,QAAA,CAAiBI,gBApB6G;",
"sources":["node_modules/lodash/_assignMergeValue.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_assignMergeValue\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseAssignValue","eq","assignMergeValue","object","key","value","undefined"]
}
