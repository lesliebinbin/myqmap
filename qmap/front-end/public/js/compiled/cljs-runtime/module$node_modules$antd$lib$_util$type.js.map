{
"version":3,
"file":"module$node_modules$antd$lib$_util$type.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yCAAf,CAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGzHC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAJ,QAAAK,SAAA,CAAmBL,OAAAM,MAAnB,CAAmC,IAAK,EAGxC,KAAIA,MAAQA,QAASA,MAAK,EAAG,CAC3B,IAAK,IAAIC,KAAOC,SAAAC,OAAX,CAA6BC,KAAO,IAAIC,KAAJ,CAAUJ,IAAV,CAApC,CAAqDK,KAAO,CAAjE,CAAoEA,IAApE,CAA2EL,IAA3E,CAAiFK,IAAA,EAAjF,CACEF,IAAA,CAAKE,IAAL,CAAA,CAAaJ,SAAA,CAAUI,IAAV,CAGf,OAAOF,KALoB,CAQ7BV,QAAAM,MAAA,CAAgBA,KAEhB,KAAID,SAAWA,QAASA,SAAQ,EAAG,CACjC,IAAK,IAAIQ,MAAQL,SAAAC,OAAZ,CAA8BC,KAAO,IAAIC,KAAJ,CAAUE,KAAV,CAArC,CAAuDC,MAAQ,CAApE,CAAuEA,KAAvE,CAA+ED,KAA/E,CAAsFC,KAAA,EAAtF,CACEJ,IAAA,CAAKI,KAAL,CAAA;AAAcN,SAAA,CAAUM,KAAV,CAGhB,OAAOJ,KAL0B,CAQnCV,QAAAK,SAAA,CAAmBA,QA3BsG;",
"sources":["node_modules/antd/lib/_util/type.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$antd$lib$_util$type\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tupleNum = exports.tuple = void 0;\n\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nvar tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\n\nexports.tuple = tuple;\n\nvar tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return args;\n};\n\nexports.tupleNum = tupleNum;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","tupleNum","tuple","_len","arguments","length","args","Array","_key","_len2","_key2"]
}
