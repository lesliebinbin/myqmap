{
"version":3,
"file":"module$node_modules$draft_js$lib$getUpdatedSelectionState.js",
"lineCount":5,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB3I,IAAIC,eAAiBJ,OAAA,CAAQ,iDAAR,CAErB,KAAIK,WAAaL,OAAA,CAAQ,yCAAR,CAEjBM,SAASA,yBAAwB,CAACC,WAAD,CAAcC,SAAd,CAAyBC,YAAzB,CAAuCC,QAAvC,CAAiDC,WAAjD,CAA8D,CAC7F,IAAIC,UAAYP,UAAA,CAAWE,WAAAM,aAAA,EAAX,CAChB,IAAIC,aAAJ,GAA6B,YAA7B,CACE,GAAI,CAACN,SAAL,EAAkB,CAACE,QAAnB,CAA6B,CAE3BK,OAAAC,KAAA,CAAa,0BAAb;AAAyCC,SAAzC,CAAoDV,WAAAW,KAAA,EAApD,CAEA,OAAON,UAJoB,CAQ/B,IAAIO,WAAaf,cAAAgB,OAAA,CAAsBZ,SAAtB,CACjB,KAAIa,eAAiBF,UAAAG,SACrB,KAAIC,WAAahB,WAAAiB,aAAA,CAAyBH,cAAzB,CAAAI,MAAA,CAA+C,CAACN,UAAAO,aAAD,CAA0B,QAA1B,CAAoCP,UAAAQ,QAApC,CAA/C,CAEjB,KAAIC,UAAYxB,cAAAgB,OAAA,CAAsBV,QAAtB,CAChB,KAAImB,cAAgBD,SAAAN,SACpB,KAAIQ,UAAYvB,WAAAiB,aAAA,CAAyBK,aAAzB,CAAAJ,MAAA,CAA8C,CAACG,SAAAF,aAAD,CAAyB,QAAzB,CAAmCE,SAAAD,QAAnC,CAA9C,CAEhB,KAAII,gBAAkBR,UAAAS,IAAA,CAAe,OAAf,CACtB,KAAIC;AAAiBH,SAAAE,IAAA,CAAc,OAAd,CAErB,KAAIE,kBAAoBX,UAAA,CAAaQ,eAAb,CAA+BtB,YAA/B,CAA8C,IACtE,KAAI0B,iBAAmBL,SAAA,CAAYG,cAAZ,CAA6BtB,WAA7B,CAA2C,IAElE,KAAIyB,SAAWxB,SAAAyB,aAAA,EAAXD,GAAwCf,cAAxCe,EAA0DxB,SAAA0B,gBAAA,EAA1DF,GAA0FF,iBAA1FE,EAA+GxB,SAAA2B,YAAA,EAA/GH,GAA2IP,aAA3IO,EAA4JxB,SAAA4B,eAAA,EAA5JJ,GAA2LD,gBAE/L,IAAIC,QAAJ,CACE,MAAOxB,UAGT,KAAI6B,WAAa,KACjB,IAAIpB,cAAJ,GAAuBQ,aAAvB,CAAsC,CACpC,IAAIa,cAAgBnB,UAAAS,IAAA,CAAe,KAAf,CACpB,KAAIW,aAAeb,SAAAE,IAAA,CAAc,KAAd,CACnB;GAAIC,cAAJ,GAAuBF,eAAvB,EAA0CY,YAA1C,GAA2DD,aAA3D,CACED,UAAA,CAAa9B,WAAb,CAA2BF,YAD7B,KAGEgC,WAAA,CAAaR,cAAb,CAA8BF,eANI,CAAtC,IAQO,CACL,IAAIa,SAAWrC,WAAAsC,kBAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,UAAA,CAAiE,QAAS,CAACC,CAAD,CAAI,CAC3F,MAAOA,EAAP,GAAa5B,cAAb,EAA+B4B,CAA/B,GAAqCpB,aADsD,CAA9E,CAAAqB,MAAA,EAGfT,WAAA,CAAaG,QAAb,GAA0Bf,aAJrB,CAOP,MAAOjB,UAAAuC,MAAA,CAAgB,CACrB3C,UAAWa,cADU,CAErBZ,aAAcyB,iBAFO,CAGrBxB,SAAUmB,aAHW,CAIrBlB,YAAawB,gBAJQ,CAKrBM,WAAYA,UALS,CAAhB,CA/CsF,CAwD/FxC,MAAAC,QAAA;AAAiBI,wBA5E0H;",
"sources":["node_modules/draft-js/lib/getUpdatedSelectionState.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$getUpdatedSelectionState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUpdatedSelectionState\n * @format\n * \n */\n\n'use strict';\n\nvar DraftOffsetKey = require('./DraftOffsetKey');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n  if (process.env.NODE_ENV !== 'production') {\n    if (!anchorKey || !focusKey) {\n      /*eslint-disable no-console */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n      /*eslint-enable no-console */\n      return selection;\n    }\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeaf = editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeaf = editorState.getBlockTree(focusBlockKey).getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","DraftOffsetKey","nullthrows","getUpdatedSelectionState","editorState","anchorKey","anchorOffset","focusKey","focusOffset","selection","getSelection","NODE_ENV","console","warn","arguments","toJS","anchorPath","decode","anchorBlockKey","blockKey","anchorLeaf","getBlockTree","getIn","decoratorKey","leafKey","focusPath","focusBlockKey","focusLeaf","anchorLeafStart","get","focusLeafStart","anchorBlockOffset","focusBlockOffset","areEqual","getAnchorKey","getAnchorOffset","getFocusKey","getFocusOffset","isBackward","anchorLeafEnd","focusLeafEnd","startKey","getCurrentContent","getBlockMap","keySeq","skipUntil","v","first","merge"]
}
