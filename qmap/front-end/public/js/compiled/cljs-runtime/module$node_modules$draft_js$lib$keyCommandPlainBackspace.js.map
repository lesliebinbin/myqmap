{
"version":3,
"file":"module$node_modules$draft_js$lib$keyCommandPlainBackspace.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,2DAAf,CAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB3I,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAClB,KAAIK,aAAeL,OAAA,CAAQ,2CAAR,CAEnB,KAAIM,sBAAwBN,OAAA,CAAQ,wDAAR,CAC5B,KAAIO,uBAAyBP,OAAA,CAAQ,yDAAR,CAO7BQ,SAASA,yBAAwB,CAACC,WAAD,CAAc,CAC7C,IAAIC;AAAeH,sBAAA,CAAuBE,WAAvB,CAAoC,QAAS,CAACE,aAAD,CAAgB,CAC9E,IAAIC,UAAYD,aAAAE,aAAA,EAChB,KAAIC,QAAUH,aAAAI,kBAAA,EACd,KAAIC,IAAMJ,SAAAK,aAAA,EACV,KAAIC,OAASN,SAAAO,gBAAA,EACb,KAAIC,WAAaN,OAAAO,eAAA,CAAuBL,GAAvB,CAAAM,QAAA,EAAA,CAAsCJ,MAAtC,CAA+C,CAA/C,CACjB,OAAOZ,sBAAA,CAAsBK,aAAtB,CAAqCS,UAAA,CAAaf,YAAAkB,eAAA,CAA4BH,UAA5B,CAAwC,CAAxC,CAAb,CAA0D,CAA/F,CANuE,CAA7D,CAOhB,UAPgB,CASnB,IAAIV,YAAJ,GAAqBD,WAAAM,kBAAA,EAArB,CACE,MAAON,YAGT,KAAIG,UAAYH,WAAAI,aAAA,EAChB;MAAOT,YAAAoB,KAAA,CAAiBf,WAAjB,CAA8BC,YAAAe,IAAA,CAAiB,iBAAjB,CAAoCb,SAApC,CAA9B,CAA8EA,SAAAc,YAAA,EAAA,CAA0B,qBAA1B,CAAkD,cAAhI,CAfsC,CAkB/CzB,MAAAC,QAAA,CAAiBM,wBA7C0H;",
"sources":["node_modules/draft-js/lib/keyCommandPlainBackspace.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$keyCommandPlainBackspace\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandPlainBackspace\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\n/**\n * Remove the selected range. If the cursor is collapsed, remove the preceding\n * character. This operation is Unicode-aware, so removing a single character\n * will remove a surrogate pair properly as well.\n */\nfunction keyCommandPlainBackspace(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    var content = strategyState.getCurrentContent();\n    var key = selection.getAnchorKey();\n    var offset = selection.getAnchorOffset();\n    var charBehind = content.getBlockForKey(key).getText()[offset - 1];\n    return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  var selection = editorState.getSelection();\n  return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'backspace-character' : 'remove-range');\n}\n\nmodule.exports = keyCommandPlainBackspace;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EditorState","UnicodeUtils","moveSelectionBackward","removeTextWithStrategy","keyCommandPlainBackspace","editorState","afterRemoval","strategyState","selection","getSelection","content","getCurrentContent","key","getAnchorKey","offset","getAnchorOffset","charBehind","getBlockForKey","getText","getUTF16Length","push","set","isCollapsed"]
}
