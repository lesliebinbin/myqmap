{
"version":3,
"file":"module$node_modules$draft_js$lib$encodeInlineStyleRanges.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,0DAAf,CAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB1I,IAAIC,aAAeJ,OAAA,CAAQ,2CAAR,CAEnB,KAAIK,oBAAsBL,OAAA,CAAQ,sDAAR,CAE1B,KAAIM,SAAWA,QAASA,SAAQ,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACrC,MAAOD,EAAP,GAAaC,CADwB,CAGvC,KAAIC,SAAWA,QAASA,SAAQ,CAACF,CAAD,CAAI,CAClC,MAAO,CAAC,CAACA,CADyB,CAGpC,KAAIG,YAAc,EAMlBC,SAASA,yBAAwB,CAACC,KAAD,CAAQC,SAAR,CAAmBC,aAAnB,CAAkC,CACjE,IAAIC,OAAS,EAGb,KAAIC;AAAkBH,SAAAI,IAAA,CAAc,QAAS,CAACC,KAAD,CAAQ,CACnD,MAAOA,MAAAC,IAAA,CAAUL,aAAV,CAD4C,CAA/B,CAAAM,OAAA,EAItBf,oBAAA,CAAoBW,eAApB,CAAqCV,QAArC,CAEAG,QAFA,CAEU,QAAS,CAACY,KAAD,CAAQC,GAAR,CAAa,CAC9B,IAAIC,KAAOX,KAAAY,QAAA,EACXT,OAAAU,KAAA,CAAY,CACVC,OAAQtB,YAAAuB,OAAA,CAAoBJ,IAAAK,MAAA,CAAW,CAAX,CAAcP,KAAd,CAApB,CADE,CAEVQ,OAAQzB,YAAAuB,OAAA,CAAoBJ,IAAAK,MAAA,CAAWP,KAAX,CAAkBC,GAAlB,CAApB,CAFE,CAGVJ,MAAOJ,aAHG,CAAZ,CAF8B,CAFhC,CAWA,OAAOC,OAnB0D,CA0BnEe,QAASA,wBAAuB,CAAClB,KAAD,CAAQ,CACtC,IAAIC,UAAYD,KAAAmB,iBAAA,EAAAd,IAAA,CAA6B,QAAS,CAACe,CAAD,CAAI,CACxD,MAAOA,EAAAC,SAAA,EADiD,CAA1C,CAAAb,OAAA,EAGhB,KAAIL,OAASF,SAAAqB,QAAA,EAAAC,MAAA,EAAAlB,IAAA,CAAgC,QAAS,CAACC,KAAD,CAAQ,CAC5D,MAAOP,yBAAA,CAAyBC,KAAzB;AAAgCC,SAAhC,CAA2CK,KAA3C,CADqD,CAAjD,CAIb,OAAOkB,MAAAC,UAAAC,OAAAC,MAAA,CAA6B7B,WAA7B,CAA0CK,MAAAyB,KAAA,EAA1C,CAR+B,CAWxCvC,MAAAC,QAAA,CAAiB4B,uBArEyH;",
"sources":["node_modules/draft-js/lib/encodeInlineStyleRanges.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$encodeInlineStyleRanges\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule encodeInlineStyleRanges\n * @format\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar findRangesImmutable = require('./findRangesImmutable');\n\nvar areEqual = function areEqual(a, b) {\n  return a === b;\n};\nvar isTruthy = function isTruthy(a) {\n  return !!a;\n};\nvar EMPTY_ARRAY = [];\n\n/**\n * Helper function for getting encoded styles for each inline style. Convert\n * to UTF-8 character counts for storage.\n */\nfunction getEncodedInlinesForType(block, styleList, styleToEncode) {\n  var ranges = [];\n\n  // Obtain an array with ranges for only the specified style.\n  var filteredInlines = styleList.map(function (style) {\n    return style.has(styleToEncode);\n  }).toList();\n\n  findRangesImmutable(filteredInlines, areEqual,\n  // We only want to keep ranges with nonzero style values.\n  isTruthy, function (start, end) {\n    var text = block.getText();\n    ranges.push({\n      offset: UnicodeUtils.strlen(text.slice(0, start)),\n      length: UnicodeUtils.strlen(text.slice(start, end)),\n      style: styleToEncode\n    });\n  });\n\n  return ranges;\n}\n\n/*\n * Retrieve the encoded arrays of inline styles, with each individual style\n * treated separately.\n */\nfunction encodeInlineStyleRanges(block) {\n  var styleList = block.getCharacterList().map(function (c) {\n    return c.getStyle();\n  }).toList();\n  var ranges = styleList.flatten().toSet().map(function (style) {\n    return getEncodedInlinesForType(block, styleList, style);\n  });\n\n  return Array.prototype.concat.apply(EMPTY_ARRAY, ranges.toJS());\n}\n\nmodule.exports = encodeInlineStyleRanges;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","UnicodeUtils","findRangesImmutable","areEqual","a","b","isTruthy","EMPTY_ARRAY","getEncodedInlinesForType","block","styleList","styleToEncode","ranges","filteredInlines","map","style","has","toList","start","end","text","getText","push","offset","strlen","slice","length","encodeInlineStyleRanges","getCharacterList","c","getStyle","flatten","toSet","Array","prototype","concat","apply","toJS"]
}
