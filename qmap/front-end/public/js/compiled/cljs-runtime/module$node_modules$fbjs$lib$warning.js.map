{
"version":3,
"file":"module$node_modules$fbjs$lib$warning.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,sCAAf,CAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAWtH,IAAIC,cAAgBJ,OAAA,CAAQ,4CAAR,CASpB,KAAIK,QAAUD,aAEd,IAAIE,aAAJ,GAA6B,YAA7B,CAA2C,CACzC,IAAIC,aAAeA,QAASA,aAAY,CAACC,MAAD,CAAS,CAC/C,IAAK,IAAIC,KAAOC,SAAAC,OAAX,CAA6BC,KAAOC,KAAA,CAAMJ,IAAA,CAAO,CAAP,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAA5B,CAApC,CAAoEK,KAAO,CAAhF,CAAmFA,IAAnF,CAA0FL,IAA1F,CAAgGK,IAAA,EAAhG,CACEF,IAAA,CAAKE,IAAL,CAAY,CAAZ,CAAA,CAAiBJ,SAAA,CAAUI,IAAV,CAGnB,KAAIC,SAAW,CACf,KAAIC,QAAU,WAAVA,CAAwBR,MAAAS,QAAA,CAAe,KAAf,CAAsB,QAAS,EAAG,CAC5D,MAAOL,KAAA,CAAKG,QAAA,EAAL,CADqD,CAAlC,CAG5B;GAAI,MAAOG,QAAX,GAAuB,WAAvB,CACEA,OAAAC,MAAA,CAAcH,OAAd,CAEF,IAAI,CAIF,KAAM,KAAII,KAAJ,CAAUJ,OAAV,CAAN,CAJE,CAKF,MAAOK,CAAP,CAAU,EAjBmC,CAoBjDhB,QAAA,CAAUA,QAASA,QAAO,CAACiB,SAAD,CAAYd,MAAZ,CAAoB,CAC5C,GAAIA,MAAJ,GAAee,SAAf,CACE,KAAM,KAAIH,KAAJ,CAAU,2DAAV,CAAwE,kBAAxE,CAAN,CAGF,GAAIZ,MAAAgB,QAAA,CAAe,6BAAf,CAAJ,GAAsD,CAAtD,CACE,MAGF,IAAI,CAACF,SAAL,CAAgB,CACd,IAAK,IAAIG,MAAQf,SAAAC,OAAZ,CAA8BC,KAAOC,KAAA,CAAMY,KAAA,CAAQ,CAAR,CAAYA,KAAZ,CAAoB,CAApB,CAAwB,CAA9B,CAArC,CAAuEC,MAAQ,CAApF,CAAuFA,KAAvF,CAA+FD,KAA/F,CAAsGC,KAAA,EAAtG,CACEd,IAAA,CAAKc,KAAL,CAAa,CAAb,CAAA,CAAkBhB,SAAA,CAAUgB,KAAV,CAGpBnB,aAAAoB,MAAA,CAAmBJ,SAAnB,CAA8B,CAACf,MAAD,CAAAoB,OAAA,CAAgBhB,IAAhB,CAA9B,CALc,CAT4B,CArBL,CAwC3CX,MAAAC,QAAA;AAAiBG,OA9DqG;",
"sources":["node_modules/fbjs/lib/warning.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$warning\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","emptyFunction","warning","NODE_ENV","printWarning","format","_len","arguments","length","args","Array","_key","argIndex","message","replace","console","error","Error","x","condition","undefined","indexOf","_len2","_key2","apply","concat"]
}
