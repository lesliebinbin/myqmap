{
"version":3,
"file":"module$node_modules$draft_js$lib$DraftModifier.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/draft-js/lib/DraftModifier.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$DraftModifier\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftModifier\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentStateInlineStyle = require('./ContentStateInlineStyle');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar applyEntityToContentState = require('./applyEntityToContentState');\nvar getCharacterRemovalRange = require('./getCharacterRemovalRange');\nvar getContentStateFragment = require('./getContentStateFragment');\nvar insertFragmentIntoContentState = require('./insertFragmentIntoContentState');\nvar insertTextIntoContentState = require('./insertTextIntoContentState');\nvar invariant = require('fbjs/lib/invariant');\nvar modifyBlockForContentState = require('./modifyBlockForContentState');\nvar removeEntitiesAtEdges = require('./removeEntitiesAtEdges');\nvar removeRangeFromContentState = require('./removeRangeFromContentState');\nvar splitBlockInContentState = require('./splitBlockInContentState');\n\nvar OrderedSet = Immutable.OrderedSet;\n\n/**\n * `DraftModifier` provides a set of convenience methods that apply\n * modifications to a `ContentState` object based on a target `SelectionState`.\n *\n * Any change to a `ContentState` should be decomposable into a series of\n * transaction functions that apply the required changes and return output\n * `ContentState` objects.\n *\n * These functions encapsulate some of the most common transaction sequences.\n */\n\nvar DraftModifier = {\n  replaceText: function replaceText(contentState, rangeToReplace, text, inlineStyle, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, rangeToReplace);\n    var withoutText = removeRangeFromContentState(withoutEntities, rangeToReplace);\n\n    var character = CharacterMetadata.create({\n      style: inlineStyle || OrderedSet(),\n      entity: entityKey || null\n    });\n\n    return insertTextIntoContentState(withoutText, withoutText.getSelectionAfter(), text, character);\n  },\n\n  insertText: function insertText(contentState, targetRange, text, inlineStyle, entityKey) {\n    !targetRange.isCollapsed() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Target range must be collapsed for `insertText`.') : invariant(false) : void 0;\n    return DraftModifier.replaceText(contentState, targetRange, text, inlineStyle, entityKey);\n  },\n\n  moveText: function moveText(contentState, removalRange, targetRange) {\n    var movedFragment = getContentStateFragment(contentState, removalRange);\n\n    var afterRemoval = DraftModifier.removeRange(contentState, removalRange, 'backward');\n\n    return DraftModifier.replaceWithFragment(afterRemoval, targetRange, movedFragment);\n  },\n\n  replaceWithFragment: function replaceWithFragment(contentState, targetRange, fragment) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, targetRange);\n    var withoutText = removeRangeFromContentState(withoutEntities, targetRange);\n\n    return insertFragmentIntoContentState(withoutText, withoutText.getSelectionAfter(), fragment);\n  },\n\n  removeRange: function removeRange(contentState, rangeToRemove, removalDirection) {\n    var startKey = void 0,\n        endKey = void 0,\n        startBlock = void 0,\n        endBlock = void 0;\n    if (rangeToRemove.getIsBackward()) {\n      rangeToRemove = rangeToRemove.merge({\n        anchorKey: rangeToRemove.getFocusKey(),\n        anchorOffset: rangeToRemove.getFocusOffset(),\n        focusKey: rangeToRemove.getAnchorKey(),\n        focusOffset: rangeToRemove.getAnchorOffset(),\n        isBackward: false\n      });\n    }\n    startKey = rangeToRemove.getAnchorKey();\n    endKey = rangeToRemove.getFocusKey();\n    startBlock = contentState.getBlockForKey(startKey);\n    endBlock = contentState.getBlockForKey(endKey);\n    var startOffset = rangeToRemove.getStartOffset();\n    var endOffset = rangeToRemove.getEndOffset();\n\n    var startEntityKey = startBlock.getEntityAt(startOffset);\n    var endEntityKey = endBlock.getEntityAt(endOffset - 1);\n\n    // Check whether the selection state overlaps with a single entity.\n    // If so, try to remove the appropriate substring of the entity text.\n    if (startKey === endKey) {\n      if (startEntityKey && startEntityKey === endEntityKey) {\n        var _adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n        return removeRangeFromContentState(contentState, _adjustedRemovalRange);\n      }\n    }\n    var adjustedRemovalRange = rangeToRemove;\n    if (DraftFeatureFlags.draft_segmented_entities_behavior) {\n      // Adjust the selection to properly delete segemented and immutable\n      // entities\n      adjustedRemovalRange = getCharacterRemovalRange(contentState.getEntityMap(), startBlock, endBlock, rangeToRemove, removalDirection);\n    }\n\n    var withoutEntities = removeEntitiesAtEdges(contentState, adjustedRemovalRange);\n    return removeRangeFromContentState(withoutEntities, adjustedRemovalRange);\n  },\n\n  splitBlock: function splitBlock(contentState, selectionState) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    var withoutText = removeRangeFromContentState(withoutEntities, selectionState);\n\n    return splitBlockInContentState(withoutText, withoutText.getSelectionAfter());\n  },\n\n  applyInlineStyle: function applyInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.add(contentState, selectionState, inlineStyle);\n  },\n\n  removeInlineStyle: function removeInlineStyle(contentState, selectionState, inlineStyle) {\n    return ContentStateInlineStyle.remove(contentState, selectionState, inlineStyle);\n  },\n\n  setBlockType: function setBlockType(contentState, selectionState, blockType) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ type: blockType, depth: 0 });\n    });\n  },\n\n  setBlockData: function setBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ data: blockData });\n    });\n  },\n\n  mergeBlockData: function mergeBlockData(contentState, selectionState, blockData) {\n    return modifyBlockForContentState(contentState, selectionState, function (block) {\n      return block.merge({ data: block.getData().merge(blockData) });\n    });\n  },\n\n  applyEntity: function applyEntity(contentState, selectionState, entityKey) {\n    var withoutEntities = removeEntitiesAtEdges(contentState, selectionState);\n    return applyEntityToContentState(withoutEntities, selectionState, entityKey);\n  }\n};\n\nmodule.exports = DraftModifier;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","CharacterMetadata","ContentStateInlineStyle","DraftFeatureFlags","Immutable","applyEntityToContentState","getCharacterRemovalRange","getContentStateFragment","insertFragmentIntoContentState","insertTextIntoContentState","invariant","modifyBlockForContentState","removeEntitiesAtEdges","removeRangeFromContentState","splitBlockInContentState","OrderedSet","DraftModifier","replaceText","contentState","rangeToReplace","text","inlineStyle","entityKey","withoutEntities","withoutText","character","create","style","entity","getSelectionAfter","insertText","targetRange","isCollapsed","NODE_ENV","moveText","removalRange","movedFragment","afterRemoval","removeRange","replaceWithFragment","fragment","rangeToRemove","removalDirection","startKey","endKey","startBlock","endBlock","getIsBackward","merge","anchorKey","getFocusKey","anchorOffset","getFocusOffset","focusKey","getAnchorKey","focusOffset","getAnchorOffset","isBackward","getBlockForKey","startOffset","getStartOffset","endOffset","getEndOffset","startEntityKey","getEntityAt","endEntityKey","_adjustedRemovalRange","getEntityMap","adjustedRemovalRange","draft_segmented_entities_behavior","splitBlock","selectionState","applyInlineStyle","add","removeInlineStyle","remove","setBlockType","blockType","block","type","depth","setBlockData","blockData","data","mergeBlockData","getData","applyEntity"]
}
