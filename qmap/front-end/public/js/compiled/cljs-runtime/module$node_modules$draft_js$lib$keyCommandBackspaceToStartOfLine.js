shadow$provide["module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine"]=function(global,process,require,module,exports,shadow$shims){var EditorState=require("module$node_modules$draft_js$lib$EditorState");var expandRangeToStartOfLine=require("module$node_modules$draft_js$lib$expandRangeToStartOfLine");var getDraftEditorSelectionWithNodes=require("module$node_modules$draft_js$lib$getDraftEditorSelectionWithNodes");var moveSelectionBackward=require("module$node_modules$draft_js$lib$moveSelectionBackward");
var removeTextWithStrategy=require("module$node_modules$draft_js$lib$removeTextWithStrategy");function keyCommandBackspaceToStartOfLine(editorState){var afterRemoval=removeTextWithStrategy(editorState,function(strategyState){var selection=strategyState.getSelection();if(selection.isCollapsed()&&selection.getAnchorOffset()===0)return moveSelectionBackward(strategyState,1);var domSelection=global.getSelection();var range=domSelection.getRangeAt(0);range=expandRangeToStartOfLine(range);return getDraftEditorSelectionWithNodes(strategyState,
null,range.endContainer,range.endOffset,range.startContainer,range.startOffset).selectionState},"backward");if(afterRemoval===editorState.getCurrentContent())return editorState;return EditorState.push(editorState,afterRemoval,"remove-range")}module.exports=keyCommandBackspaceToStartOfLine}
//# sourceMappingURL=module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine.js.map
