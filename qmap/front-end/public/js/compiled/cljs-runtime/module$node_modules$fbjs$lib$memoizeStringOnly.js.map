{
"version":3,
"file":"module$node_modules$fbjs$lib$memoizeStringOnly.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAe,gDAAf,CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAiBhIC,QAASA,kBAAiB,CAACC,QAAD,CAAW,CACnC,IAAIC,MAAQ,EACZ,OAAO,SAAS,CAACC,MAAD,CAAS,CACvB,GAAI,CAACD,KAAAE,eAAA,CAAqBD,MAArB,CAAL,CACED,KAAA,CAAMC,MAAN,CAAA,CAAgBF,QAAAI,KAAA,CAAc,IAAd,CAAoBF,MAApB,CAElB,OAAOD,MAAA,CAAMC,MAAN,CAJgB,CAFU,CAUrCN,MAAAC,QAAA,CAAiBE,iBA3B+G;",
"sources":["node_modules/fbjs/lib/memoizeStringOnly.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$memoizeStringOnly\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Memoizes the return value of a function that accepts one string argument.\n */\n\nfunction memoizeStringOnly(callback) {\n  var cache = {};\n  return function (string) {\n    if (!cache.hasOwnProperty(string)) {\n      cache[string] = callback.call(this, string);\n    }\n    return cache[string];\n  };\n}\n\nmodule.exports = memoizeStringOnly;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","memoizeStringOnly","callback","cache","string","hasOwnProperty","call"]
}
