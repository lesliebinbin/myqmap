{
"version":3,
"file":"module$node_modules$performance_now$lib$performance_now.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,yDAAf,CAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAExI,SAAQ,EAAG,CACV,IAAIC,cAAJ,CAAoBC,MAApB,CAA4BC,QAA5B,CAAsCC,cAAtC,CAAsDC,YAAtD,CAAoEC,MAEpE,IAAK,MAAOC,YAAZ,GAA4B,WAA5B,EAA2CA,WAA3C,GAA2D,IAA3D,EAAoEA,WAAAC,IAApE,CACEV,MAAAC,QAAA,CAAiBU,QAAQ,EAAG,CAC1B,MAAOF,YAAAC,IAAA,EADmB,CAD9B,KAIO,IAAK,MAAOZ,QAAZ,GAAwB,WAAxB,EAAuCA,OAAvC,GAAmD,IAAnD,EAA4DA,OAAAM,OAA5D,CAA4E,CACjFJ,MAAAC,QAAA,CAAiBU,QAAQ,EAAG,CAC1B,OAAQR,cAAA,EAAR,CAA2BI,YAA3B,EAA2C,GADjB,CAG5BH,OAAA,CAASN,OAAAM,OACTD;cAAA,CAAiBA,QAAQ,EAAG,CAC1B,IAAIS,EACJA,GAAA,CAAKR,MAAA,EACL,OAAOQ,GAAA,CAAG,CAAH,CAAP,CAAe,GAAf,CAAqBA,EAAA,CAAG,CAAH,CAHK,CAK5BN,eAAA,CAAiBH,cAAA,EACjBK,OAAA,CAASV,OAAAe,OAAA,EAAT,CAA4B,GAC5BN,aAAA,CAAeD,cAAf,CAAgCE,MAZiD,CAA5E,IAaA,IAAIM,IAAAJ,IAAJ,CAAc,CACnBV,MAAAC,QAAA,CAAiBU,QAAQ,EAAG,CAC1B,MAAOG,KAAAJ,IAAA,EAAP,CAAoBL,QADM,CAG5BA,SAAA,CAAWS,IAAAJ,IAAA,EAJQ,CAAd,IAKA,CACLV,MAAAC,QAAA,CAAiBU,QAAQ,EAAG,CAC1B,MAAOI,CAAA,IAAID,IAAJC,SAAA,EAAP,CAA8BV,QADJ,CAG5BA,SAAA,CAAWU,CAAA,IAAID,IAAJC,SAAA,EAJN,CAzBG,CAAX,CAADC,KAAA,CAgCQ,IAhCR,CAFyI;",
"sources":["node_modules/performance-now/lib/performance-now.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$performance_now$lib$performance_now\"] = function(global,process,require,module,exports,shadow$shims) {\n// Generated by CoffeeScript 1.12.2\n(function() {\n  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;\n\n  if ((typeof performance !== \"undefined\" && performance !== null) && performance.now) {\n    module.exports = function() {\n      return performance.now();\n    };\n  } else if ((typeof process !== \"undefined\" && process !== null) && process.hrtime) {\n    module.exports = function() {\n      return (getNanoSeconds() - nodeLoadTime) / 1e6;\n    };\n    hrtime = process.hrtime;\n    getNanoSeconds = function() {\n      var hr;\n      hr = hrtime();\n      return hr[0] * 1e9 + hr[1];\n    };\n    moduleLoadTime = getNanoSeconds();\n    upTime = process.uptime() * 1e9;\n    nodeLoadTime = moduleLoadTime - upTime;\n  } else if (Date.now) {\n    module.exports = function() {\n      return Date.now() - loadTime;\n    };\n    loadTime = Date.now();\n  } else {\n    module.exports = function() {\n      return new Date().getTime() - loadTime;\n    };\n    loadTime = new Date().getTime();\n  }\n\n}).call(this);\n\n//# sourceMappingURL=performance-now.js.map\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","getNanoSeconds","hrtime","loadTime","moduleLoadTime","nodeLoadTime","upTime","performance","now","module.exports","hr","uptime","Date","getTime","call"]
}
