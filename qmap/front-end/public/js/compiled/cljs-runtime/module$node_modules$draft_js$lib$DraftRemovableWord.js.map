{
"version":3,
"file":"module$node_modules$draft_js$lib$DraftRemovableWord.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBrI,IAAIC,aAAeJ,OAAA,CAAQ,2CAAR,CAEnB,KAAIK,YAAcD,YAAAE,eAAA,EAMlB,KAAIC,gBAAkB,OAItB,KAAIC,2BAA6B,aAA7BA,CAA6CH,WAEjD,KAAII,cAAgB,GAAhBA,CAAsB,KAAtBA,CAA8BD,0BAA9BC,CAA2D,IAA3DA,CAAkE,KAAlEA,CAA0EF,eAA1EE,CAA4F,MAA5FA,CAAqGD,0BAArGC,CAAkI,MAAlIA,CAA2I,QAA3IA,CAAsJD,0BAAtJC,CAAmL,KACvL,KAAIC;AAAe,IAAIC,MAAJ,CAAWF,aAAX,CAEnB,KAAIG,iBAAmB,QAAnBA,CAA8BJ,0BAA9BI,CAA2D,KAA3DA,CAAmE,KAAnEA,CAA2EL,eAA3EK,CAA6F,MAA7FA,CAAsGJ,0BAAtGI,CAAmI,MAAnIA,CAA4I,KAA5IA,CAAoJJ,0BAApJI,CAAiL,IAAjLA,CAAwL,GAC5L,KAAIC,gBAAkB,IAAIF,MAAJ,CAAWC,gBAAX,CAEtBE,SAASA,iBAAgB,CAACC,IAAD,CAAOC,UAAP,CAAmB,CAC1C,IAAIC,QAAUD,UAAA,CAAaH,eAAAK,KAAA,CAAqBH,IAArB,CAAb,CAA0CL,YAAAQ,KAAA,CAAkBH,IAAlB,CACxD,OAAOE,QAAA,CAAUA,OAAA,CAAQ,CAAR,CAAV,CAAuBF,IAFY,CAK5C,IAAII,mBAAqB,CACvBC,YAAaA,QAASA,YAAW,CAACL,IAAD,CAAO,CACtC,MAAOD,iBAAA,CAAiBC,IAAjB,CAAuB,IAAvB,CAD+B,CADjB,CAKvBM,WAAYA,QAASA,WAAU,CAACN,IAAD,CAAO,CACpC,MAAOD,iBAAA,CAAiBC,IAAjB;AAAuB,KAAvB,CAD6B,CALf,CAUzBd,OAAAC,QAAA,CAAiBiB,kBAnDoH;",
"sources":["node_modules/draft-js/lib/DraftRemovableWord.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$DraftRemovableWord\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftRemovableWord\n * @format\n * \n */\n\n'use strict';\n\nvar TokenizeUtil = require('fbjs/lib/TokenizeUtil');\n\nvar punctuation = TokenizeUtil.getPunctuation();\n\n// The apostrophe and curly single quotes behave in a curious way: when\n// surrounded on both sides by word characters, they behave as word chars; when\n// either neighbor is punctuation or an end of the string, they behave as\n// punctuation.\nvar CHAMELEON_CHARS = '[\\'\\u2018\\u2019]';\n\n// Remove the underscore, which should count as part of the removable word. The\n// \"chameleon chars\" also count as punctuation in this regex.\nvar WHITESPACE_AND_PUNCTUATION = '\\\\s|(?![_])' + punctuation;\n\nvar DELETE_STRING = '^' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)';\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\n\nvar BACKSPACE_STRING = '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '$';\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\n\nfunction getRemovableWord(text, isBackward) {\n  var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\n  return matches ? matches[0] : text;\n}\n\nvar DraftRemovableWord = {\n  getBackward: function getBackward(text) {\n    return getRemovableWord(text, true);\n  },\n\n  getForward: function getForward(text) {\n    return getRemovableWord(text, false);\n  }\n};\n\nmodule.exports = DraftRemovableWord;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","TokenizeUtil","punctuation","getPunctuation","CHAMELEON_CHARS","WHITESPACE_AND_PUNCTUATION","DELETE_STRING","DELETE_REGEX","RegExp","BACKSPACE_STRING","BACKSPACE_REGEX","getRemovableWord","text","isBackward","matches","exec","DraftRemovableWord","getBackward","getForward"]
}
