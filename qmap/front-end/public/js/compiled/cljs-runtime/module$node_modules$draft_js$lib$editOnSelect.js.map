{
"version":3,
"file":"module$node_modules$draft_js$lib$editOnSelect.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,+CAAf,CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB/H,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAClB,KAAIK,SAAWL,OAAA,CAAQ,qCAAR,CAEf,KAAIM,wBAA0BN,OAAA,CAAQ,0DAAR,CAC9B,KAAIO,UAAYP,OAAA,CAAQ,wCAAR,CAEhBQ,SAASA,aAAY,CAACC,MAAD,CAAS,CAC5B,GAAIA,MAAAC,mBAAJ,EAAiCD,MAAAE,mBAAjC;AAA+DF,MAAAG,MAAAC,YAA/D,CACE,MAGF,KAAIA,YAAcJ,MAAAG,MAAAC,YAClB,KAAIC,WAAaT,QAAAU,YAAA,CAAqBN,MAAAO,gBAArB,CACjB,EAACF,UAAD,CAAcG,aAAA,GAAyB,YAAzB,CAAwCV,SAAA,CAAU,KAAV,CAAiB,oBAAjB,CAAxC,CAAiFA,SAAA,CAAU,KAAV,CAA/F,CAAkH,IAAK,EACvH,GAAEO,UAAAI,WAAF,WAAmCC,YAAnC,CAAA,CAAkDF,aAAA,GAAyB,YAAzB,CAAwCV,SAAA,CAAU,KAAV,CAAiB,6CAAjB,CAAxC,CAA0GA,SAAA,CAAU,KAAV,CAA5J,CAA+K,IAAK,EACpL,KAAIa,kBAAoBd,uBAAA,CAAwBO,WAAxB,CAAqCC,UAAAI,WAArC,CACxB,KAAIG;AAAwBD,iBAAAE,eAE5B,IAAID,qBAAJ,GAA8BR,WAAAU,aAAA,EAA9B,CAA0D,CACxD,GAAIH,iBAAAI,cAAJ,CACEX,WAAA,CAAcT,WAAAqB,eAAA,CAA2BZ,WAA3B,CAAwCQ,qBAAxC,CADhB,KAGER,YAAA,CAAcT,WAAAsB,gBAAA,CAA4Bb,WAA5B,CAAyCQ,qBAAzC,CAEhBZ,OAAAkB,OAAA,CAAcd,WAAd,CANwD,CAZ9B,CAsB9BZ,MAAAC,QAAA,CAAiBM,YA5C8G;",
"sources":["node_modules/draft-js/lib/editOnSelect.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$editOnSelect\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnSelect\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar ReactDOM = require('react-dom');\n\nvar getDraftEditorSelection = require('./getDraftEditorSelection');\nvar invariant = require('fbjs/lib/invariant');\n\nfunction editOnSelect(editor) {\n  if (editor._blockSelectEvents || editor._latestEditorState !== editor.props.editorState) {\n    return;\n  }\n\n  var editorState = editor.props.editorState;\n  var editorNode = ReactDOM.findDOMNode(editor.editorContainer);\n  !editorNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing editorNode') : invariant(false) : void 0;\n  !(editorNode.firstChild instanceof HTMLElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'editorNode.firstChild is not an HTMLElement') : invariant(false) : void 0;\n  var documentSelection = getDraftEditorSelection(editorState, editorNode.firstChild);\n  var updatedSelectionState = documentSelection.selectionState;\n\n  if (updatedSelectionState !== editorState.getSelection()) {\n    if (documentSelection.needsRecovery) {\n      editorState = EditorState.forceSelection(editorState, updatedSelectionState);\n    } else {\n      editorState = EditorState.acceptSelection(editorState, updatedSelectionState);\n    }\n    editor.update(editorState);\n  }\n}\n\nmodule.exports = editOnSelect;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EditorState","ReactDOM","getDraftEditorSelection","invariant","editOnSelect","editor","_blockSelectEvents","_latestEditorState","props","editorState","editorNode","findDOMNode","editorContainer","NODE_ENV","firstChild","HTMLElement","documentSelection","updatedSelectionState","selectionState","getSelection","needsRecovery","forceSelection","acceptSelection","update"]
}
