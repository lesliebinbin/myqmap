shadow$provide["module$node_modules$draft_js$lib$BlockTree"]=function(global,process,require,module,exports,shadow$shims){var Immutable=require("module$node_modules$immutable$dist$immutable");var emptyFunction=require("module$node_modules$fbjs$lib$emptyFunction");var findRangesImmutable=require("module$node_modules$draft_js$lib$findRangesImmutable");var List=Immutable.List,Repeat=Immutable.Repeat,Record=Immutable.Record;var returnTrue=emptyFunction.thatReturnsTrue;var FINGERPRINT_DELIMITER="-";var defaultLeafRange=
{start:null,end:null};var LeafRange=Record(defaultLeafRange);var defaultDecoratorRange={start:null,end:null,decoratorKey:null,leaves:null};var DecoratorRange=Record(defaultDecoratorRange);var BlockTree={generate:function generate(contentState,block,decorator){var textLength=block.getLength();if(!textLength)return List.of(new DecoratorRange({start:0,end:0,decoratorKey:null,leaves:List.of(new LeafRange({start:0,end:0}))}));var leafSets=[];var decorations=decorator?decorator.getDecorations(block,contentState):
List(Repeat(null,textLength));var chars=block.getCharacterList();findRangesImmutable(decorations,areEqual,returnTrue,function(start,end){leafSets.push(new DecoratorRange({start:start,end:end,decoratorKey:decorations.get(start),leaves:generateLeaves(chars.slice(start,end).toList(),start)}))});return List(leafSets)},getFingerprint:function getFingerprint(tree){return tree.map(function(leafSet){var decoratorKey=leafSet.get("decoratorKey");var fingerprintString=decoratorKey!==null?decoratorKey+"."+(leafSet.get("end")-
leafSet.get("start")):"";return""+fingerprintString+"."+leafSet.get("leaves").size}).join(FINGERPRINT_DELIMITER)}};function generateLeaves(characters,offset){var leaves=[];var inlineStyles=characters.map(function(c){return c.getStyle()}).toList();findRangesImmutable(inlineStyles,areEqual,returnTrue,function(start,end){leaves.push(new LeafRange({start:start+offset,end:end+offset}))});return List(leaves)}function areEqual(a,b){return a===b}module.exports=BlockTree}
//# sourceMappingURL=module$node_modules$draft_js$lib$BlockTree.js.map
