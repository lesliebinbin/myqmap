{
"version":3,
"file":"module$node_modules$fbjs$lib$UnicodeBidiService.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA2CjIC,QAASA,gBAAe,CAACC,QAAD,CAAWC,WAAX,CAAwB,CAAE,GAAI,EAAED,QAAF,WAAsBC,YAAtB,CAAJ,CAA0C,KAAM,KAAIC,SAAJ,CAAc,mCAAd,CAAN,CAA5C,CAEhD,IAAIC,YAAcR,OAAA,CAAQ,0CAAR,CAClB,KAAIS,qBAAuBT,OAAA,CAAQ,mDAAR,CAE3B,KAAIU,UAAYV,OAAA,CAAQ,wCAAR,CAEhB,KAAIW;AAAqB,QAAS,EAAG,CAOnCA,QAASA,mBAAkB,CAACC,UAAD,CAAa,CACtCR,eAAA,CAAgB,IAAhB,CAAsBO,kBAAtB,CAEA,IAAI,CAACC,UAAL,CACEA,UAAA,CAAaH,oBAAAI,aAAA,EADf,KAGE,CAACJ,oBAAAK,SAAA,CAA8BF,UAA9B,CAAD,CAA6CG,aAAA,GAAyB,YAAzB,CAAwCL,SAAA,CAAU,KAAV,CAAiB,2DAAjB,CAAxC,CAAwHA,SAAA,CAAU,KAAV,CAArK,CAAwL,IAAK,EAE/L,KAAAM,YAAA,CAAmBJ,UACnB,KAAAK,MAAA,EATsC,CAoBxCN,kBAAAO,UAAAD,MAAA,CAAqCE,QAASF,MAAK,EAAG,CACpD,IAAAG,SAAA,CAAgB,IAAAJ,YADoC,CAatDL,mBAAAO,UAAAG,aAAA,CAA4CC,QAASD,aAAY,CAACE,GAAD,CAAM,CACrE,IAAAH,SAAA;AAAgBZ,WAAAa,aAAA,CAAyBE,GAAzB,CAA8B,IAAAH,SAA9B,CAChB,OAAO,KAAAA,SAF8D,CAKvE,OAAOT,mBA7C4B,CAAZ,EAgDzBV,OAAAC,QAAA,CAAiBS,kBAlGgH;",
"sources":["node_modules/fbjs/lib/UnicodeBidiService.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fbjs$lib$UnicodeBidiService\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/**\n * Stateful API for text direction detection\n *\n * This class can be used in applications where you need to detect the\n * direction of a sequence of text blocks, where each direction shall be used\n * as the fallback direction for the next one.\n *\n * NOTE: A default direction, if not provided, is set based on the global\n *       direction, as defined by `UnicodeBidiDirection`.\n *\n * == Example ==\n * ```\n * var UnicodeBidiService = require('UnicodeBidiService');\n *\n * var bidiService = new UnicodeBidiService();\n *\n * ...\n *\n * bidiService.reset();\n * for (var para in paragraphs) {\n *   var dir = bidiService.getDirection(para);\n *   ...\n * }\n * ```\n *\n * Part of our implementation of Unicode Bidirectional Algorithm (UBA)\n * Unicode Standard Annex #9 (UAX9)\n * http://www.unicode.org/reports/tr9/\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UnicodeBidi = require('./UnicodeBidi');\nvar UnicodeBidiDirection = require('./UnicodeBidiDirection');\n\nvar invariant = require('./invariant');\n\nvar UnicodeBidiService = function () {\n\n  /**\n   * Stateful class for paragraph direction detection\n   *\n   * @param defaultDir  Default direction of the service\n   */\n  function UnicodeBidiService(defaultDir) {\n    _classCallCheck(this, UnicodeBidiService);\n\n    if (!defaultDir) {\n      defaultDir = UnicodeBidiDirection.getGlobalDir();\n    } else {\n      !UnicodeBidiDirection.isStrong(defaultDir) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Default direction must be a strong direction (LTR or RTL)') : invariant(false) : void 0;\n    }\n    this._defaultDir = defaultDir;\n    this.reset();\n  }\n\n  /**\n   * Reset the internal state\n   *\n   * Instead of creating a new instance, you can just reset() your instance\n   * everytime you start a new loop.\n   */\n\n\n  UnicodeBidiService.prototype.reset = function reset() {\n    this._lastDir = this._defaultDir;\n  };\n\n  /**\n   * Returns the direction of a block of text, and remembers it as the\n   * fall-back direction for the next paragraph.\n   *\n   * @param str  A text block, e.g. paragraph, table cell, tag\n   * @return     The resolved direction\n   */\n\n\n  UnicodeBidiService.prototype.getDirection = function getDirection(str) {\n    this._lastDir = UnicodeBidi.getDirection(str, this._lastDir);\n    return this._lastDir;\n  };\n\n  return UnicodeBidiService;\n}();\n\nmodule.exports = UnicodeBidiService;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_classCallCheck","instance","Constructor","TypeError","UnicodeBidi","UnicodeBidiDirection","invariant","UnicodeBidiService","defaultDir","getGlobalDir","isStrong","NODE_ENV","_defaultDir","reset","prototype","UnicodeBidiService.prototype.reset","_lastDir","getDirection","UnicodeBidiService.prototype.getDirection","str"]
}
