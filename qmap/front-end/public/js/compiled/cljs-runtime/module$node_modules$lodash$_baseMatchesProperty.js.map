{
"version":3,
"file":"module$node_modules$lodash$_baseMatchesProperty.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,iDAAf,CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACjI,IAAIC,YAAcJ,OAAA,CAAQ,yCAAR,CAAlB,CACIK,IAAML,OAAA,CAAQ,gCAAR,CADV,CAEIM,MAAQN,OAAA,CAAQ,kCAAR,CAFZ,CAGIO,MAAQP,OAAA,CAAQ,mCAAR,CAHZ,CAIIQ,mBAAqBR,OAAA,CAAQ,gDAAR,CAJzB,CAKIS,wBAA0BT,OAAA,CAAQ,qDAAR,CAL9B;AAMIU,MAAQV,OAAA,CAAQ,mCAAR,CAGZ,KAAIW,qBAAuB,CAA3B,CACIC,uBAAyB,CAU7BC,SAASA,oBAAmB,CAACC,IAAD,CAAOC,QAAP,CAAiB,CAC3C,GAAIR,KAAA,CAAMO,IAAN,CAAJ,EAAmBN,kBAAA,CAAmBO,QAAnB,CAAnB,CACE,MAAON,wBAAA,CAAwBC,KAAA,CAAMI,IAAN,CAAxB,CAAqCC,QAArC,CAET,OAAO,SAAQ,CAACC,MAAD,CAAS,CACtB,IAAIC,SAAWZ,GAAA,CAAIW,MAAJ,CAAYF,IAAZ,CACf,OAAQG,SAAD,GAAcC,SAAd,EAA2BD,QAA3B,GAAwCF,QAAxC,CACHT,KAAA,CAAMU,MAAN,CAAcF,IAAd,CADG,CAEHV,WAAA,CAAYW,QAAZ,CAAsBE,QAAtB,CAAgCN,oBAAhC,CAAuDC,sBAAvD,CAJkB,CAJmB,CAY7CX,MAAAC,QAAA,CAAiBW,mBAjCgH;",
"sources":["node_modules/lodash/_baseMatchesProperty.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$_baseMatchesProperty\"] = function(global,process,require,module,exports,shadow$shims) {\nvar baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","baseIsEqual","get","hasIn","isKey","isStrictComparable","matchesStrictComparable","toKey","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","undefined"]
}
