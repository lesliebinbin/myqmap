{
"version":3,
"file":"module$node_modules$draft_js$lib$SecondaryClipboard.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBrI,IAAIC,cAAgBJ,OAAA,CAAQ,gDAAR,CACpB,KAAIK,YAAcL,OAAA,CAAQ,8CAAR,CAElB,KAAIM,wBAA0BN,OAAA,CAAQ,0DAAR,CAC9B,KAAIO,WAAaP,OAAA,CAAQ,yCAAR,CAEjB,KAAIQ,UAAY,IAMhB,KAAIC,mBAAqB,CACvBC,IAAKA,QAASA,IAAG,CAACC,WAAD,CAAc,CAC7B,IAAIC;AAAUD,WAAAE,kBAAA,EACd,KAAIC,UAAYH,WAAAI,aAAA,EAChB,KAAIC,YAAc,IAElB,IAAIF,SAAAG,YAAA,EAAJ,CAA6B,CAC3B,IAAIC,UAAYJ,SAAAK,aAAA,EAChB,KAAIC,SAAWR,OAAAS,eAAA,CAAuBH,SAAvB,CAAAI,UAAA,EAEf,IAAIF,QAAJ,GAAiBN,SAAAS,gBAAA,EAAjB,CACE,MAAOZ,YAGTK,YAAA,CAAcF,SAAAU,IAAA,CAAc,aAAd,CAA6BJ,QAA7B,CARa,CAA7B,IAUEJ,YAAA,CAAcF,SAGhBE,YAAA,CAAcT,UAAA,CAAWS,WAAX,CACdR,UAAA,CAAYF,uBAAA,CAAwBM,OAAxB,CAAiCI,WAAjC,CAEZ,KAAIS,aAAerB,aAAAsB,YAAA,CAA0Bd,OAA1B,CAAmCI,WAAnC;AAAgD,SAAhD,CAEnB,IAAIS,YAAJ,GAAqBb,OAArB,CACE,MAAOD,YAGT,OAAON,YAAAsB,KAAA,CAAiBhB,WAAjB,CAA8Bc,YAA9B,CAA4C,cAA5C,CA3BsB,CADR,CA+BvBG,MAAOA,QAASA,MAAK,CAACjB,WAAD,CAAc,CACjC,GAAI,CAACH,SAAL,CACE,MAAOG,YAGT,KAAIkB,WAAazB,aAAA0B,oBAAA,CAAkCnB,WAAAE,kBAAA,EAAlC,CAAmEF,WAAAI,aAAA,EAAnE,CAA+FP,SAA/F,CAEjB,OAAOH,YAAAsB,KAAA,CAAiBhB,WAAjB,CAA8BkB,UAA9B,CAA0C,iBAA1C,CAP0B,CA/BZ,CA0CzB5B,OAAAC,QAAA,CAAiBO,kBAtEoH;",
"sources":["node_modules/draft-js/lib/SecondaryClipboard.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$SecondaryClipboard\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule SecondaryClipboard\n * @format\n * \n */\n\n'use strict';\n\nvar DraftModifier = require('./DraftModifier');\nvar EditorState = require('./EditorState');\n\nvar getContentStateFragment = require('./getContentStateFragment');\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nvar clipboard = null;\n\n/**\n * Some systems offer a \"secondary\" clipboard to allow quick internal cut\n * and paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).\n */\nvar SecondaryClipboard = {\n  cut: function cut(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var targetRange = null;\n\n    if (selection.isCollapsed()) {\n      var anchorKey = selection.getAnchorKey();\n      var blockEnd = content.getBlockForKey(anchorKey).getLength();\n\n      if (blockEnd === selection.getAnchorOffset()) {\n        return editorState;\n      }\n\n      targetRange = selection.set('focusOffset', blockEnd);\n    } else {\n      targetRange = selection;\n    }\n\n    targetRange = nullthrows(targetRange);\n    clipboard = getContentStateFragment(content, targetRange);\n\n    var afterRemoval = DraftModifier.removeRange(content, targetRange, 'forward');\n\n    if (afterRemoval === content) {\n      return editorState;\n    }\n\n    return EditorState.push(editorState, afterRemoval, 'remove-range');\n  },\n\n  paste: function paste(editorState) {\n    if (!clipboard) {\n      return editorState;\n    }\n\n    var newContent = DraftModifier.replaceWithFragment(editorState.getCurrentContent(), editorState.getSelection(), clipboard);\n\n    return EditorState.push(editorState, newContent, 'insert-fragment');\n  }\n};\n\nmodule.exports = SecondaryClipboard;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","DraftModifier","EditorState","getContentStateFragment","nullthrows","clipboard","SecondaryClipboard","cut","editorState","content","getCurrentContent","selection","getSelection","targetRange","isCollapsed","anchorKey","getAnchorKey","blockEnd","getBlockForKey","getLength","getAnchorOffset","set","afterRemoval","removeRange","push","paste","newContent","replaceWithFragment"]
}
