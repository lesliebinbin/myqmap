{
"version":3,
"file":"module$node_modules$json2mq$index.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,mCAAf,CAAA,CAAsD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACnH,IAAIC,aAAeJ,OAAA,CAAQ,iDAAR,CAEnB,KAAIK,YAAcA,QAAS,CAACC,OAAD,CAAU,CACnC,IAAIC,GAAK,iBACT,OAAOA,GAAAC,KAAA,CAAQF,OAAR,CAF4B,CAKrC,KAAIG,OAASA,QAAS,CAACC,GAAD,CAAM,CAC1B,IAAIC,GAAK,EACT,KAAIC,SAAWC,MAAAC,KAAA,CAAYJ,GAAZ,CACfE,SAAAG,QAAA,CAAiB,QAAS,CAACT,OAAD,CAAUU,KAAV,CAAiB,CACzC,IAAIC,MAAQP,GAAA,CAAIJ,OAAJ,CACZA,QAAA,CAAUF,YAAA,CAAaE,OAAb,CAEV,IAAID,WAAA,CAAYC,OAAZ,CAAJ,EAA4B,MAAOW,MAAnC,GAA6C,QAA7C,CACEA,KAAA,CAAQA,KAAR,CAAgB,IAElB,IAAIA,KAAJ;AAAc,IAAd,CACEN,EAAA,EAAML,OADR,KAEO,IAAIW,KAAJ,GAAc,KAAd,CACLN,EAAA,EAAM,MAAN,CAAeL,OADV,KAGLK,GAAA,EAAM,GAAN,CAAYL,OAAZ,CAAsB,IAAtB,CAA6BW,KAA7B,CAAqC,GAEvC,IAAID,KAAJ,CAAYJ,QAAAM,OAAZ,CAA4B,CAA5B,CACEP,EAAA,EAAM,OAfiC,CAA3C,CAkBA,OAAOA,GArBmB,CAwB5B,KAAIQ,QAAUA,QAAS,CAACC,KAAD,CAAQ,CAC7B,IAAIT,GAAK,EACT,IAAI,MAAOS,MAAX,GAAqB,QAArB,CACE,MAAOA,MAGT,IAAIA,KAAJ,WAAqBC,MAArB,CAA4B,CAC1BD,KAAAL,QAAA,CAAc,QAAS,CAACO,CAAD,CAAIN,KAAJ,CAAW,CAChCL,EAAA,EAAMF,MAAA,CAAOa,CAAP,CACN,IAAIN,KAAJ,CAAYI,KAAAF,OAAZ,CAAyB,CAAzB,CACEP,EAAA,EAAM,IAHwB,CAAlC,CAMA,OAAOA,GAPmB,CAU5B,MAAOF,OAAA,CAAOW,KAAP,CAhBsB,CAmB/BnB,OAAAC,QAAA,CAAiBiB,OAnDkG;",
"sources":["node_modules/json2mq/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$json2mq$index\"] = function(global,process,require,module,exports,shadow$shims) {\nvar camel2hyphen = require('string-convert/camel2hyphen');\n\nvar isDimension = function (feature) {\n  var re = /[height|width]$/;\n  return re.test(feature);\n};\n\nvar obj2mq = function (obj) {\n  var mq = '';\n  var features = Object.keys(obj);\n  features.forEach(function (feature, index) {\n    var value = obj[feature];\n    feature = camel2hyphen(feature);\n    // Add px to dimension features\n    if (isDimension(feature) && typeof value === 'number') {\n      value = value + 'px';\n    }\n    if (value === true) {\n      mq += feature;\n    } else if (value === false) {\n      mq += 'not ' + feature;\n    } else {\n      mq += '(' + feature + ': ' + value + ')';\n    }\n    if (index < features.length-1) {\n      mq += ' and '\n    }\n  });\n  return mq;\n};\n\nvar json2mq = function (query) {\n  var mq = '';\n  if (typeof query === 'string') {\n    return query;\n  }\n  // Handling array of media queries\n  if (query instanceof Array) {\n    query.forEach(function (q, index) {\n      mq += obj2mq(q);\n      if (index < query.length-1) {\n        mq += ', '\n      }\n    });\n    return mq;\n  }\n  // Handling single media query\n  return obj2mq(query);\n};\n\nmodule.exports = json2mq;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","camel2hyphen","isDimension","feature","re","test","obj2mq","obj","mq","features","Object","keys","forEach","index","value","length","json2mq","query","Array","q"]
}
