{
"version":3,
"file":"module$node_modules$rc_tree$lib$util.js",
"lineCount":17,
"mappings":"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",
"sources":["node_modules/rc-tree/lib/util.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_tree$lib$util\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\n\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\n\nexports.warnOnlyTreeNode = warnOnlyTreeNode;\nexports.arrDel = arrDel;\nexports.arrAdd = arrAdd;\nexports.posToArr = posToArr;\nexports.getPosition = getPosition;\nexports.isTreeNode = isTreeNode;\nexports.getNodeChildren = getNodeChildren;\nexports.isCheckDisabled = isCheckDisabled;\nexports.traverseTreeNodes = traverseTreeNodes;\nexports.mapChildren = mapChildren;\nexports.getDragNodesKeys = getDragNodesKeys;\nexports.calcDropPosition = calcDropPosition;\nexports.calcSelectedKeys = calcSelectedKeys;\nexports.convertDataToTree = convertDataToTree;\nexports.convertTreeToEntities = convertTreeToEntities;\nexports.parseCheckedKeys = parseCheckedKeys;\nexports.conductCheck = conductCheck;\nexports.conductExpandParent = conductExpandParent;\nexports.getDataAndAria = getDataAndAria;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _toArray = require('rc-util/lib/Children/toArray');\n\nvar _toArray2 = _interopRequireDefault(_toArray);\n\nvar _warning = require('warning');\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _TreeNode = require('./TreeNode');\n\nvar _TreeNode2 = _interopRequireDefault(_TreeNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar DRAG_SIDE_RANGE = 0.25;\nvar DRAG_MIN_GAP = 2;\n\nvar onlyTreeNodeWarned = false;\n\nfunction warnOnlyTreeNode() {\n  if (onlyTreeNodeWarned) return;\n\n  onlyTreeNodeWarned = true;\n  (0, _warning2['default'])(false, 'Tree only accept TreeNode as children.');\n}\n\nfunction arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n  return clone;\n}\n\nfunction arrAdd(list, value) {\n  var clone = list.slice();\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n  return clone;\n}\n\nfunction posToArr(pos) {\n  return pos.split('-');\n}\n\nfunction getPosition(level, index) {\n  return level + '-' + index;\n}\n\nfunction isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\n\nfunction getNodeChildren(children) {\n  return (0, _toArray2['default'])(children).filter(isTreeNode);\n}\n\nfunction isCheckDisabled(node) {\n  var _ref = node.props || {},\n      disabled = _ref.disabled,\n      disableCheckbox = _ref.disableCheckbox;\n\n  return !!(disabled || disableCheckbox);\n}\n\nfunction traverseTreeNodes(treeNodes, callback) {\n  function processNode(node, index, parent) {\n    var children = node ? node.props.children : treeNodes;\n    var pos = node ? getPosition(parent.pos, index) : 0;\n\n    // Filter children\n    var childList = getNodeChildren(children);\n\n    // Process node if is not root\n    if (node) {\n      var data = {\n        node: node,\n        index: index,\n        pos: pos,\n        key: node.key || pos,\n        parentPos: parent.node ? parent.pos : null\n      };\n\n      callback(data);\n    }\n\n    // Process children node\n    _react.Children.forEach(childList, function (subNode, subIndex) {\n      processNode(subNode, subIndex, { node: node, pos: pos });\n    });\n  }\n\n  processNode(null);\n}\n\n/**\n * Use `rc-util` `toArray` to get the children list which keeps the key.\n * And return single node if children is only one(This can avoid `key` missing check).\n */\nfunction mapChildren(children, func) {\n  var list = (0, _toArray2['default'])(children).map(func);\n  if (list.length === 1) {\n    return list[0];\n  }\n  return list;\n}\n\nfunction getDragNodesKeys(treeNodes, node) {\n  var _node$props = node.props,\n      eventKey = _node$props.eventKey,\n      pos = _node$props.pos;\n\n  var dragNodesKeys = [];\n\n  traverseTreeNodes(treeNodes, function (_ref2) {\n    var key = _ref2.key;\n\n    dragNodesKeys.push(key);\n  });\n  dragNodesKeys.push(eventKey || pos);\n  return dragNodesKeys;\n}\n\n// Only used when drag, not affect SSR.\nfunction calcDropPosition(event, treeNode) {\n  var clientY = event.clientY;\n\n  var _treeNode$selectHandl = treeNode.selectHandle.getBoundingClientRect(),\n      top = _treeNode$selectHandl.top,\n      bottom = _treeNode$selectHandl.bottom,\n      height = _treeNode$selectHandl.height;\n\n  var des = Math.max(height * DRAG_SIDE_RANGE, DRAG_MIN_GAP);\n\n  if (clientY <= top + des) {\n    return -1;\n  } else if (clientY >= bottom - des) {\n    return 1;\n  }\n\n  return 0;\n}\n\n/**\n * Return selectedKeys according with multiple prop\n * @param selectedKeys\n * @param props\n * @returns [string]\n */\nfunction calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n  return selectedKeys;\n}\n\n/**\n * Since React internal will convert key to string,\n * we need do this to avoid `checkStrictly` use number match\n */\nfunction keyListToString(keyList) {\n  if (!keyList) return keyList;\n  return keyList.map(function (key) {\n    return String(key);\n  });\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\nfunction convertDataToTree(treeData, processer) {\n  if (!treeData) return [];\n\n  var _ref3 = processer || {},\n      _ref3$processProps = _ref3.processProps,\n      processProps = _ref3$processProps === undefined ? internalProcessProps : _ref3$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref4) {\n    var children = _ref4.children,\n        props = (0, _objectWithoutProperties3['default'])(_ref4, ['children']);\n\n    var childrenNodes = convertDataToTree(children, processer);\n\n    return _react2['default'].createElement(\n      _TreeNode2['default'],\n      processProps(props),\n      childrenNodes\n    );\n  });\n}\n\n// TODO: ========================= NEW LOGIC =========================\n/**\n * Calculate treeNodes entities. `processTreeEntity` is used for `rc-tree-select`\n * @param treeNodes\n * @param processTreeEntity  User can customize the entity\n */\nfunction convertTreeToEntities(treeNodes) {\n  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      initWrapper = _ref5.initWrapper,\n      processEntity = _ref5.processEntity,\n      onProcessFinished = _ref5.onProcessFinished;\n\n  var posEntities = {};\n  var keyEntities = {};\n  var wrapper = {\n    posEntities: posEntities,\n    keyEntities: keyEntities\n  };\n\n  if (initWrapper) {\n    wrapper = initWrapper(wrapper) || wrapper;\n  }\n\n  traverseTreeNodes(treeNodes, function (item) {\n    var node = item.node,\n        index = item.index,\n        pos = item.pos,\n        key = item.key,\n        parentPos = item.parentPos;\n\n    var entity = { node: node, index: index, key: key, pos: pos };\n\n    posEntities[pos] = entity;\n    keyEntities[key] = entity;\n\n    // Fill children\n    entity.parent = posEntities[parentPos];\n    if (entity.parent) {\n      entity.parent.children = entity.parent.children || [];\n      entity.parent.children.push(entity);\n    }\n\n    if (processEntity) {\n      processEntity(entity, wrapper);\n    }\n  });\n\n  if (onProcessFinished) {\n    onProcessFinished(wrapper);\n  }\n\n  return wrapper;\n}\n\n/**\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\n */\nfunction parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  }\n\n  // Convert keys to object format\n  var keyProps = void 0;\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (typeof keys === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    (0, _warning2['default'])(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  keyProps.checkedKeys = keyListToString(keyProps.checkedKeys);\n  keyProps.halfCheckedKeys = keyListToString(keyProps.halfCheckedKeys);\n\n  return keyProps;\n}\n\n/**\n * Conduct check state by the keyList. It will conduct up & from the provided key.\n * If the conduct path reach the disabled or already checked / unchecked node will stop conduct.\n * @param keyList       list of keys\n * @param isCheck       is check the node or not\n * @param keyEntities   parsed by `convertTreeToEntities` function in Tree\n * @param checkStatus   Can pass current checked status for process (usually for uncheck operation)\n * @returns {{checkedKeys: [], halfCheckedKeys: []}}\n */\nfunction conductCheck(keyList, isCheck, keyEntities) {\n  var checkStatus = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var checkedKeys = {};\n  var halfCheckedKeys = {}; // Record the key has some child checked (include child half checked)\n\n  (checkStatus.checkedKeys || []).forEach(function (key) {\n    checkedKeys[key] = true;\n  });\n\n  (checkStatus.halfCheckedKeys || []).forEach(function (key) {\n    halfCheckedKeys[key] = true;\n  });\n\n  // Conduct up\n  function conductUp(key) {\n    if (checkedKeys[key] === isCheck) return;\n\n    var entity = keyEntities[key];\n    if (!entity) return;\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    // Check child node checked status\n    var everyChildChecked = true;\n    var someChildChecked = false; // Child checked or half checked\n\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (_ref6) {\n      var childKey = _ref6.key;\n\n      var childChecked = checkedKeys[childKey];\n      var childHalfChecked = halfCheckedKeys[childKey];\n\n      if (childChecked || childHalfChecked) someChildChecked = true;\n      if (!childChecked) everyChildChecked = false;\n    });\n\n    // Update checked status\n    if (isCheck) {\n      checkedKeys[key] = everyChildChecked;\n    } else {\n      checkedKeys[key] = false;\n    }\n    halfCheckedKeys[key] = someChildChecked;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  // Conduct down\n  function conductDown(key) {\n    if (checkedKeys[key] === isCheck) return;\n\n    var entity = keyEntities[key];\n    if (!entity) return;\n\n    var children = entity.children,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    checkedKeys[key] = isCheck;\n\n    (children || []).forEach(function (child) {\n      conductDown(child.key);\n    });\n  }\n\n  function conduct(key) {\n    var entity = keyEntities[key];\n\n    if (!entity) {\n      (0, _warning2['default'])(false, '\\'' + key + '\\' does not exist in the tree.');\n      return;\n    }\n\n    var children = entity.children,\n        parent = entity.parent,\n        node = entity.node;\n\n    checkedKeys[key] = isCheck;\n\n    if (isCheckDisabled(node)) return;\n\n    // Conduct down\n    (children || []).filter(function (child) {\n      return !isCheckDisabled(child.node);\n    }).forEach(function (child) {\n      conductDown(child.key);\n    });\n\n    // Conduct up\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conduct(key);\n  });\n\n  var checkedKeyList = [];\n  var halfCheckedKeyList = [];\n\n  // Fill checked list\n  Object.keys(checkedKeys).forEach(function (key) {\n    if (checkedKeys[key]) {\n      checkedKeyList.push(key);\n    }\n  });\n\n  // Fill half checked list\n  Object.keys(halfCheckedKeys).forEach(function (key) {\n    if (!checkedKeys[key] && halfCheckedKeys[key]) {\n      halfCheckedKeyList.push(key);\n    }\n  });\n\n  return {\n    checkedKeys: checkedKeyList,\n    halfCheckedKeys: halfCheckedKeyList\n  };\n}\n\n/**\n * If user use `autoExpandParent` we should get the list of parent node\n * @param keyList\n * @param keyEntities\n */\nfunction conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = {};\n\n  function conductUp(key) {\n    if (expandedKeys[key]) return;\n\n    var entity = keyEntities[key];\n    if (!entity) return;\n\n    expandedKeys[key] = true;\n\n    var parent = entity.parent,\n        node = entity.node;\n\n\n    if (isCheckDisabled(node)) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n\n  return Object.keys(expandedKeys);\n}\n\n/**\n * Returns only the data- and aria- key/value pairs\n * @param {object} props \n */\nfunction getDataAndAria(props) {\n  return Object.keys(props).reduce(function (prev, key) {\n    if (key.substr(0, 5) === 'data-' || key.substr(0, 5) === 'aria-') {\n      prev[key] = props[key];\n    }\n    return prev;\n  }, {});\n}\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","_objectWithoutProperties2","_objectWithoutProperties3","_interopRequireDefault","warnOnlyTreeNode","arrDel","arrAdd","posToArr","getPosition","isTreeNode","getNodeChildren","isCheckDisabled","traverseTreeNodes","mapChildren","getDragNodesKeys","calcDropPosition","calcSelectedKeys","convertDataToTree","convertTreeToEntities","parseCheckedKeys","conductCheck","conductExpandParent","getDataAndAria","_react","_react2","_toArray","_toArray2","_warning","_warning2","_TreeNode","_TreeNode2","obj","__esModule","DRAG_SIDE_RANGE","DRAG_MIN_GAP","onlyTreeNodeWarned","list","clone","slice","index","indexOf","splice","push","pos","split","level","node","type","children","filter","_ref","props","disabled","disableCheckbox","treeNodes","callback","processNode","parent","childList","data","key","parentPos","Children","forEach","subNode","subIndex","func","map","length","_node$props","eventKey","dragNodesKeys","_ref2","event","treeNode","clientY","_treeNode$selectHandl","selectHandle","getBoundingClientRect","top","bottom","height","des","Math","max","selectedKeys","undefined","multiple","keyListToString","keyList","String","internalProcessProps","treeData","processer","_ref3","_ref3$processProps","processProps","Array","isArray","_ref4","childrenNodes","createElement","_ref5","arguments","initWrapper","processEntity","onProcessFinished","posEntities","keyEntities","wrapper","item","entity","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","isCheck","checkStatus","conductUp","everyChildChecked","someChildChecked","child","_ref6","childKey","childChecked","childHalfChecked","conductDown","conduct","checkedKeyList","halfCheckedKeyList","expandedKeys","reduce","prev","substr"]
}
