{
"version":3,
"file":"module$node_modules$draft_js$lib$editOnBlur.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,6CAAf,CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB7H,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAElB,KAAIK,aAAeL,OAAA,CAAQ,2CAAR,CACnB,KAAIM,iBAAmBN,OAAA,CAAQ,+CAAR,CAEvBO,SAASA,WAAU,CAACC,MAAD,CAASC,CAAT,CAAY,CAS7B,GAAIH,gBAAA,EAAJ,GAA2BI,QAAAC,KAA3B,CAA0C,CACxC,IAAIC,WAAad,MAAAe,aAAA,EACjB,KAAIC,WAAaN,MAAAA,OACjB,IAAII,UAAAG,WAAJ;AAA8B,CAA9B,EAAmCV,YAAA,CAAaS,UAAb,CAAyBF,UAAAI,WAAzB,CAAnC,EAAsFX,YAAA,CAAaS,UAAb,CAAyBF,UAAAK,UAAzB,CAAtF,CACEL,UAAAM,gBAAA,EAJsC,CAQ1C,IAAIC,YAAcX,MAAAY,mBAClB,KAAIC,iBAAmBF,WAAAN,aAAA,EACvB,IAAI,CAACQ,gBAAAC,YAAA,EAAL,CACE,MAGF,KAAIC,UAAYF,gBAAAG,IAAA,CAAqB,UAArB,CAAiC,KAAjC,CAChBhB,OAAAiB,MAAAC,OAAA,EAAuBlB,MAAAiB,MAAAC,OAAA,CAAoBjB,CAApB,CACvBD,OAAAmB,OAAA,CAAcvB,WAAAwB,gBAAA,CAA4BT,WAA5B,CAAyCI,SAAzC,CAAd,CAzB6B,CA4B/BtB,MAAAC,QAAA,CAAiBK,UAjD4G;",
"sources":["node_modules/draft-js/lib/editOnBlur.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$editOnBlur\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnBlur\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\n\nfunction editOnBlur(editor, e) {\n  // In a contentEditable element, when you select a range and then click\n  // another active element, this does trigger a `blur` event but will not\n  // remove the DOM selection from the contenteditable.\n  // This is consistent across all browsers, but we prefer that the editor\n  // behave like a textarea, where a `blur` event clears the DOM selection.\n  // We therefore force the issue to be certain, checking whether the active\n  // element is `body` to force it when blurring occurs within the window (as\n  // opposed to clicking to another tab or window).\n  if (getActiveElement() === document.body) {\n    var _selection = global.getSelection();\n    var editorNode = editor.editor;\n    if (_selection.rangeCount === 1 && containsNode(editorNode, _selection.anchorNode) && containsNode(editorNode, _selection.focusNode)) {\n      _selection.removeAllRanges();\n    }\n  }\n\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n  if (!currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', false);\n  editor.props.onBlur && editor.props.onBlur(e);\n  editor.update(EditorState.acceptSelection(editorState, selection));\n}\n\nmodule.exports = editOnBlur;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","EditorState","containsNode","getActiveElement","editOnBlur","editor","e","document","body","_selection","getSelection","editorNode","rangeCount","anchorNode","focusNode","removeAllRanges","editorState","_latestEditorState","currentSelection","getHasFocus","selection","set","props","onBlur","update","acceptSelection"]
}
