shadow$provide["module$node_modules$draft_js$lib$setDraftEditorSelection"]=function(global,process,require,module,exports,shadow$shims){var DraftJsDebugLogging=require("module$node_modules$draft_js$lib$DraftJsDebugLogging");var containsNode=require("module$node_modules$fbjs$lib$containsNode");var getActiveElement=require("module$node_modules$fbjs$lib$getActiveElement");var invariant=require("module$node_modules$fbjs$lib$invariant");function getAnonymizedDOM(node,getNodeLabels){if(!node)return"[empty]";
var anonymized=anonymizeTextWithin(node,getNodeLabels);if(anonymized.nodeType===Node.TEXT_NODE)return anonymized.textContent;!(anonymized instanceof Element)?"development"!=="production"?invariant(false,"Node must be an Element if it is not a text node."):invariant(false):void 0;return anonymized.outerHTML}function anonymizeTextWithin(node,getNodeLabels){var labels=getNodeLabels!==undefined?getNodeLabels(node):[];if(node.nodeType===Node.TEXT_NODE){var length=node.textContent.length;return document.createTextNode("[text "+
length+(labels.length?" | "+labels.join(", "):"")+"]")}var clone=node.cloneNode();if(clone.nodeType===1&&labels.length)clone.setAttribute("data-labels",labels.join(", "));var childNodes=node.childNodes;for(var ii=0;ii<childNodes.length;ii++)clone.appendChild(anonymizeTextWithin(childNodes[ii],getNodeLabels));return clone}function getAnonymizedEditorDOM(node,getNodeLabels){var currentNode=node;while(currentNode)if(currentNode instanceof Element&&currentNode.hasAttribute("contenteditable"))return getAnonymizedDOM(currentNode,
getNodeLabels);else currentNode=currentNode.parentNode;return"Could not find contentEditable parent of node"}function getNodeLength(node){return node.nodeValue===null?node.childNodes.length:node.nodeValue.length}function setDraftEditorSelection(selectionState,node,blockKey,nodeStart,nodeEnd){if(!containsNode(document.documentElement,node))return;var selection=global.getSelection();var anchorKey=selectionState.getAnchorKey();var anchorOffset=selectionState.getAnchorOffset();var focusKey=selectionState.getFocusKey();
var focusOffset=selectionState.getFocusOffset();var isBackward=selectionState.getIsBackward();if(!selection.extend&&isBackward){var tempKey=anchorKey;var tempOffset=anchorOffset;anchorKey=focusKey;anchorOffset=focusOffset;focusKey=tempKey;focusOffset=tempOffset;isBackward=false}var hasAnchor=anchorKey===blockKey&&nodeStart<=anchorOffset&&nodeEnd>=anchorOffset;var hasFocus=focusKey===blockKey&&nodeStart<=focusOffset&&nodeEnd>=focusOffset;if(hasAnchor&&hasFocus){selection.removeAllRanges();addPointToSelection(selection,
node,anchorOffset-nodeStart,selectionState);addFocusToSelection(selection,node,focusOffset-nodeStart,selectionState);return}if(!isBackward){if(hasAnchor){selection.removeAllRanges();addPointToSelection(selection,node,anchorOffset-nodeStart,selectionState)}if(hasFocus)addFocusToSelection(selection,node,focusOffset-nodeStart,selectionState)}else{if(hasFocus){selection.removeAllRanges();addPointToSelection(selection,node,focusOffset-nodeStart,selectionState)}if(hasAnchor){var storedFocusNode=selection.focusNode;
var storedFocusOffset=selection.focusOffset;selection.removeAllRanges();addPointToSelection(selection,node,anchorOffset-nodeStart,selectionState);addFocusToSelection(selection,storedFocusNode,storedFocusOffset,selectionState)}}}function addFocusToSelection(selection,node,offset,selectionState){var activeElement=getActiveElement();if(selection.extend&&containsNode(activeElement,node)){if(offset>getNodeLength(node))DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node),
extraParams:JSON.stringify({offset:offset}),selectionState:JSON.stringify(selectionState.toJS())});var nodeWasFocus=node===selection.focusNode;try{selection.extend(node,offset)}catch(e){DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node,function(n){var labels=[];if(n===activeElement)labels.push("active element");if(n===selection.anchorNode)labels.push("selection anchor node");if(n===selection.focusNode)labels.push("selection focus node");return labels}),extraParams:JSON.stringify({activeElementName:activeElement?
activeElement.nodeName:null,nodeIsFocus:node===selection.focusNode,nodeWasFocus:nodeWasFocus,selectionRangeCount:selection.rangeCount,selectionAnchorNodeName:selection.anchorNode?selection.anchorNode.nodeName:null,selectionAnchorOffset:selection.anchorOffset,selectionFocusNodeName:selection.focusNode?selection.focusNode.nodeName:null,selectionFocusOffset:selection.focusOffset,message:e?""+e:null,offset:offset},null,2),selectionState:JSON.stringify(selectionState.toJS(),null,2)});throw e;}}else{var range=
selection.getRangeAt(0);range.setEnd(node,offset);selection.addRange(range.cloneRange())}}function addPointToSelection(selection,node,offset,selectionState){var range=document.createRange();if(offset>getNodeLength(node))DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node),extraParams:JSON.stringify({offset:offset}),selectionState:JSON.stringify(selectionState.toJS())});range.setStart(node,offset);selection.addRange(range)}module.exports=setDraftEditorSelection}
//# sourceMappingURL=module$node_modules$draft_js$lib$setDraftEditorSelection.js.map
