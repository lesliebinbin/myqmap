shadow$provide["module$node_modules$draft_js$lib$expandRangeToStartOfLine"]=function(global,process,require,module,exports,shadow$shims){var UnicodeUtils=require("module$node_modules$fbjs$lib$UnicodeUtils");var getRangeClientRects=require("module$node_modules$draft_js$lib$getRangeClientRects");var invariant=require("module$node_modules$fbjs$lib$invariant");function getLineHeightPx(element){var computed=getComputedStyle(element);var div=document.createElement("div");div.style.fontFamily=computed.fontFamily;
div.style.fontSize=computed.fontSize;div.style.fontStyle=computed.fontStyle;div.style.fontWeight=computed.fontWeight;div.style.lineHeight=computed.lineHeight;div.style.position="absolute";div.textContent="M";var documentBody=document.body;!documentBody?"development"!=="production"?invariant(false,"Missing document.body"):invariant(false):void 0;documentBody.appendChild(div);var rect=div.getBoundingClientRect();documentBody.removeChild(div);return rect.height}function areRectsOnOneLine(rects,lineHeight){var minTop=
Infinity;var minBottom=Infinity;var maxTop=-Infinity;var maxBottom=-Infinity;for(var ii=0;ii<rects.length;ii++){var rect=rects[ii];if(rect.width===0||rect.width===1)continue;minTop=Math.min(minTop,rect.top);minBottom=Math.min(minBottom,rect.bottom);maxTop=Math.max(maxTop,rect.top);maxBottom=Math.max(maxBottom,rect.bottom)}return maxTop<=minBottom&&maxTop-minTop<lineHeight&&maxBottom-minBottom<lineHeight}function getNodeLength(node){switch(node.nodeType){case Node.DOCUMENT_TYPE_NODE:return 0;case Node.TEXT_NODE:case Node.PROCESSING_INSTRUCTION_NODE:case Node.COMMENT_NODE:return node.length;
default:return node.childNodes.length}}function expandRangeToStartOfLine(range){!range.collapsed?"development"!=="production"?invariant(false,"expandRangeToStartOfLine: Provided range is not collapsed."):invariant(false):void 0;range=range.cloneRange();var containingElement=range.startContainer;if(containingElement.nodeType!==1)containingElement=containingElement.parentNode;var lineHeight=getLineHeightPx(containingElement);var bestContainer=range.endContainer;var bestOffset=range.endOffset;range.setStart(range.startContainer,
0);while(areRectsOnOneLine(getRangeClientRects(range),lineHeight)){bestContainer=range.startContainer;bestOffset=range.startOffset;!bestContainer.parentNode?"development"!=="production"?invariant(false,"Found unexpected detached subtree when traversing."):invariant(false):void 0;range.setStartBefore(bestContainer);if(bestContainer.nodeType===1&&getComputedStyle(bestContainer).display!=="inline")break}var currentContainer=bestContainer;var maxIndexToConsider=bestOffset-1;do{var nodeValue=currentContainer.nodeValue;
for(var ii=maxIndexToConsider;ii>=0;ii--){if(nodeValue!=null&&ii>0&&UnicodeUtils.isSurrogatePair(nodeValue,ii-1))continue;range.setStart(currentContainer,ii);if(areRectsOnOneLine(getRangeClientRects(range),lineHeight)){bestContainer=currentContainer;bestOffset=ii}else break}if(ii===-1||currentContainer.childNodes.length===0)break;currentContainer=currentContainer.childNodes[ii];maxIndexToConsider=getNodeLength(currentContainer)}while(true);range.setStart(bestContainer,bestOffset);return range}module.exports=
expandRangeToStartOfLine}
//# sourceMappingURL=module$node_modules$draft_js$lib$expandRangeToStartOfLine.js.map
