{
"version":3,
"file":"module$node_modules$draft_js$lib$DraftEntityInstance.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAiBtIC,QAASA,gBAAe,CAACC,QAAD,CAAWC,WAAX,CAAwB,CAAE,GAAI,EAAED,QAAF,WAAsBC,YAAtB,CAAJ,CAA0C,KAAM,KAAIC,SAAJ,CAAc,mCAAd,CAAN,CAA5C,CAEhDC,QAASA,2BAA0B,CAACC,IAAD,CAAOC,IAAP,CAAa,CAAE,GAAI,CAACD,IAAL,CAAa,KAAM,KAAIE,cAAJ,CAAmB,2DAAnB,CAAN,CAAyF,MAAOD,KAAA,GAAS,MAAOA,KAAhB,GAAyB,QAAzB,EAAqC,MAAOA,KAA5C,GAAqD,UAArD,EAAmEA,IAAnE,CAA0ED,IAAzL,CAEhDG,QAASA,UAAS,CAACC,QAAD;AAAWC,UAAX,CAAuB,CAAE,GAAI,MAAOA,WAAX,GAA0B,UAA1B,EAAwCA,UAAxC,GAAuD,IAAvD,CAA+D,KAAM,KAAIP,SAAJ,CAAc,0DAAd,CAA2E,MAAOO,WAAlF,CAAN,CAAuGD,QAAAE,UAAA,CAAqBC,MAAAC,OAAA,CAAcH,UAAd,EAA4BA,UAAAC,UAA5B,CAAkD,CAAEG,YAAa,CAAEC,MAAON,QAAT,CAAmBO,WAAY,KAA/B,CAAsCC,SAAU,IAAhD,CAAsDC,aAAc,IAApE,CAAf,CAAlD,CAAgJ,IAAIR,UAAJ,CAAgBE,MAAAO,eAAA,CAAwBP,MAAAO,eAAA,CAAsBV,QAAtB,CAAgCC,UAAhC,CAAxB,CAAsED,QAAAW,UAAtE,CAA2FV,UAAxb,CAEzC,IAAIW,UAAYzB,OAAA,CAAQ,8CAAR,CAEhB,KAAI0B,OAASD,SAAAC,OAGb;IAAIC,0BAA4BD,MAAA,CAAO,CACrCE,KAAM,OAD+B,CAErCC,WAAY,WAFyB,CAGrCC,KAAMd,MAH+B,CAAP,CAkBhC,KAAIe,oBAAsB,QAAS,CAACC,qBAAD,CAAwB,CACzDpB,SAAA,CAAUmB,mBAAV,CAA+BC,qBAA/B,CAEAD,SAASA,oBAAmB,EAAG,CAC7B3B,eAAA,CAAgB,IAAhB,CAAsB2B,mBAAtB,CAEA,OAAOvB,2BAAA,CAA2B,IAA3B,CAAiCwB,qBAAAC,MAAA,CAA4B,IAA5B,CAAkCC,SAAlC,CAAjC,CAHsB,CAM/BH,mBAAAhB,UAAAoB,QAAA,CAAwCC,QAASD,QAAO,EAAG,CACzD,MAAO,KAAAE,IAAA,CAAS,MAAT,CADkD,CAI3DN,oBAAAhB,UAAAuB,cAAA,CAA8CC,QAASD,cAAa,EAAG,CACrE,MAAO,KAAAD,IAAA,CAAS,YAAT,CAD8D,CAIvEN;mBAAAhB,UAAAyB,QAAA,CAAwCC,QAASD,QAAO,EAAG,CACzD,MAAO,KAAAH,IAAA,CAAS,MAAT,CADkD,CAI3D,OAAON,oBArBkD,CAAjC,CAsBxBJ,yBAtBwB,CAwB1B1B,OAAAC,QAAA,CAAiB6B,mBAtEqH;",
"sources":["node_modules/draft-js/lib/DraftEntityInstance.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$DraftEntityInstance\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntityInstance\n * @legacyServerCallableInstance\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Immutable = require('immutable');\n\nvar Record = Immutable.Record;\n\n\nvar DraftEntityInstanceRecord = Record({\n  type: 'TOKEN',\n  mutability: 'IMMUTABLE',\n  data: Object\n});\n\n/**\n * An instance of a document entity, consisting of a `type` and relevant\n * `data`, metadata about the entity.\n *\n * For instance, a \"link\" entity might provide a URI, and a \"mention\"\n * entity might provide the mentioned user's ID. These pieces of data\n * may be used when rendering the entity as part of a ContentBlock DOM\n * representation. For a link, the data would be used as an href for\n * the rendered anchor. For a mention, the ID could be used to retrieve\n * a hovercard.\n */\n\nvar DraftEntityInstance = function (_DraftEntityInstanceR) {\n  _inherits(DraftEntityInstance, _DraftEntityInstanceR);\n\n  function DraftEntityInstance() {\n    _classCallCheck(this, DraftEntityInstance);\n\n    return _possibleConstructorReturn(this, _DraftEntityInstanceR.apply(this, arguments));\n  }\n\n  DraftEntityInstance.prototype.getType = function getType() {\n    return this.get('type');\n  };\n\n  DraftEntityInstance.prototype.getMutability = function getMutability() {\n    return this.get('mutability');\n  };\n\n  DraftEntityInstance.prototype.getData = function getData() {\n    return this.get('data');\n  };\n\n  return DraftEntityInstance;\n}(DraftEntityInstanceRecord);\n\nmodule.exports = DraftEntityInstance;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","Immutable","Record","DraftEntityInstanceRecord","type","mutability","data","DraftEntityInstance","_DraftEntityInstanceR","apply","arguments","getType","DraftEntityInstance.prototype.getType","get","getMutability","DraftEntityInstance.prototype.getMutability","getData","DraftEntityInstance.prototype.getData"]
}
