{
"version":3,
"file":"module$node_modules$draft_js$lib$removeEntitiesAtEdges.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/draft-js/lib/removeEntitiesAtEdges.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$removeEntitiesAtEdges\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule removeEntitiesAtEdges\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar findRangesImmutable = require('./findRangesImmutable');\nvar invariant = require('fbjs/lib/invariant');\n\nfunction removeEntitiesAtEdges(contentState, selectionState) {\n  var blockMap = contentState.getBlockMap();\n  var entityMap = contentState.getEntityMap();\n\n  var updatedBlocks = {};\n\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var startBlock = blockMap.get(startKey);\n  var updatedStart = removeForBlock(entityMap, startBlock, startOffset);\n\n  if (updatedStart !== startBlock) {\n    updatedBlocks[startKey] = updatedStart;\n  }\n\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var endBlock = blockMap.get(endKey);\n  if (startKey === endKey) {\n    endBlock = updatedStart;\n  }\n\n  var updatedEnd = removeForBlock(entityMap, endBlock, endOffset);\n\n  if (updatedEnd !== endBlock) {\n    updatedBlocks[endKey] = updatedEnd;\n  }\n\n  if (!Object.keys(updatedBlocks).length) {\n    return contentState.set('selectionAfter', selectionState);\n  }\n\n  return contentState.merge({\n    blockMap: blockMap.merge(updatedBlocks),\n    selectionAfter: selectionState\n  });\n}\n\nfunction getRemovalRange(characters, key, offset) {\n  var removalRange;\n  findRangesImmutable(characters, function (a, b) {\n    return a.getEntity() === b.getEntity();\n  }, function (element) {\n    return element.getEntity() === key;\n  }, function (start, end) {\n    if (start <= offset && end >= offset) {\n      removalRange = { start: start, end: end };\n    }\n  });\n  !(typeof removalRange === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Removal range must exist within character list.') : invariant(false) : void 0;\n  return removalRange;\n}\n\nfunction removeForBlock(entityMap, block, offset) {\n  var chars = block.getCharacterList();\n  var charBefore = offset > 0 ? chars.get(offset - 1) : undefined;\n  var charAfter = offset < chars.count() ? chars.get(offset) : undefined;\n  var entityBeforeCursor = charBefore ? charBefore.getEntity() : undefined;\n  var entityAfterCursor = charAfter ? charAfter.getEntity() : undefined;\n\n  if (entityAfterCursor && entityAfterCursor === entityBeforeCursor) {\n    var entity = entityMap.__get(entityAfterCursor);\n    if (entity.getMutability() !== 'MUTABLE') {\n      var _getRemovalRange = getRemovalRange(chars, entityAfterCursor, offset),\n          start = _getRemovalRange.start,\n          end = _getRemovalRange.end;\n\n      var current;\n      while (start < end) {\n        current = chars.get(start);\n        chars = chars.set(start, CharacterMetadata.applyEntity(current, null));\n        start++;\n      }\n      return block.set('characterList', chars);\n    }\n  }\n\n  return block;\n}\n\nmodule.exports = removeEntitiesAtEdges;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","CharacterMetadata","findRangesImmutable","invariant","removeEntitiesAtEdges","contentState","selectionState","blockMap","getBlockMap","entityMap","getEntityMap","updatedBlocks","startKey","getStartKey","startOffset","getStartOffset","startBlock","get","updatedStart","removeForBlock","endKey","getEndKey","endOffset","getEndOffset","endBlock","updatedEnd","Object","keys","length","set","merge","selectionAfter","getRemovalRange","characters","key","offset","removalRange","a","b","getEntity","element","start","end","NODE_ENV","block","chars","getCharacterList","charBefore","undefined","charAfter","count","entityBeforeCursor","entityAfterCursor","entity","__get","getMutability","_getRemovalRange","current","applyEntity"]
}
