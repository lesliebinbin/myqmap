shadow$provide["module$node_modules$draft_js$lib$RichTextEditorUtil"]=function(global,process,require,module,exports,shadow$shims){var DraftModifier=require("module$node_modules$draft_js$lib$DraftModifier");var EditorState=require("module$node_modules$draft_js$lib$EditorState");var SelectionState=require("module$node_modules$draft_js$lib$SelectionState");var adjustBlockDepthForContentState=require("module$node_modules$draft_js$lib$adjustBlockDepthForContentState");var nullthrows=require("module$node_modules$fbjs$lib$nullthrows");
var RichTextEditorUtil={currentBlockContainsLink:function currentBlockContainsLink(editorState){var selection=editorState.getSelection();var contentState=editorState.getCurrentContent();var entityMap=contentState.getEntityMap();return contentState.getBlockForKey(selection.getAnchorKey()).getCharacterList().slice(selection.getStartOffset(),selection.getEndOffset()).some(function(v){var entity=v.getEntity();return!!entity&&entityMap.__get(entity).getType()==="LINK"})},getCurrentBlockType:function getCurrentBlockType(editorState){var selection=
editorState.getSelection();return editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType()},getDataObjectForLinkURL:function getDataObjectForLinkURL(uri){return{url:uri.toString()}},handleKeyCommand:function handleKeyCommand(editorState,command){switch(command){case "bold":return RichTextEditorUtil.toggleInlineStyle(editorState,"BOLD");case "italic":return RichTextEditorUtil.toggleInlineStyle(editorState,"ITALIC");case "underline":return RichTextEditorUtil.toggleInlineStyle(editorState,
"UNDERLINE");case "code":return RichTextEditorUtil.toggleCode(editorState);case "backspace":case "backspace-word":case "backspace-to-start-of-line":return RichTextEditorUtil.onBackspace(editorState);case "delete":case "delete-word":case "delete-to-end-of-block":return RichTextEditorUtil.onDelete(editorState);default:return null}},insertSoftNewline:function insertSoftNewline(editorState){var contentState=DraftModifier.insertText(editorState.getCurrentContent(),editorState.getSelection(),"\n",editorState.getCurrentInlineStyle(),
null);var newEditorState=EditorState.push(editorState,contentState,"insert-characters");return EditorState.forceSelection(newEditorState,contentState.getSelectionAfter())},onBackspace:function onBackspace(editorState){var selection=editorState.getSelection();if(!selection.isCollapsed()||selection.getAnchorOffset()||selection.getFocusOffset())return null;var content=editorState.getCurrentContent();var startKey=selection.getStartKey();var blockBefore=content.getBlockBefore(startKey);if(blockBefore&&
blockBefore.getType()==="atomic"){var blockMap=content.getBlockMap()["delete"](blockBefore.getKey());var withoutAtomicBlock=content.merge({blockMap:blockMap,selectionAfter:selection});if(withoutAtomicBlock!==content)return EditorState.push(editorState,withoutAtomicBlock,"remove-range")}var withoutBlockStyle=RichTextEditorUtil.tryToRemoveBlockStyle(editorState);if(withoutBlockStyle)return EditorState.push(editorState,withoutBlockStyle,"change-block-type");return null},onDelete:function onDelete(editorState){var selection=
editorState.getSelection();if(!selection.isCollapsed())return null;var content=editorState.getCurrentContent();var startKey=selection.getStartKey();var block=content.getBlockForKey(startKey);var length=block.getLength();if(selection.getStartOffset()<length)return null;var blockAfter=content.getBlockAfter(startKey);if(!blockAfter||blockAfter.getType()!=="atomic")return null;var atomicBlockTarget=selection.merge({focusKey:blockAfter.getKey(),focusOffset:blockAfter.getLength()});var withoutAtomicBlock=
DraftModifier.removeRange(content,atomicBlockTarget,"forward");if(withoutAtomicBlock!==content)return EditorState.push(editorState,withoutAtomicBlock,"remove-range");return null},onTab:function onTab(event,editorState,maxDepth){var selection=editorState.getSelection();var key=selection.getAnchorKey();if(key!==selection.getFocusKey())return editorState;var content=editorState.getCurrentContent();var block=content.getBlockForKey(key);var type=block.getType();if(type!=="unordered-list-item"&&type!==
"ordered-list-item")return editorState;event.preventDefault();var blockAbove=content.getBlockBefore(key);if(!blockAbove)return editorState;var typeAbove=blockAbove.getType();if(typeAbove!=="unordered-list-item"&&typeAbove!=="ordered-list-item")return editorState;var depth=block.getDepth();if(!event.shiftKey&&depth===maxDepth)return editorState;maxDepth=Math.min(blockAbove.getDepth()+1,maxDepth);var withAdjustment=adjustBlockDepthForContentState(content,selection,event.shiftKey?-1:1,maxDepth);return EditorState.push(editorState,
withAdjustment,"adjust-depth")},toggleBlockType:function toggleBlockType(editorState,blockType){var selection=editorState.getSelection();var startKey=selection.getStartKey();var endKey=selection.getEndKey();var content=editorState.getCurrentContent();var target=selection;if(startKey!==endKey&&selection.getEndOffset()===0){var blockBefore=nullthrows(content.getBlockBefore(endKey));endKey=blockBefore.getKey();target=target.merge({anchorKey:startKey,anchorOffset:selection.getStartOffset(),focusKey:endKey,
focusOffset:blockBefore.getLength(),isBackward:false})}var hasAtomicBlock=content.getBlockMap().skipWhile(function(_,k){return k!==startKey}).reverse().skipWhile(function(_,k){return k!==endKey}).some(function(v){return v.getType()==="atomic"});if(hasAtomicBlock)return editorState;var typeToSet=content.getBlockForKey(startKey).getType()===blockType?"unstyled":blockType;return EditorState.push(editorState,DraftModifier.setBlockType(content,target,typeToSet),"change-block-type")},toggleCode:function toggleCode(editorState){var selection=
editorState.getSelection();var anchorKey=selection.getAnchorKey();var focusKey=selection.getFocusKey();if(selection.isCollapsed()||anchorKey!==focusKey)return RichTextEditorUtil.toggleBlockType(editorState,"code-block");return RichTextEditorUtil.toggleInlineStyle(editorState,"CODE")},toggleInlineStyle:function toggleInlineStyle(editorState,inlineStyle){var selection=editorState.getSelection();var currentStyle=editorState.getCurrentInlineStyle();if(selection.isCollapsed())return EditorState.setInlineStyleOverride(editorState,
currentStyle.has(inlineStyle)?currentStyle.remove(inlineStyle):currentStyle.add(inlineStyle));var content=editorState.getCurrentContent();var newContent;if(currentStyle.has(inlineStyle))newContent=DraftModifier.removeInlineStyle(content,selection,inlineStyle);else newContent=DraftModifier.applyInlineStyle(content,selection,inlineStyle);return EditorState.push(editorState,newContent,"change-inline-style")},toggleLink:function toggleLink(editorState,targetSelection,entityKey){var withoutLink=DraftModifier.applyEntity(editorState.getCurrentContent(),
targetSelection,entityKey);return EditorState.push(editorState,withoutLink,"apply-entity")},tryToRemoveBlockStyle:function tryToRemoveBlockStyle(editorState){var selection=editorState.getSelection();var offset=selection.getAnchorOffset();if(selection.isCollapsed()&&offset===0){var key=selection.getAnchorKey();var content=editorState.getCurrentContent();var block=content.getBlockForKey(key);var firstBlock=content.getFirstBlock();if(block.getLength()>0&&block!==firstBlock)return null;var type=block.getType();
var blockBefore=content.getBlockBefore(key);if(type==="code-block"&&blockBefore&&blockBefore.getType()==="code-block"&&blockBefore.getLength()!==0)return null;if(type!=="unstyled")return DraftModifier.setBlockType(content,selection,"unstyled")}return null}};module.exports=RichTextEditorUtil}
//# sourceMappingURL=module$node_modules$draft_js$lib$RichTextEditorUtil.js.map
