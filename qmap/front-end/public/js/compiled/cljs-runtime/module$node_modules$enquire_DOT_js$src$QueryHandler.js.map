{
"version":3,
"file":"module$node_modules$enquire_DOT_js$src$QueryHandler.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,qDAAf,CAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAWrIC,QAASA,aAAY,CAACC,OAAD,CAAU,CAC3B,IAAAA,QAAA,CAAeA,OACf,EAACA,OAAAC,WAAD,EAAuB,IAAAC,MAAA,EAFI,CAK/BH,YAAAI,UAAA,CAAyB,CAErBC,YAAcL,YAFO,CASrBG,MAAQA,QAAQ,EAAG,CACf,GAAG,IAAAF,QAAAE,MAAH,CACI,IAAAF,QAAAE,MAAA,EAEJ,KAAAG,YAAA,CAAmB,IAJJ,CATE,CAqBrBC,GAAKA,QAAQ,EAAG,CACZ,CAAC,IAAAD,YAAD,EAAqB,IAAAH,MAAA,EACrB,KAAAF,QAAAO,MAAA,EAAsB,IAAAP,QAAAO,MAAA,EAFV,CArBK,CA+BrBC,IAAMA,QAAQ,EAAG,CACb,IAAAR,QAAAS,QAAA,EAAwB,IAAAT,QAAAS,QAAA,EADX,CA/BI,CAyCrBC,QAAUA,QAAQ,EAAG,CACjB,IAAAV,QAAAU,QAAA;AAAuB,IAAAV,QAAAU,QAAA,EAAvB,CAAgD,IAAAF,IAAA,EAD/B,CAzCA,CAoDrBG,OAASA,QAAQ,CAACC,MAAD,CAAS,CACtB,MAAO,KAAAZ,QAAP,GAAwBY,MAAxB,EAAkC,IAAAZ,QAAAO,MAAlC,GAAyDK,MADnC,CApDL,CA0DzBhB,OAAAC,QAAA,CAAiBE,YA1EoH;",
"sources":["node_modules/enquire_DOT_js/src/QueryHandler.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$enquire_DOT_js$src$QueryHandler\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n    this.options = options;\n    !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n\n    constructor : QueryHandler,\n\n    /**\n     * coordinates setup of the handler\n     *\n     * @function\n     */\n    setup : function() {\n        if(this.options.setup) {\n            this.options.setup();\n        }\n        this.initialised = true;\n    },\n\n    /**\n     * coordinates setup and triggering of the handler\n     *\n     * @function\n     */\n    on : function() {\n        !this.initialised && this.setup();\n        this.options.match && this.options.match();\n    },\n\n    /**\n     * coordinates the unmatch event for the handler\n     *\n     * @function\n     */\n    off : function() {\n        this.options.unmatch && this.options.unmatch();\n    },\n\n    /**\n     * called when a handler is to be destroyed.\n     * delegates to the destroy or unmatch callbacks, depending on availability.\n     *\n     * @function\n     */\n    destroy : function() {\n        this.options.destroy ? this.options.destroy() : this.off();\n    },\n\n    /**\n     * determines equality by reference.\n     * if object is supplied compare options, if function, compare match callback\n     *\n     * @function\n     * @param {object || function} [target] the target for comparison\n     */\n    equals : function(target) {\n        return this.options === target || this.options.match === target;\n    }\n\n};\n\nmodule.exports = QueryHandler;\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","QueryHandler","options","deferSetup","setup","prototype","constructor","initialised","on","match","off","unmatch","destroy","equals","target"]
}
