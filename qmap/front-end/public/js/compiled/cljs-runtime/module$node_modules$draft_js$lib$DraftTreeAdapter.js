shadow$provide["module$node_modules$draft_js$lib$DraftTreeAdapter"]=function(global,process,require,module,exports,shadow$shims){var _assign=require("module$node_modules$object_assign$index");var _extends=_assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)if(Object.prototype.hasOwnProperty.call(source,key))target[key]=source[key]}return target};var invariant=require("module$node_modules$fbjs$lib$invariant");var traverseInDepthOrder=function traverseInDepthOrder(blocks,
fn){var stack=[].concat(blocks).reverse();while(stack.length){var _block=stack.pop();fn(_block);var children=_block.children;!Array.isArray(children)?"development"!=="production"?invariant(false,"Invalid tree raw block"):invariant(false):void 0;stack=stack.concat([].concat(children.reverse()))}};var isListBlock=function isListBlock(block){if(!(block&&block.type))return false;var type=block.type;return type==="unordered-list-item"||type==="ordered-list-item"};var addDepthToChildren=function addDepthToChildren(block){if(Array.isArray(block.children))block.children=
block.children.map(function(child){return child.type===block.type?_extends({},child,{depth:(block.depth||0)+1}):child})};var DraftTreeAdapter={fromRawTreeStateToRawState:function fromRawTreeStateToRawState(draftTreeState){var blocks=draftTreeState.blocks;var transformedBlocks=[];!Array.isArray(blocks)?"development"!=="production"?invariant(false,"Invalid raw state"):invariant(false):void 0;if(!Array.isArray(blocks)||!blocks.length)return draftTreeState;traverseInDepthOrder(blocks,function(block){var newBlock=
_extends({},block);if(isListBlock(block)){newBlock.depth=newBlock.depth||0;addDepthToChildren(block)}delete newBlock.children;transformedBlocks.push(newBlock)});draftTreeState.blocks=transformedBlocks;return _extends({},draftTreeState,{blocks:transformedBlocks})},fromRawStateToRawTreeState:function fromRawStateToRawTreeState(draftState){var lastListDepthCacheRef={};var transformedBlocks=[];draftState.blocks.forEach(function(block){var isList=isListBlock(block);var depth=block.depth||0;var treeBlock=
_extends({},block,{children:[]});if(!isList){lastListDepthCacheRef={};transformedBlocks.push(treeBlock);return}lastListDepthCacheRef[depth]=treeBlock;if(depth>0){var parent=lastListDepthCacheRef[depth-1];!parent?"development"!=="production"?invariant(false,"Invalid depth for RawDraftContentBlock"):invariant(false):void 0;parent.children.push(treeBlock);return}transformedBlocks.push(treeBlock)});return _extends({},draftState,{blocks:transformedBlocks})}};module.exports=DraftTreeAdapter}
//# sourceMappingURL=module$node_modules$draft_js$lib$DraftTreeAdapter.js.map
