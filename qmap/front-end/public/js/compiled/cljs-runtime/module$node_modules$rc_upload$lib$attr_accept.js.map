{
"version":3,
"file":"module$node_modules$rc_upload$lib$attr_accept.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAe,+CAAf,CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG/HC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,IADoC,CAA7C,CAGAC,SAASA,SAAQ,CAACC,GAAD,CAAMC,MAAN,CAAc,CAC7B,MAAOD,IAAAE,QAAA,CAAYD,MAAZ,CAAoBD,GAAAG,OAApB,CAAiCF,MAAAE,OAAjC,CAAP,GAA4D,EAD/B,CAI/BT,OAAA,CAAQ,SAAR,CAAA,CAAqB,QAAS,CAACU,IAAD,CAAOC,aAAP,CAAsB,CAClD,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACzB,IAAIC,mBAAqBC,KAAAC,QAAA,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAAI,MAAA,CAAoB,GAApB,CACxE,KAAIC,SAAWN,IAAAO,KAAXD,EAAwB,EAC5B,KAAIE,SAAWR,IAAAS,KAAXD,EAAwB,EAC5B,KAAIE;AAAeF,QAAAG,QAAA,CAAiB,OAAjB,CAA0B,EAA1B,CAEnB,OAAOT,mBAAAU,KAAA,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAAK,KAAA,EAChB,IAAID,SAAAE,OAAA,CAAiB,CAAjB,CAAJ,GAA4B,GAA5B,CACE,MAAOpB,SAAA,CAASW,QAAAU,YAAA,EAAT,CAAiCH,SAAAG,YAAA,EAAjC,CADT,KAEO,IAAI,OAAAC,KAAA,CAAaJ,SAAb,CAAJ,CAEL,MAAOH,aAAP,GAAwBG,SAAAF,QAAA,CAAkB,OAAlB,CAA2B,EAA3B,CAE1B,OAAOH,SAAP,GAAoBK,SARyB,CAAxC,CANkB,CAiB3B,MAAO,KAlB2C,CAqBpDxB,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CA/B8G;",
"sources":["node_modules/rc-upload/lib/attr-accept.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nexports['default'] = function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n};\n\nmodule.exports = exports['default'];\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","Object","defineProperty","value","endsWith","str","suffix","indexOf","length","file","acceptedFiles","acceptedFilesArray","Array","isArray","split","fileName","name","mimeType","type","baseMimeType","replace","some","validType","trim","charAt","toLowerCase","test"]
}
