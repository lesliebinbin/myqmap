{
"version":3,
"file":"module$node_modules$setimmediate$setImmediate.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/setimmediate/setImmediate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$setimmediate$setImmediate\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6\u20138\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","undefined","setImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","registerImmediate","callback","Function","args","Array","arguments","length","i","task","clearImmediate","handle","run","apply","runIfPresent","setTimeout","installNextTickImplementation","nextTick","canUsePostMessage","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","global.onmessage","installPostMessageImplementation","messagePrefix","Math","random","onGlobalMessage","event","source","data","indexOf","slice","addEventListener","attachEvent","installMessageChannelImplementation","channel","MessageChannel","port1","channel.port1.onmessage","port2","installReadyStateChangeImplementation","html","documentElement","script","createElement","onreadystatechange","script.onreadystatechange","removeChild","appendChild","installSetTimeoutImplementation","attachTo","Object","getPrototypeOf","toString","call","self"]
}
