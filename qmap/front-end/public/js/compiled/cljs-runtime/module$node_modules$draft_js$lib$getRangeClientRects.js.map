{
"version":3,
"file":"module$node_modules$draft_js$lib$getRangeClientRects.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,sDAAf,CAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBtI,IAAIC,UAAYJ,OAAA,CAAQ,wCAAR,CAEhB,KAAIK,UAAYL,OAAA,CAAQ,wCAAR,CAEhB,KAAIM,SAAWF,SAAAG,UAAA,CAAoB,QAApB,CAQfC,SAASA,0BAAyB,CAACC,KAAD,CAAQ,CACxC,IAAIC,UAAYD,KAAAE,WAAA,EAChB,KAAIC,YAAc,EAElB,KAAK,IAAIC,SAAWJ,KAAAK,aAApB,CAAwCD,QAAxC,EAAoD,IAApD,CAA0DA,QAA1D,CAAqEA,QAAAE,WAArE,CAA0F,CAGxF,IAAIC,iBAAmBH,QAAnBG;AAAgCP,KAAAQ,wBACpC,IAAID,gBAAJ,CACEN,SAAAQ,SAAA,CAAmBT,KAAAU,eAAnB,CAAyCV,KAAAW,YAAzC,CADF,KAGEV,UAAAQ,SAAA,CAAmBR,SAAAI,aAAnB,CAA2C,CAA3C,CAEF,KAAIO,MAAQC,KAAAC,KAAA,CAAWb,SAAAc,eAAA,EAAX,CACZZ,YAAAa,KAAA,CAAiBJ,KAAjB,CACA,IAAIL,gBAAJ,CAAsB,CACpB,IAAIU,IAEJd,YAAAe,QAAA,EACA,OAAOC,CAACF,IAADE,CAAQ,EAARA,QAAAC,MAAA,CAAyBH,IAAzB,CAA+Bd,WAA/B,CAJa,CAMtBF,SAAAoB,aAAA,CAAuBjB,QAAvB,CAjBwF,CAoB1F,CAAC,KAAD,CAASkB,aAAA,GAAyB,YAAzB,CAAwC1B,SAAA,CAAU,KAAV,CAAiB,uEAAjB,CAAxC,CAAoIA,SAAA,CAAU,KAAV,CAA7I;AAAgK,IAAK,EAxB7H,CA+B1C,IAAI2B,oBAAsB1B,QAAA,CAAWE,yBAAX,CAAuC,QAAS,CAACC,KAAD,CAAQ,CAChF,MAAOa,MAAAC,KAAA,CAAWd,KAAAe,eAAA,EAAX,CADyE,CAIlFvB,OAAAC,QAAA,CAAiB8B,mBA/DqH;",
"sources":["node_modules/draft-js/lib/getRangeClientRects.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$draft_js$lib$getRangeClientRects\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getRangeClientRects\n * @format\n * \n */\n\n'use strict';\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar isChrome = UserAgent.isBrowser('Chrome');\n\n// In Chrome, the client rects will include the entire bounds of all nodes that\n// begin (have a start tag) within the selection, even if the selection does\n// not overlap the entire node. To resolve this, we split the range at each\n// start tag and join the client rects together.\n// https://code.google.com/p/chromium/issues/detail?id=324437\n/* eslint-disable consistent-return */\nfunction getRangeClientRectsChrome(range) {\n  var tempRange = range.cloneRange();\n  var clientRects = [];\n\n  for (var ancestor = range.endContainer; ancestor != null; ancestor = ancestor.parentNode) {\n    // If we've climbed up to the common ancestor, we can now use the\n    // original start point and stop climbing the tree.\n    var atCommonAncestor = ancestor === range.commonAncestorContainer;\n    if (atCommonAncestor) {\n      tempRange.setStart(range.startContainer, range.startOffset);\n    } else {\n      tempRange.setStart(tempRange.endContainer, 0);\n    }\n    var rects = Array.from(tempRange.getClientRects());\n    clientRects.push(rects);\n    if (atCommonAncestor) {\n      var _ref;\n\n      clientRects.reverse();\n      return (_ref = []).concat.apply(_ref, clientRects);\n    }\n    tempRange.setEndBefore(ancestor);\n  }\n\n  !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Found an unexpected detached subtree when getting range client rects.') : invariant(false) : void 0;\n}\n/* eslint-enable consistent-return */\n\n/**\n * Like range.getClientRects() but normalizes for browser bugs.\n */\nvar getRangeClientRects = isChrome ? getRangeClientRectsChrome : function (range) {\n  return Array.from(range.getClientRects());\n};\n\nmodule.exports = getRangeClientRects;\n};"],
"names":["shadow$provide","global","process","require","module","exports","shadow$shims","UserAgent","invariant","isChrome","isBrowser","getRangeClientRectsChrome","range","tempRange","cloneRange","clientRects","ancestor","endContainer","parentNode","atCommonAncestor","commonAncestorContainer","setStart","startContainer","startOffset","rects","Array","from","getClientRects","push","_ref","reverse","concat","apply","setEndBefore","NODE_ENV","getRangeClientRects"]
}
